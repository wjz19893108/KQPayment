// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "ProtocolBuffers.h"

// @@protoc_insertion_point(imports)

@class Content;
@class ContentActivity;
@class ContentActivityBuilder;
@class ContentAppInfo;
@class ContentAppInfoBuilder;
@class ContentAppUpInfo;
@class ContentAppUpInfoBuilder;
@class ContentAteTradeOrder;
@class ContentAteTradeOrderBuilder;
@class ContentAtpProd;
@class ContentAtpProdBuilder;
@class ContentAtpTradeOrder;
@class ContentAtpTradeOrderBuilder;
@class ContentBank;
@class ContentBankBuilder;
@class ContentBankInfo;
@class ContentBankInfoBuilder;
@class ContentBankLimitAmountDto;
@class ContentBankLimitAmountDtoBuilder;
@class ContentBuilder;
@class ContentCardInfo;
@class ContentCardInfoBuilder;
@class ContentCommonZipInfo;
@class ContentCommonZipInfoBuilder;
@class ContentConflictAcc;
@class ContentConflictAccBuilder;
@class ContentContract;
@class ContentContractBuilder;
@class ContentCreditOrder;
@class ContentCreditOrderBuilder;
@class ContentDivide;
@class ContentDivideBuilder;
@class ContentEquityInfo;
@class ContentEquityInfoBuilder;
@class ContentExtMap;
@class ContentExtMapBuilder;
@class ContentFinancialInfo;
@class ContentFinancialInfoBuilder;
@class ContentFrozenInfo;
@class ContentFrozenInfoBuilder;
@class ContentInstalment;
@class ContentInstalmentBuilder;
@class ContentInterest;
@class ContentInterestBuilder;
@class ContentMember;
@class ContentMemberAuthDto;
@class ContentMemberAuthDtoBuilder;
@class ContentMemberBuilder;
@class ContentMemberIdentity;
@class ContentMemberIdentityBuilder;
@class ContentMemberTwo;
@class ContentMemberTwoBuilder;
@class ContentMsgInfo;
@class ContentMsgInfoBuilder;
@class ContentMsgTypeInfo;
@class ContentMsgTypeInfoBuilder;
@class ContentOrderInfo;
@class ContentOrderInfoBuilder;
@class ContentPayMethod;
@class ContentPayMethodBuilder;
@class ContentPayType;
@class ContentPayTypeBuilder;
@class ContentProdAccountInfo;
@class ContentProdAccountInfoBuilder;
@class ContentProductGroup;
@class ContentProductGroupBuilder;
@class ContentProductInfo;
@class ContentProductInfoBuilder;
@class ContentProductItem;
@class ContentProductItemBuilder;
@class ContentQueryAllFinaprodResponse;
@class ContentQueryAllFinaprodResponseBuilder;
@class ContentQueryWalletBill99BillResponse;
@class ContentQueryWalletBill99BillResponseBuilder;
@class ContentRepayOrder;
@class ContentRepayOrderBuilder;
@class ContentRepayRecord;
@class ContentRepayRecordBuilder;
@class ContentResourceInfo;
@class ContentResourceInfoBuilder;
@class ContentResult;
@class ContentResultBuilder;
@class ContentSeedData;
@class ContentSeedDataBuilder;
@class ContentShareInfo;
@class ContentShareInfoBuilder;
@class ContentSolidCard;
@class ContentSolidCardBuilder;
@class ContentSummarizeInfo;
@class ContentSummarizeInfoBuilder;
@class ContentTxnInfo;
@class ContentTxnInfoBuilder;
@class ContentUserAppLoginInfo;
@class ContentUserAppLoginInfoBuilder;
@class ContentVoucher;
@class ContentVoucherBuilder;
@class ContentWithdrawLimit;
@class ContentWithdrawLimitBuilder;



@interface MsgRoot : NSObject {
}
+ (PBExtensionRegistry*) extensionRegistry;
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry;
@end

#define Content_password @"password"
#define Content_businessType @"businessType"
#define Content_termId @"termId"
#define Content_payPassword @"payPassword"
#define Content_bankId @"bankId"
#define Content_bankName @"bankName"
#define Content_orderId @"orderId"
#define Content_amt @"amt"
#define Content_token @"token"
#define Content_validateCode @"validateCode"
#define Content_termTxnTime @"termTxnTime"
#define Content_idType @"idType"
#define Content_holderName @"holderName"
#define Content_expireDate @"expireDate"
#define Content_vaType @"vaType"
#define Content_pan @"pan"
#define Content_shortPan @"shortPan"
#define Content_phoneNo @"phoneNo"
#define Content_authDebitBankNames @"authDebitBankNames"
#define Content_cardId @"cardId"
#define Content_txnType @"txnType"
#define Content_productCode @"productCode"
#define Content_id @"id"
#define Content_name @"name"
#define Content_province @"province"
#define Content_city @"city"
#define Content_pageNo @"pageNo"
#define Content_startDate @"startDate"
#define Content_endDate @"endDate"
#define Content_status @"status"
#define Content_optionType @"optionType"
#define Content_securityQuestion @"securityQuestion"
#define Content_securityAnswer @"securityAnswer"
#define Content_cardType @"cardType"
#define Content_email @"email"
#define Content_uniQrCode @"uniQrCode"
#define Content_productType @"productType"
#define Content_address @"address"
#define Content_resendFlag @"resendFlag"
#define Content_passwordType @"passwordType"
#define Content_cvv2 @"cvv2"
#define Content_refreshToken @"refreshToken"
#define Content_idTxnCtrl @"idTxnCtrl"
#define Content_extData1 @"extData1"
#define Content_authBankIds @"authBankIds"
#define Content_authDebitBankIds @"authDebitBankIds"
#define Content_authBankNames @"authBankNames"
#define Content_branchBank @"branchBank"
#define Content_txnFlag @"txnFlag"
#define Content_authCode @"authCode"
#define Content_txnTime @"txnTime"
#define Content_signFlag @"signFlag"
#define Content_productName @"productName"
#define Content_zoneType @"zoneType"
#define Content_pin @"pin"
#define Content_origOrderId @"origOrderId"
#define Content_count @"count"
#define Content_remark @"remark"
#define Content_memAcctcodeName @"memAcctcodeName"
#define Content_memAcctcodeBalance @"memAcctcodeBalance"
#define Content_existFlg @"existFlg"
#define Content_payeeNotes @"payeeNotes"
#define Content_realNameFlg @"realNameFlg"
#define Content_bindPhoneFlg @"bindPhoneFlg"
#define Content_firstLoginFlg @"firstLoginFlg"
#define Content_totalAmt @"totalAmt"
#define Content_totalCount @"totalCount"
#define Content_orderType @"orderType"
#define Content_certId @"certId"
#define Content_recommendId @"recommendId"
#define Content_orderCode @"orderCode"
#define Content_max @"max"
#define Content_statusSet @"statusSet"
#define Content_outTradeNo @"outTradeNo"
#define Content_appInfo @"appInfo"
#define Content_bank @"bank"
#define Content_member @"member"
#define Content_memberIdentity @"memberIdentity"
#define Content_safeProblem @"safeProblem"
#define Content_queryWalletBill99BillResponse @"queryWalletBill99BillResponse"
#define Content_atpProd @"atpProd"
#define Content_tradeId @"tradeId"
#define Content_endTime @"endTime"
#define Content_solidCard @"solidCard"
#define Content_userFlag @"userFlag"
#define Content_idCardNo @"idCardNo"
#define Content_idCardImg @"idCardImg"
#define Content_photo @"photo"
#define Content_isDisplay @"isDisplay"
#define Content_shortPhones @"shortPhones"
#define Content_ripAmount @"ripAmount"
#define Content_memberAuthDto @"memberAuthDto"
#define Content_bankLimitAmountDto @"bankLimitAmountDto"
#define Content_occupation @"occupation"
#define Content_partnerUserId @"partnerUserId"
#define Content_memberBankAcctId @"memberBankAcctId"
#define Content_expiresIn @"expiresIn"
#define Content_appUpInfo @"appUpInfo"
#define Content_keyboardSeq @"keyboardSeq"
#define Content_imgCode @"imgCode"
#define Content_imgToken @"imgToken"
#define Content_validateToken @"validateToken"
#define Content_errorType @"errorType"
#define Content_flag @"flag"
#define Content_queryAllFinaprodResponse @"queryAllFinaprodResponse"
#define Content_finProdType @"finProdType"
#define Content_tradeType @"tradeType"
#define Content_prodStatus @"prodStatus"
#define Content_queryOrders @"queryOrders"
#define Content_horizonTo @"horizonTo"
#define Content_returnRateExp @"returnRateExp"
#define Content_atpTradeOrder @"atpTradeOrder"
#define Content_totalFrozenAmt @"totalFrozenAmt"
#define Content_fee @"fee"
#define Content_transFeeRate @"transFeeRate"
#define Content_bankNameID @"bankNameId"
#define Content_financialInfo @"financialInfo"
#define Content_prodAccountInfo @"prodAccountInfo"
#define Content_isMainOrder @"isMainOrder"
#define Content_merchantId @"merchantId"
#define Content_merchantName @"merchantName"
#define Content_osVersion @"osVersion"
#define Content_isRoot @"isRoot"
#define Content_size @"size"
#define Content_phoneModel @"phoneModel"
#define Content_wifiName @"wifiName"
#define Content_wifiMac @"wifiMac"
#define Content_appId @"appId"
#define Content_merchantCode @"merchantCode"
#define Content_billOrderNo @"billOrderNo"
#define Content_channelType @"channelType"
#define Content_orderAmount @"orderAmount"
#define Content_payMode @"payMode"
#define Content_payAmount @"payAmount"
#define Content_orderStatus @"orderStatus"
#define Content_outOrderType @"outOrderType"
#define Content_txnTimeStart @"txnTimeStart"
#define Content_txnTimeExpire @"txnTimeExpire"
#define Content_payStatus @"payStatus"
#define Content_productInfo @"productInfo"
#define Content_payMethod @"payMethod"
#define Content_outEquityCode @"outEquityCode"
#define Content_outEquityAmount @"outEquityAmount"
#define Content_payMethodId @"payMethodId"
#define Content_instalment @"instalment"
#define Content_instalmentId @"instalmentId"
#define Content_txnEndTime @"txnEndTime"
#define Content_validateElement @"validateElement"
#define Content_sMsCode @"sMsCode"
#define Content_voucher @"voucher"
#define Content_ateTradeOrder @"ateTradeOrder"
#define Content_equityAmount @"equityAmount"
#define Content_supportFinger @"supportFinger"
#define Content_type @"type"
#define Content_tradeStatus @"tradeStatus"
#define Content_productDesc @"productDesc"
#define Content_subMerchantName @"subMerchantName"
#define Content_memo @"memo"
#define Content_notifyMode @"notifyMode"
#define Content_memberList @"memberList"
#define Content_gpsInfo @"gpsInfo"
#define Content_publishNo @"publishNo"
#define Content_resolution @"resolution"
#define Content_msgTypeId @"msgTypeId"
#define Content_lastRecordId @"lastRecordId"
#define Content_scollUp @"scollUp"
#define Content_jsonCallBack @"jsonCallBack"
#define Content_msgTypeInfo @"msgTypeInfo"
#define Content_msgInfo @"msgInfo"
#define Content_msgId @"msgId"
#define Content_resourceInfo @"resourceInfo"
#define Content_commonZipInfo @"commonZipInfo"
#define Content_shareInfo @"shareInfo"
#define Content_resourceId @"resourceId"
#define Content_vcsBizType @"vcsBizType"
#define Content_msg @"msg"
#define Content_repayCode @"repayCode"
#define Content_userAppLoginInfo @"userAppLoginInfo"
#define Content_resultType @"resultType"
#define Content_conflictAcc @"conflictAcc"
#define Content_sysFrom @"sysFrom"
#define Content_loginPin @"loginPin"
#define Content_newLoginPin @"newLoginPin"
#define Content_payPwd @"payPwd"
#define Content_newPayPwd @"newPayPwd"
#define Content_payPwdResetFlag @"payPwdResetFlag"
#define Content_sex @"sex"
#define Content_birthday @"birthday"
#define Content_nationality @"nationality"
#define Content_issuingAuthority @"issuingAuthority"
#define Content_cardInfo @"cardInfo"
#define Content_summarizeInfo @"summarizeInfo"
#define Content_currentPage @"currentPage"
#define Content_pageSize @"pageSize"
#define Content_txnInfo @"txnInfo"
#define Content_applyTime @"applyTime"
#define Content_totalFee @"totalFee"
#define Content_tipInfo @"tipInfo"
#define Content_checkCode @"checkCode"
#define Content_total @"total"
#define Content_repayAmt @"repayAmt"
#define Content_billOrderId @"billOrderId"
#define Content_txnAcctNo @"txnAcctNo"
#define Content_lastRowNum @"lastRowNum"
#define Content_info @"info"
#define Content_creditOrder @"creditOrder"
#define Content_repayStatus @"repayStatus"
#define Content_interest @"interest"
#define Content_returnAmt @"returnAmt"
#define Content_stages @"stages"
#define Content_divide @"divide"
#define Content_repayOrder @"repayOrder"
#define Content_payTypes @"payTypes"
#define Content_payType @"payType"
#define Content_repayRecord @"repayRecord"
#define Content_accountAmt @"accountAmt"
#define Content_statusName @"statusName"
#define Content_forceFaceCheck @"forceFaceCheck"
#define Content_allowRepay @"allowRepay"
#define Content_locationProvince @"locationProvince"
#define Content_locationCity @"locationCity"
#define Content_locationDistrict @"locationDistrict"
#define Content_locationAddress @"locationAddress"
#define Content_kakaUrl @"kakaUrl"
#define Content_doudouUrl @"doudouUrl"
#define Content_repayId @"repayId"
#define Content_contract @"contract"
#define Content_url @"url"
#define Content_frozenInfo @"frozenInfo"
#define Content_fcsCreditAmt @"fcsCreditAmt"
#define Content_leftFcsCreditAmt @"leftFcsCreditAmt"
#define Content_fcsCreditAmtStatus @"fcsCreditAmtStatus"
#define Content_fcsCreditAmtType @"fcsCreditAmtType"
#define Content_fcsCreditUrl @"fcsCreditUrl"
#define Content_leftCreditAmtName @"leftCreditAmtName"
#define Content_totalCreditAmtName @"totalCreditAmtName"
#define Content_fcsCreditName @"fcsCreditName"
#define Content_fcsName @"fcsName"
#define Content_quotaShowType @"quotaShowType"
#define Content_fcsMerchantName @"fcsMerchantName"
#define Content_leftFcsCreditName @"leftFcsCreditName"
#define Content_supplementInfo @"supplementInfo"
#define Content_extInfo @"extInfo"
#define Content_sort @"sort"
#define Content_quotaList @"quotaList"
#define Content_isShowPreQuotaAmt @"isShowPreQuotaAmt"
#define Content_preFcsAmt @"preFcsAmt"
#define Content_preFcsUrl @"preFcsUrl"
#define Content_freeList @"freeList"
#define Content_userGrade @"userGrade"
#define Content_memberTwo @"memberTwo"
#define Content_mebCode @"mebCode"
#define Content_userName @"userName"
#define Content_lastRequestTime @"lastRequestTime"
#define Content_cardInfoObject @"cardInfoObject"
#define Content_orderInfo @"orderInfo"
#define Content_productGroup @"productGroup"
#define Content_amtType @"amtType"
#define Content_withdrawLimit @"withdrawLimit"
#define Content_equityCode @"equityCode"
#define Content_functionCode @"functionCode"
#define Content_twSign @"twSign"
#define Content_leftSumAmt @"leftSumAmt"
#define Content_virtualOrderAmt @"virtualOrderAmt"
#define Content_sumCreditAmt @"sumCreditAmt"
#define Content_showVoucher @"showVoucher"
#define Content_equityInfo @"equityInfo"
#define Content_activity @"activity"
#define Content_billId @"billId"
#define Content_siedc @"siedc"
#define Content_interests @"interests"
#define Content_queryInterval @"queryInterval"
#define Content_queryTimes @"queryTimes"
#define Content_stlMerchantCode @"stlMerchantCode"
#define Content_equityMessage @"equityMessage"
#define Content_outEquityMessage @"outEquityMessage"
#define Content_seedData @"seedData"
#define Content_extMap @"extMap"
@interface Content : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasPassword_:1;
  BOOL hasBusinessType_:1;
  BOOL hasTermId_:1;
  BOOL hasPayPassword_:1;
  BOOL hasBankId_:1;
  BOOL hasBankName_:1;
  BOOL hasOrderId_:1;
  BOOL hasAmt_:1;
  BOOL hasToken_:1;
  BOOL hasValidateCode_:1;
  BOOL hasTermTxnTime_:1;
  BOOL hasIdType_:1;
  BOOL hasHolderName_:1;
  BOOL hasExpireDate_:1;
  BOOL hasVaType_:1;
  BOOL hasPan_:1;
  BOOL hasShortPan_:1;
  BOOL hasPhoneNo_:1;
  BOOL hasAuthDebitBankNames_:1;
  BOOL hasCardId_:1;
  BOOL hasTxnType_:1;
  BOOL hasProductCode_:1;
  BOOL hasId_:1;
  BOOL hasName_:1;
  BOOL hasProvince_:1;
  BOOL hasCity_:1;
  BOOL hasPageNo_:1;
  BOOL hasStartDate_:1;
  BOOL hasEndDate_:1;
  BOOL hasStatus_:1;
  BOOL hasOptionType_:1;
  BOOL hasSecurityQuestion_:1;
  BOOL hasSecurityAnswer_:1;
  BOOL hasCardType_:1;
  BOOL hasEmail_:1;
  BOOL hasUniQrCode_:1;
  BOOL hasProductType_:1;
  BOOL hasAddress_:1;
  BOOL hasResendFlag_:1;
  BOOL hasPasswordType_:1;
  BOOL hasCvv2_:1;
  BOOL hasRefreshToken_:1;
  BOOL hasIdTxnCtrl_:1;
  BOOL hasExtData1_:1;
  BOOL hasAuthBankIds_:1;
  BOOL hasAuthDebitBankIds_:1;
  BOOL hasAuthBankNames_:1;
  BOOL hasBranchBank_:1;
  BOOL hasTxnFlag_:1;
  BOOL hasAuthCode_:1;
  BOOL hasTxnTime_:1;
  BOOL hasSignFlag_:1;
  BOOL hasProductName_:1;
  BOOL hasZoneType_:1;
  BOOL hasPin_:1;
  BOOL hasOrigOrderId_:1;
  BOOL hasCount_:1;
  BOOL hasRemark_:1;
  BOOL hasMemAcctcodeName_:1;
  BOOL hasMemAcctcodeBalance_:1;
  BOOL hasExistFlg_:1;
  BOOL hasPayeeNotes_:1;
  BOOL hasRealNameFlg_:1;
  BOOL hasBindPhoneFlg_:1;
  BOOL hasFirstLoginFlg_:1;
  BOOL hasTotalAmt_:1;
  BOOL hasTotalCount_:1;
  BOOL hasOrderType_:1;
  BOOL hasCertId_:1;
  BOOL hasRecommendId_:1;
  BOOL hasOrderCode_:1;
  BOOL hasMax_:1;
  BOOL hasStatusSet_:1;
  BOOL hasOutTradeNo_:1;
  BOOL hasOutEquityMessage_:1;
  BOOL hasEquityMessage_:1;
  BOOL hasStlMerchantCode_:1;
  BOOL hasQueryTimes_:1;
  BOOL hasQueryInterval_:1;
  BOOL hasSiedc_:1;
  BOOL hasBillId_:1;
  BOOL hasTradeId_:1;
  BOOL hasEndTime_:1;
  BOOL hasShowVoucher_:1;
  BOOL hasUserFlag_:1;
  BOOL hasIdCardNo_:1;
  BOOL hasIdCardImg_:1;
  BOOL hasPhoto_:1;
  BOOL hasIsDisplay_:1;
  BOOL hasShortPhones_:1;
  BOOL hasRipAmount_:1;
  BOOL hasSumCreditAmt_:1;
  BOOL hasVirtualOrderAmt_:1;
  BOOL hasOccupation_:1;
  BOOL hasPartnerUserId_:1;
  BOOL hasMemberBankAcctId_:1;
  BOOL hasExpiresIn_:1;
  BOOL hasLeftSumAmt_:1;
  BOOL hasKeyboardSeq_:1;
  BOOL hasImgCode_:1;
  BOOL hasImgToken_:1;
  BOOL hasValidateToken_:1;
  BOOL hasErrorType_:1;
  BOOL hasFlag_:1;
  BOOL hasTwSign_:1;
  BOOL hasFinProdType_:1;
  BOOL hasTradeType_:1;
  BOOL hasProdStatus_:1;
  BOOL hasQueryOrders_:1;
  BOOL hasHorizonTo_:1;
  BOOL hasReturnRateExp_:1;
  BOOL hasFunctionCode_:1;
  BOOL hasTotalFrozenAmt_:1;
  BOOL hasFee_:1;
  BOOL hasTransFeeRate_:1;
  BOOL hasBankNameId_:1;
  BOOL hasEquityCode_:1;
  BOOL hasAmtType_:1;
  BOOL hasIsMainOrder_:1;
  BOOL hasMerchantId_:1;
  BOOL hasMerchantName_:1;
  BOOL hasOsVersion_:1;
  BOOL hasIsRoot_:1;
  BOOL hasSize_:1;
  BOOL hasPhoneModel_:1;
  BOOL hasWifiName_:1;
  BOOL hasWifiMac_:1;
  BOOL hasAppId_:1;
  BOOL hasMerchantCode_:1;
  BOOL hasBillOrderNo_:1;
  BOOL hasChannelType_:1;
  BOOL hasOrderAmount_:1;
  BOOL hasPayMode_:1;
  BOOL hasPayAmount_:1;
  BOOL hasOrderStatus_:1;
  BOOL hasOutOrderType_:1;
  BOOL hasTxnTimeStart_:1;
  BOOL hasTxnTimeExpire_:1;
  BOOL hasPayStatus_:1;
  BOOL hasLastRequestTime_:1;
  BOOL hasUserName_:1;
  BOOL hasOutEquityCode_:1;
  BOOL hasOutEquityAmount_:1;
  BOOL hasPayMethodId_:1;
  BOOL hasMebCode_:1;
  BOOL hasInstalmentId_:1;
  BOOL hasTxnEndTime_:1;
  BOOL hasValidateElement_:1;
  BOOL hasSMsCode_:1;
  BOOL hasUserGrade_:1;
  BOOL hasPreFcsUrl_:1;
  BOOL hasEquityAmount_:1;
  BOOL hasSupportFinger_:1;
  BOOL hasType_:1;
  BOOL hasTradeStatus_:1;
  BOOL hasProductDesc_:1;
  BOOL hasSubMerchantName_:1;
  BOOL hasMemo_:1;
  BOOL hasNotifyMode_:1;
  BOOL hasPreFcsAmt_:1;
  BOOL hasGpsInfo_:1;
  BOOL hasPublishNo_:1;
  BOOL hasResolution_:1;
  BOOL hasMsgTypeId_:1;
  BOOL hasLastRecordId_:1;
  BOOL hasScollUp_:1;
  BOOL hasJsonCallBack_:1;
  BOOL hasIsShowPreQuotaAmt_:1;
  BOOL hasSort_:1;
  BOOL hasMsgId_:1;
  BOOL hasExtInfo_:1;
  BOOL hasSupplementInfo_:1;
  BOOL hasLeftFcsCreditName_:1;
  BOOL hasResourceId_:1;
  BOOL hasVcsBizType_:1;
  BOOL hasMsg_:1;
  BOOL hasRepayCode_:1;
  BOOL hasFcsMerchantName_:1;
  BOOL hasResultType_:1;
  BOOL hasQuotaShowType_:1;
  BOOL hasSysFrom_:1;
  BOOL hasLoginPin_:1;
  BOOL hasNewLoginPin_:1;
  BOOL hasPayPwd_:1;
  BOOL hasNewPayPwd_:1;
  BOOL hasPayPwdResetFlag_:1;
  BOOL hasSex_:1;
  BOOL hasBirthday_:1;
  BOOL hasNationality_:1;
  BOOL hasIssuingAuthority_:1;
  BOOL hasFcsName_:1;
  BOOL hasFcsCreditName_:1;
  BOOL hasCurrentPage_:1;
  BOOL hasPageSize_:1;
  BOOL hasTotalCreditAmtName_:1;
  BOOL hasApplyTime_:1;
  BOOL hasTotalFee_:1;
  BOOL hasTipInfo_:1;
  BOOL hasCheckCode_:1;
  BOOL hasTotal_:1;
  BOOL hasRepayAmt_:1;
  BOOL hasBillOrderId_:1;
  BOOL hasTxnAcctNo_:1;
  BOOL hasLastRowNum_:1;
  BOOL hasInfo_:1;
  BOOL hasLeftCreditAmtName_:1;
  BOOL hasRepayStatus_:1;
  BOOL hasInterest_:1;
  BOOL hasReturnAmt_:1;
  BOOL hasStages_:1;
  BOOL hasFcsCreditUrl_:1;
  BOOL hasFcsCreditAmtType_:1;
  BOOL hasFcsCreditAmtStatus_:1;
  BOOL hasPayType_:1;
  BOOL hasLeftFcsCreditAmt_:1;
  BOOL hasAccountAmt_:1;
  BOOL hasStatusName_:1;
  BOOL hasForceFaceCheck_:1;
  BOOL hasAllowRepay_:1;
  BOOL hasLocationProvince_:1;
  BOOL hasLocationCity_:1;
  BOOL hasLocationDistrict_:1;
  BOOL hasLocationAddress_:1;
  BOOL hasKakaUrl_:1;
  BOOL hasDoudouUrl_:1;
  BOOL hasRepayId_:1;
  BOOL hasFcsCreditAmt_:1;
  BOOL hasUrl_:1;
  BOOL hasFrozenInfo_:1;
  BOOL hasProductInfo_:1;
  BOOL hasAppInfo_:1;
  BOOL hasMember_:1;
  BOOL hasMemberAuthDto_:1;
  BOOL hasAppUpInfo_:1;
  BOOL hasFinancialInfo_:1;
  BOOL hasSummarizeInfo_:1;
  BOOL hasOrderInfo_:1;
  BOOL hasCardInfoObject_:1;
  BOOL hasMemberTwo_:1;
  NSString* password;
  NSString* businessType;
  NSString* termId;
  NSString* payPassword;
  NSString* bankId;
  NSString* bankName;
  NSString* orderId;
  NSString* amt;
  NSString* token;
  NSString* validateCode;
  NSString* termTxnTime;
  NSString* idType;
  NSString* holderName;
  NSString* expireDate;
  NSString* vaType;
  NSString* pan;
  NSString* shortPan;
  NSString* phoneNo;
  NSString* authDebitBankNames;
  NSString* cardId;
  NSString* txnType;
  NSString* productCode;
  NSString* id;
  NSString* name;
  NSString* province;
  NSString* city;
  NSString* pageNo;
  NSString* startDate;
  NSString* endDate;
  NSString* status;
  NSString* optionType;
  NSString* securityQuestion;
  NSString* securityAnswer;
  NSString* cardType;
  NSString* email;
  NSString* uniQrCode;
  NSString* productType;
  NSString* address;
  NSString* resendFlag;
  NSString* passwordType;
  NSString* cvv2;
  NSString* refreshToken;
  NSString* idTxnCtrl;
  NSString* extData1;
  NSString* authBankIds;
  NSString* authDebitBankIds;
  NSString* authBankNames;
  NSString* branchBank;
  NSString* txnFlag;
  NSString* authCode;
  NSString* txnTime;
  NSString* signFlag;
  NSString* productName;
  NSString* zoneType;
  NSString* pin;
  NSString* origOrderId;
  NSString* count;
  NSString* remark;
  NSString* memAcctcodeName;
  NSString* memAcctcodeBalance;
  NSString* existFlg;
  NSString* payeeNotes;
  NSString* realNameFlg;
  NSString* bindPhoneFlg;
  NSString* firstLoginFlg;
  NSString* totalAmt;
  NSString* totalCount;
  NSString* orderType;
  NSString* certId;
  NSString* recommendId;
  NSString* orderCode;
  NSString* max;
  NSString* statusSet;
  NSString* outTradeNo;
  NSString* outEquityMessage;
  NSString* equityMessage;
  NSString* stlMerchantCode;
  NSString* queryTimes;
  NSString* queryInterval;
  NSString* siedc;
  NSString* billId;
  NSString* tradeId;
  NSString* endTime;
  NSString* showVoucher;
  NSString* userFlag;
  NSString* idCardNo;
  NSString* idCardImg;
  NSString* photo;
  NSString* isDisplay;
  NSString* shortPhones;
  NSString* ripAmount;
  NSString* sumCreditAmt;
  NSString* virtualOrderAmt;
  NSString* occupation;
  NSString* partnerUserId;
  NSString* memberBankAcctId;
  NSString* expiresIn;
  NSString* leftSumAmt;
  NSString* keyboardSeq;
  NSString* imgCode;
  NSString* imgToken;
  NSString* validateToken;
  NSString* errorType;
  NSString* flag;
  NSString* twSign;
  NSString* finProdType;
  NSString* tradeType;
  NSString* prodStatus;
  NSString* queryOrders;
  NSString* horizonTo;
  NSString* returnRateExp;
  NSString* functionCode;
  NSString* totalFrozenAmt;
  NSString* fee;
  NSString* transFeeRate;
  NSString* bankNameId;
  NSString* equityCode;
  NSString* amtType;
  NSString* isMainOrder;
  NSString* merchantId;
  NSString* merchantName;
  NSString* osVersion;
  NSString* isRoot;
  NSString* size;
  NSString* phoneModel;
  NSString* wifiName;
  NSString* wifiMac;
  NSString* appId;
  NSString* merchantCode;
  NSString* billOrderNo;
  NSString* channelType;
  NSString* orderAmount;
  NSString* payMode;
  NSString* payAmount;
  NSString* orderStatus;
  NSString* outOrderType;
  NSString* txnTimeStart;
  NSString* txnTimeExpire;
  NSString* payStatus;
  NSString* lastRequestTime;
  NSString* userName;
  NSString* outEquityCode;
  NSString* outEquityAmount;
  NSString* payMethodId;
  NSString* mebCode;
  NSString* instalmentId;
  NSString* txnEndTime;
  NSString* validateElement;
  NSString* sMsCode;
  NSString* userGrade;
  NSString* preFcsUrl;
  NSString* equityAmount;
  NSString* supportFinger;
  NSString* type;
  NSString* tradeStatus;
  NSString* productDesc;
  NSString* subMerchantName;
  NSString* memo;
  NSString* notifyMode;
  NSString* preFcsAmt;
  NSString* gpsInfo;
  NSString* publishNo;
  NSString* resolution;
  NSString* msgTypeId;
  NSString* lastRecordId;
  NSString* scollUp;
  NSString* jsonCallBack;
  NSString* isShowPreQuotaAmt;
  NSString* sort;
  NSString* msgId;
  NSString* extInfo;
  NSString* supplementInfo;
  NSString* leftFcsCreditName;
  NSString* resourceId;
  NSString* vcsBizType;
  NSString* msg;
  NSString* repayCode;
  NSString* fcsMerchantName;
  NSString* resultType;
  NSString* quotaShowType;
  NSString* sysFrom;
  NSString* loginPin;
  NSString* newLoginPin;
  NSString* payPwd;
  NSString* newPayPwd;
  NSString* payPwdResetFlag;
  NSString* sex;
  NSString* birthday;
  NSString* nationality;
  NSString* issuingAuthority;
  NSString* fcsName;
  NSString* fcsCreditName;
  NSString* currentPage;
  NSString* pageSize;
  NSString* totalCreditAmtName;
  NSString* applyTime;
  NSString* totalFee;
  NSString* tipInfo;
  NSString* checkCode;
  NSString* total;
  NSString* repayAmt;
  NSString* billOrderId;
  NSString* txnAcctNo;
  NSString* lastRowNum;
  NSString* info;
  NSString* leftCreditAmtName;
  NSString* repayStatus;
  NSString* interest;
  NSString* returnAmt;
  NSString* stages;
  NSString* fcsCreditUrl;
  NSString* fcsCreditAmtType;
  NSString* fcsCreditAmtStatus;
  NSString* payType;
  NSString* leftFcsCreditAmt;
  NSString* accountAmt;
  NSString* statusName;
  NSString* forceFaceCheck;
  NSString* allowRepay;
  NSString* locationProvince;
  NSString* locationCity;
  NSString* locationDistrict;
  NSString* locationAddress;
  NSString* kakaUrl;
  NSString* doudouUrl;
  NSString* repayId;
  NSString* fcsCreditAmt;
  NSString* url;
  ContentFrozenInfo* frozenInfo;
  ContentProductInfo* productInfo;
  ContentAppInfo* appInfo;
  ContentMember* member;
  ContentMemberAuthDto* memberAuthDto;
  ContentAppUpInfo* appUpInfo;
  ContentFinancialInfo* financialInfo;
  ContentSummarizeInfo* summarizeInfo;
  ContentOrderInfo* orderInfo;
  ContentCardInfo* cardInfoObject;
  ContentMemberTwo* memberTwo;
  NSMutableArray * safeProblemArray;
  NSMutableArray * shareInfoArray;
  NSMutableArray * commonZipInfoArray;
  NSMutableArray * resourceInfoArray;
  NSMutableArray * msgInfoArray;
  NSMutableArray * quotaListArray;
  NSMutableArray * msgTypeInfoArray;
  NSMutableArray * memberListArray;
  NSMutableArray * ateTradeOrderArray;
  NSMutableArray * freeListArray;
  NSMutableArray * voucherArray;
  NSMutableArray * userAppLoginInfoArray;
  NSMutableArray * instalmentArray;
  NSMutableArray * payMethodArray;
  NSMutableArray * contractArray;
  NSMutableArray * conflictAccArray;
  NSMutableArray * cardInfoArray;
  NSMutableArray * productGroupArray;
  NSMutableArray * prodAccountInfoArray;
  NSMutableArray * withdrawLimitArray;
  NSMutableArray * txnInfoArray;
  NSMutableArray * atpTradeOrderArray;
  NSMutableArray * queryAllFinaprodResponseArray;
  NSMutableArray * creditOrderArray;
  NSMutableArray * bankLimitAmountDtoArray;
  NSMutableArray * divideArray;
  NSMutableArray * solidCardArray;
  NSMutableArray * equityInfoArray;
  NSMutableArray * activityArray;
  NSMutableArray * atpProdArray;
  NSMutableArray * queryWalletBill99BillResponseArray;
  NSMutableArray * interestsArray;
  NSMutableArray * repayOrderArray;
  NSMutableArray * memberIdentityArray;
  NSMutableArray * payTypesArray;
  NSMutableArray * bankArray;
  NSMutableArray * repayRecordArray;
  NSMutableArray * seedDataArray;
  NSMutableArray * extMapArray;
}
- (BOOL) hasPassword;
- (BOOL) hasBusinessType;
- (BOOL) hasTermId;
- (BOOL) hasPayPassword;
- (BOOL) hasBankId;
- (BOOL) hasBankName;
- (BOOL) hasOrderId;
- (BOOL) hasAmt;
- (BOOL) hasToken;
- (BOOL) hasValidateCode;
- (BOOL) hasTermTxnTime;
- (BOOL) hasIdType;
- (BOOL) hasHolderName;
- (BOOL) hasExpireDate;
- (BOOL) hasVaType;
- (BOOL) hasPan;
- (BOOL) hasShortPan;
- (BOOL) hasPhoneNo;
- (BOOL) hasAuthDebitBankNames;
- (BOOL) hasCardId;
- (BOOL) hasTxnType;
- (BOOL) hasProductCode;
- (BOOL) hasId;
- (BOOL) hasName;
- (BOOL) hasProvince;
- (BOOL) hasCity;
- (BOOL) hasPageNo;
- (BOOL) hasStartDate;
- (BOOL) hasEndDate;
- (BOOL) hasStatus;
- (BOOL) hasOptionType;
- (BOOL) hasSecurityQuestion;
- (BOOL) hasSecurityAnswer;
- (BOOL) hasCardType;
- (BOOL) hasEmail;
- (BOOL) hasUniQrCode;
- (BOOL) hasProductType;
- (BOOL) hasAddress;
- (BOOL) hasResendFlag;
- (BOOL) hasPasswordType;
- (BOOL) hasCvv2;
- (BOOL) hasRefreshToken;
- (BOOL) hasIdTxnCtrl;
- (BOOL) hasExtData1;
- (BOOL) hasAuthBankIds;
- (BOOL) hasAuthDebitBankIds;
- (BOOL) hasAuthBankNames;
- (BOOL) hasBranchBank;
- (BOOL) hasTxnFlag;
- (BOOL) hasAuthCode;
- (BOOL) hasTxnTime;
- (BOOL) hasSignFlag;
- (BOOL) hasProductName;
- (BOOL) hasZoneType;
- (BOOL) hasPin;
- (BOOL) hasOrigOrderId;
- (BOOL) hasCount;
- (BOOL) hasRemark;
- (BOOL) hasMemAcctcodeName;
- (BOOL) hasMemAcctcodeBalance;
- (BOOL) hasExistFlg;
- (BOOL) hasPayeeNotes;
- (BOOL) hasRealNameFlg;
- (BOOL) hasBindPhoneFlg;
- (BOOL) hasFirstLoginFlg;
- (BOOL) hasTotalAmt;
- (BOOL) hasTotalCount;
- (BOOL) hasOrderType;
- (BOOL) hasCertId;
- (BOOL) hasRecommendId;
- (BOOL) hasOrderCode;
- (BOOL) hasMax;
- (BOOL) hasStatusSet;
- (BOOL) hasOutTradeNo;
- (BOOL) hasAppInfo;
- (BOOL) hasMember;
- (BOOL) hasTradeId;
- (BOOL) hasEndTime;
- (BOOL) hasUserFlag;
- (BOOL) hasIdCardNo;
- (BOOL) hasIdCardImg;
- (BOOL) hasPhoto;
- (BOOL) hasIsDisplay;
- (BOOL) hasShortPhones;
- (BOOL) hasRipAmount;
- (BOOL) hasMemberAuthDto;
- (BOOL) hasOccupation;
- (BOOL) hasPartnerUserId;
- (BOOL) hasMemberBankAcctId;
- (BOOL) hasExpiresIn;
- (BOOL) hasAppUpInfo;
- (BOOL) hasKeyboardSeq;
- (BOOL) hasImgCode;
- (BOOL) hasImgToken;
- (BOOL) hasValidateToken;
- (BOOL) hasErrorType;
- (BOOL) hasFlag;
- (BOOL) hasFinProdType;
- (BOOL) hasTradeType;
- (BOOL) hasProdStatus;
- (BOOL) hasQueryOrders;
- (BOOL) hasHorizonTo;
- (BOOL) hasReturnRateExp;
- (BOOL) hasTotalFrozenAmt;
- (BOOL) hasFee;
- (BOOL) hasTransFeeRate;
- (BOOL) hasBankNameId;
- (BOOL) hasFinancialInfo;
- (BOOL) hasIsMainOrder;
- (BOOL) hasMerchantId;
- (BOOL) hasMerchantName;
- (BOOL) hasOsVersion;
- (BOOL) hasIsRoot;
- (BOOL) hasSize;
- (BOOL) hasPhoneModel;
- (BOOL) hasWifiName;
- (BOOL) hasWifiMac;
- (BOOL) hasAppId;
- (BOOL) hasMerchantCode;
- (BOOL) hasBillOrderNo;
- (BOOL) hasChannelType;
- (BOOL) hasOrderAmount;
- (BOOL) hasPayMode;
- (BOOL) hasPayAmount;
- (BOOL) hasOrderStatus;
- (BOOL) hasOutOrderType;
- (BOOL) hasTxnTimeStart;
- (BOOL) hasTxnTimeExpire;
- (BOOL) hasPayStatus;
- (BOOL) hasProductInfo;
- (BOOL) hasOutEquityCode;
- (BOOL) hasOutEquityAmount;
- (BOOL) hasPayMethodId;
- (BOOL) hasInstalmentId;
- (BOOL) hasTxnEndTime;
- (BOOL) hasValidateElement;
- (BOOL) hasSMsCode;
- (BOOL) hasEquityAmount;
- (BOOL) hasSupportFinger;
- (BOOL) hasType;
- (BOOL) hasTradeStatus;
- (BOOL) hasProductDesc;
- (BOOL) hasSubMerchantName;
- (BOOL) hasMemo;
- (BOOL) hasNotifyMode;
- (BOOL) hasGpsInfo;
- (BOOL) hasPublishNo;
- (BOOL) hasResolution;
- (BOOL) hasMsgTypeId;
- (BOOL) hasLastRecordId;
- (BOOL) hasScollUp;
- (BOOL) hasJsonCallBack;
- (BOOL) hasMsgId;
- (BOOL) hasResourceId;
- (BOOL) hasVcsBizType;
- (BOOL) hasMsg;
- (BOOL) hasRepayCode;
- (BOOL) hasResultType;
- (BOOL) hasSysFrom;
- (BOOL) hasLoginPin;
- (BOOL) hasNewLoginPin;
- (BOOL) hasPayPwd;
- (BOOL) hasNewPayPwd;
- (BOOL) hasPayPwdResetFlag;
- (BOOL) hasSex;
- (BOOL) hasBirthday;
- (BOOL) hasNationality;
- (BOOL) hasIssuingAuthority;
- (BOOL) hasSummarizeInfo;
- (BOOL) hasCurrentPage;
- (BOOL) hasPageSize;
- (BOOL) hasApplyTime;
- (BOOL) hasTotalFee;
- (BOOL) hasTipInfo;
- (BOOL) hasCheckCode;
- (BOOL) hasTotal;
- (BOOL) hasRepayAmt;
- (BOOL) hasBillOrderId;
- (BOOL) hasTxnAcctNo;
- (BOOL) hasLastRowNum;
- (BOOL) hasInfo;
- (BOOL) hasRepayStatus;
- (BOOL) hasInterest;
- (BOOL) hasReturnAmt;
- (BOOL) hasStages;
- (BOOL) hasPayType;
- (BOOL) hasAccountAmt;
- (BOOL) hasStatusName;
- (BOOL) hasForceFaceCheck;
- (BOOL) hasAllowRepay;
- (BOOL) hasLocationProvince;
- (BOOL) hasLocationCity;
- (BOOL) hasLocationDistrict;
- (BOOL) hasLocationAddress;
- (BOOL) hasKakaUrl;
- (BOOL) hasDoudouUrl;
- (BOOL) hasRepayId;
- (BOOL) hasUrl;
- (BOOL) hasFrozenInfo;
- (BOOL) hasFcsCreditAmt;
- (BOOL) hasLeftFcsCreditAmt;
- (BOOL) hasFcsCreditAmtStatus;
- (BOOL) hasFcsCreditAmtType;
- (BOOL) hasFcsCreditUrl;
- (BOOL) hasLeftCreditAmtName;
- (BOOL) hasTotalCreditAmtName;
- (BOOL) hasFcsCreditName;
- (BOOL) hasFcsName;
- (BOOL) hasQuotaShowType;
- (BOOL) hasFcsMerchantName;
- (BOOL) hasLeftFcsCreditName;
- (BOOL) hasSupplementInfo;
- (BOOL) hasExtInfo;
- (BOOL) hasSort;
- (BOOL) hasIsShowPreQuotaAmt;
- (BOOL) hasPreFcsAmt;
- (BOOL) hasPreFcsUrl;
- (BOOL) hasUserGrade;
- (BOOL) hasMemberTwo;
- (BOOL) hasMebCode;
- (BOOL) hasUserName;
- (BOOL) hasLastRequestTime;
- (BOOL) hasCardInfoObject;
- (BOOL) hasOrderInfo;
- (BOOL) hasAmtType;
- (BOOL) hasEquityCode;
- (BOOL) hasFunctionCode;
- (BOOL) hasTwSign;
- (BOOL) hasLeftSumAmt;
- (BOOL) hasVirtualOrderAmt;
- (BOOL) hasSumCreditAmt;
- (BOOL) hasShowVoucher;
- (BOOL) hasBillId;
- (BOOL) hasSiedc;
- (BOOL) hasQueryInterval;
- (BOOL) hasQueryTimes;
- (BOOL) hasStlMerchantCode;
- (BOOL) hasEquityMessage;
- (BOOL) hasOutEquityMessage;
@property (readonly, strong) NSString* password;
@property (readonly, strong) NSString* businessType;
@property (readonly, strong) NSString* termId;
@property (readonly, strong) NSString* payPassword;
@property (readonly, strong) NSString* bankId;
@property (readonly, strong) NSString* bankName;
@property (readonly, strong) NSString* orderId;
@property (readonly, strong) NSString* amt;
@property (readonly, strong) NSString* token;
@property (readonly, strong) NSString* validateCode;
@property (readonly, strong) NSString* termTxnTime;
@property (readonly, strong) NSString* idType;
@property (readonly, strong) NSString* holderName;
@property (readonly, strong) NSString* expireDate;
@property (readonly, strong) NSString* vaType;
@property (readonly, strong) NSString* pan;
@property (readonly, strong) NSString* shortPan;
@property (readonly, strong) NSString* phoneNo;
@property (readonly, strong) NSString* authDebitBankNames;
@property (readonly, strong) NSString* cardId;
@property (readonly, strong) NSString* txnType;
@property (readonly, strong) NSString* productCode;
@property (readonly, strong) NSString* id;
@property (readonly, strong) NSString* name;
@property (readonly, strong) NSString* province;
@property (readonly, strong) NSString* city;
@property (readonly, strong) NSString* pageNo;
@property (readonly, strong) NSString* startDate;
@property (readonly, strong) NSString* endDate;
@property (readonly, strong) NSString* status;
@property (readonly, strong) NSString* optionType;
@property (readonly, strong) NSString* securityQuestion;
@property (readonly, strong) NSString* securityAnswer;
@property (readonly, strong) NSString* cardType;
@property (readonly, strong) NSString* email;
@property (readonly, strong) NSString* uniQrCode;
@property (readonly, strong) NSString* productType;
@property (readonly, strong) NSString* address;
@property (readonly, strong) NSString* resendFlag;
@property (readonly, strong) NSString* passwordType;
@property (readonly, strong) NSString* cvv2;
@property (readonly, strong) NSString* refreshToken;
@property (readonly, strong) NSString* idTxnCtrl;
@property (readonly, strong) NSString* extData1;
@property (readonly, strong) NSString* authBankIds;
@property (readonly, strong) NSString* authDebitBankIds;
@property (readonly, strong) NSString* authBankNames;
@property (readonly, strong) NSString* branchBank;
@property (readonly, strong) NSString* txnFlag;
@property (readonly, strong) NSString* authCode;
@property (readonly, strong) NSString* txnTime;
@property (readonly, strong) NSString* signFlag;
@property (readonly, strong) NSString* productName;
@property (readonly, strong) NSString* zoneType;
@property (readonly, strong) NSString* pin;
@property (readonly, strong) NSString* origOrderId;
@property (readonly, strong) NSString* count;
@property (readonly, strong) NSString* remark;
@property (readonly, strong) NSString* memAcctcodeName;
@property (readonly, strong) NSString* memAcctcodeBalance;
@property (readonly, strong) NSString* existFlg;
@property (readonly, strong) NSString* payeeNotes;
@property (readonly, strong) NSString* realNameFlg;
@property (readonly, strong) NSString* bindPhoneFlg;
@property (readonly, strong) NSString* firstLoginFlg;
@property (readonly, strong) NSString* totalAmt;
@property (readonly, strong) NSString* totalCount;
@property (readonly, strong) NSString* orderType;
@property (readonly, strong) NSString* certId;
@property (readonly, strong) NSString* recommendId;
@property (readonly, strong) NSString* orderCode;
@property (readonly, strong) NSString* max;
@property (readonly, strong) NSString* statusSet;
@property (readonly, strong) NSString* outTradeNo;
@property (readonly, strong) ContentAppInfo* appInfo;
@property (readonly, strong) NSArray * bank;
@property (readonly, strong) ContentMember* member;
@property (readonly, strong) NSArray * memberIdentity;
@property (readonly, strong) NSArray * safeProblem;
@property (readonly, strong) NSArray * queryWalletBill99BillResponse;
@property (readonly, strong) NSArray * atpProd;
@property (readonly, strong) NSString* tradeId;
@property (readonly, strong) NSString* endTime;
@property (readonly, strong) NSArray * solidCard;
@property (readonly, strong) NSString* userFlag;
@property (readonly, strong) NSString* idCardNo;
@property (readonly, strong) NSString* idCardImg;
@property (readonly, strong) NSString* photo;
@property (readonly, strong) NSString* isDisplay;
@property (readonly, strong) NSString* shortPhones;
@property (readonly, strong) NSString* ripAmount;
@property (readonly, strong) ContentMemberAuthDto* memberAuthDto;
@property (readonly, strong) NSArray * bankLimitAmountDto;
@property (readonly, strong) NSString* occupation;
@property (readonly, strong) NSString* partnerUserId;
@property (readonly, strong) NSString* memberBankAcctId;
@property (readonly, strong) NSString* expiresIn;
@property (readonly, strong) ContentAppUpInfo* appUpInfo;
@property (readonly, strong) NSString* keyboardSeq;
@property (readonly, strong) NSString* imgCode;
@property (readonly, strong) NSString* imgToken;
@property (readonly, strong) NSString* validateToken;
@property (readonly, strong) NSString* errorType;
@property (readonly, strong) NSString* flag;
@property (readonly, strong) NSArray * queryAllFinaprodResponse;
@property (readonly, strong) NSString* finProdType;
@property (readonly, strong) NSString* tradeType;
@property (readonly, strong) NSString* prodStatus;
@property (readonly, strong) NSString* queryOrders;
@property (readonly, strong) NSString* horizonTo;
@property (readonly, strong) NSString* returnRateExp;
@property (readonly, strong) NSArray * atpTradeOrder;
@property (readonly, strong) NSString* totalFrozenAmt;
@property (readonly, strong) NSString* fee;
@property (readonly, strong) NSString* transFeeRate;
@property (readonly, strong) NSString* bankNameId;
@property (readonly, strong) ContentFinancialInfo* financialInfo;
@property (readonly, strong) NSArray * prodAccountInfo;
@property (readonly, strong) NSString* isMainOrder;
@property (readonly, strong) NSString* merchantId;
@property (readonly, strong) NSString* merchantName;
@property (readonly, strong) NSString* osVersion;
@property (readonly, strong) NSString* isRoot;
@property (readonly, strong) NSString* size;
@property (readonly, strong) NSString* phoneModel;
@property (readonly, strong) NSString* wifiName;
@property (readonly, strong) NSString* wifiMac;
@property (readonly, strong) NSString* appId;
@property (readonly, strong) NSString* merchantCode;
@property (readonly, strong) NSString* billOrderNo;
@property (readonly, strong) NSString* channelType;
@property (readonly, strong) NSString* orderAmount;
@property (readonly, strong) NSString* payMode;
@property (readonly, strong) NSString* payAmount;
@property (readonly, strong) NSString* orderStatus;
@property (readonly, strong) NSString* outOrderType;
@property (readonly, strong) NSString* txnTimeStart;
@property (readonly, strong) NSString* txnTimeExpire;
@property (readonly, strong) NSString* payStatus;
@property (readonly, strong) ContentProductInfo* productInfo;
@property (readonly, strong) NSArray * payMethod;
@property (readonly, strong) NSString* outEquityCode;
@property (readonly, strong) NSString* outEquityAmount;
@property (readonly, strong) NSString* payMethodId;
@property (readonly, strong) NSArray * instalment;
@property (readonly, strong) NSString* instalmentId;
@property (readonly, strong) NSString* txnEndTime;
@property (readonly, strong) NSString* validateElement;
@property (readonly, strong) NSString* sMsCode;
@property (readonly, strong) NSArray * voucher;
@property (readonly, strong) NSArray * ateTradeOrder;
@property (readonly, strong) NSString* equityAmount;
@property (readonly, strong) NSString* supportFinger;
@property (readonly, strong) NSString* type;
@property (readonly, strong) NSString* tradeStatus;
@property (readonly, strong) NSString* productDesc;
@property (readonly, strong) NSString* subMerchantName;
@property (readonly, strong) NSString* memo;
@property (readonly, strong) NSString* notifyMode;
@property (readonly, strong) NSArray * memberList;
@property (readonly, strong) NSString* gpsInfo;
@property (readonly, strong) NSString* publishNo;
@property (readonly, strong) NSString* resolution;
@property (readonly, strong) NSString* msgTypeId;
@property (readonly, strong) NSString* lastRecordId;
@property (readonly, strong) NSString* scollUp;
@property (readonly, strong) NSString* jsonCallBack;
@property (readonly, strong) NSArray * msgTypeInfo;
@property (readonly, strong) NSArray * msgInfo;
@property (readonly, strong) NSString* msgId;
@property (readonly, strong) NSArray * resourceInfo;
@property (readonly, strong) NSArray * commonZipInfo;
@property (readonly, strong) NSArray * shareInfo;
@property (readonly, strong) NSString* resourceId;
@property (readonly, strong) NSString* vcsBizType;
@property (readonly, strong) NSString* msg;
@property (readonly, strong) NSString* repayCode;
@property (readonly, strong) NSArray * userAppLoginInfo;
@property (readonly, strong) NSString* resultType;
@property (readonly, strong) NSArray * conflictAcc;
@property (readonly, strong) NSString* sysFrom;
@property (readonly, strong) NSString* loginPin;
@property (readonly, strong) NS_RETURNS_NOT_RETAINED NSString* newLoginPin;
@property (readonly, strong) NSString* payPwd;
@property (readonly, strong) NS_RETURNS_NOT_RETAINED NSString* newPayPwd;
@property (readonly, strong) NSString* payPwdResetFlag;
@property (readonly, strong) NSString* sex;
@property (readonly, strong) NSString* birthday;
@property (readonly, strong) NSString* nationality;
@property (readonly, strong) NSString* issuingAuthority;
@property (readonly, strong) NSArray * cardInfo;
@property (readonly, strong) ContentSummarizeInfo* summarizeInfo;
@property (readonly, strong) NSString* currentPage;
@property (readonly, strong) NSString* pageSize;
@property (readonly, strong) NSArray * txnInfo;
@property (readonly, strong) NSString* applyTime;
@property (readonly, strong) NSString* totalFee;
@property (readonly, strong) NSString* tipInfo;
@property (readonly, strong) NSString* checkCode;
@property (readonly, strong) NSString* total;
@property (readonly, strong) NSString* repayAmt;
@property (readonly, strong) NSString* billOrderId;
@property (readonly, strong) NSString* txnAcctNo;
@property (readonly, strong) NSString* lastRowNum;
@property (readonly, strong) NSString* info;
@property (readonly, strong) NSArray * creditOrder;
@property (readonly, strong) NSString* repayStatus;
@property (readonly, strong) NSString* interest;
@property (readonly, strong) NSString* returnAmt;
@property (readonly, strong) NSString* stages;
@property (readonly, strong) NSArray * divide;
@property (readonly, strong) NSArray * repayOrder;
@property (readonly, strong) NSArray * payTypes;
@property (readonly, strong) NSString* payType;
@property (readonly, strong) NSArray * repayRecord;
@property (readonly, strong) NSString* accountAmt;
@property (readonly, strong) NSString* statusName;
@property (readonly, strong) NSString* forceFaceCheck;
@property (readonly, strong) NSString* allowRepay;
@property (readonly, strong) NSString* locationProvince;
@property (readonly, strong) NSString* locationCity;
@property (readonly, strong) NSString* locationDistrict;
@property (readonly, strong) NSString* locationAddress;
@property (readonly, strong) NSString* kakaUrl;
@property (readonly, strong) NSString* doudouUrl;
@property (readonly, strong) NSString* repayId;
@property (readonly, strong) NSArray * contract;
@property (readonly, strong) NSString* url;
@property (readonly, strong) ContentFrozenInfo* frozenInfo;
@property (readonly, strong) NSString* fcsCreditAmt;
@property (readonly, strong) NSString* leftFcsCreditAmt;
@property (readonly, strong) NSString* fcsCreditAmtStatus;
@property (readonly, strong) NSString* fcsCreditAmtType;
@property (readonly, strong) NSString* fcsCreditUrl;
@property (readonly, strong) NSString* leftCreditAmtName;
@property (readonly, strong) NSString* totalCreditAmtName;
@property (readonly, strong) NSString* fcsCreditName;
@property (readonly, strong) NSString* fcsName;
@property (readonly, strong) NSString* quotaShowType;
@property (readonly, strong) NSString* fcsMerchantName;
@property (readonly, strong) NSString* leftFcsCreditName;
@property (readonly, strong) NSString* supplementInfo;
@property (readonly, strong) NSString* extInfo;
@property (readonly, strong) NSString* sort;
@property (readonly, strong) NSArray * quotaList;
@property (readonly, strong) NSString* isShowPreQuotaAmt;
@property (readonly, strong) NSString* preFcsAmt;
@property (readonly, strong) NSString* preFcsUrl;
@property (readonly, strong) NSArray * freeList;
@property (readonly, strong) NSString* userGrade;
@property (readonly, strong) ContentMemberTwo* memberTwo;
@property (readonly, strong) NSString* mebCode;
@property (readonly, strong) NSString* userName;
@property (readonly, strong) NSString* lastRequestTime;
@property (readonly, strong) ContentCardInfo* cardInfoObject;
@property (readonly, strong) ContentOrderInfo* orderInfo;
@property (readonly, strong) NSArray * productGroup;
@property (readonly, strong) NSString* amtType;
@property (readonly, strong) NSArray * withdrawLimit;
@property (readonly, strong) NSString* equityCode;
@property (readonly, strong) NSString* functionCode;
@property (readonly, strong) NSString* twSign;
@property (readonly, strong) NSString* leftSumAmt;
@property (readonly, strong) NSString* virtualOrderAmt;
@property (readonly, strong) NSString* sumCreditAmt;
@property (readonly, strong) NSString* showVoucher;
@property (readonly, strong) NSArray * equityInfo;
@property (readonly, strong) NSArray * activity;
@property (readonly, strong) NSString* billId;
@property (readonly, strong) NSString* siedc;
@property (readonly, strong) NSArray * interests;
@property (readonly, strong) NSString* queryInterval;
@property (readonly, strong) NSString* queryTimes;
@property (readonly, strong) NSString* stlMerchantCode;
@property (readonly, strong) NSString* equityMessage;
@property (readonly, strong) NSString* outEquityMessage;
@property (readonly, strong) NSArray * seedData;
@property (readonly, strong) NSArray * extMap;
- (ContentBank*)bankAtIndex:(NSUInteger)index;
- (ContentMemberIdentity*)memberIdentityAtIndex:(NSUInteger)index;
- (NSString*)safeProblemAtIndex:(NSUInteger)index;
- (ContentQueryWalletBill99BillResponse*)queryWalletBill99BillResponseAtIndex:(NSUInteger)index;
- (ContentAtpProd*)atpProdAtIndex:(NSUInteger)index;
- (ContentSolidCard*)solidCardAtIndex:(NSUInteger)index;
- (ContentBankLimitAmountDto*)bankLimitAmountDtoAtIndex:(NSUInteger)index;
- (ContentQueryAllFinaprodResponse*)queryAllFinaprodResponseAtIndex:(NSUInteger)index;
- (ContentAtpTradeOrder*)atpTradeOrderAtIndex:(NSUInteger)index;
- (ContentProdAccountInfo*)prodAccountInfoAtIndex:(NSUInteger)index;
- (ContentPayMethod*)payMethodAtIndex:(NSUInteger)index;
- (ContentInstalment*)instalmentAtIndex:(NSUInteger)index;
- (ContentVoucher*)voucherAtIndex:(NSUInteger)index;
- (ContentAteTradeOrder*)ateTradeOrderAtIndex:(NSUInteger)index;
- (ContentMemberTwo*)memberListAtIndex:(NSUInteger)index;
- (ContentMsgTypeInfo*)msgTypeInfoAtIndex:(NSUInteger)index;
- (ContentMsgInfo*)msgInfoAtIndex:(NSUInteger)index;
- (ContentResourceInfo*)resourceInfoAtIndex:(NSUInteger)index;
- (ContentCommonZipInfo*)commonZipInfoAtIndex:(NSUInteger)index;
- (ContentShareInfo*)shareInfoAtIndex:(NSUInteger)index;
- (ContentUserAppLoginInfo*)userAppLoginInfoAtIndex:(NSUInteger)index;
- (ContentConflictAcc*)conflictAccAtIndex:(NSUInteger)index;
- (ContentCardInfo*)cardInfoAtIndex:(NSUInteger)index;
- (ContentTxnInfo*)txnInfoAtIndex:(NSUInteger)index;
- (ContentCreditOrder*)creditOrderAtIndex:(NSUInteger)index;
- (ContentDivide*)divideAtIndex:(NSUInteger)index;
- (ContentRepayOrder*)repayOrderAtIndex:(NSUInteger)index;
- (ContentPayType*)payTypesAtIndex:(NSUInteger)index;
- (ContentRepayRecord*)repayRecordAtIndex:(NSUInteger)index;
- (ContentContract*)contractAtIndex:(NSUInteger)index;
- (ContentResult*)quotaListAtIndex:(NSUInteger)index;
- (ContentResult*)freeListAtIndex:(NSUInteger)index;
- (ContentProductGroup*)productGroupAtIndex:(NSUInteger)index;
- (ContentWithdrawLimit*)withdrawLimitAtIndex:(NSUInteger)index;
- (ContentEquityInfo*)equityInfoAtIndex:(NSUInteger)index;
- (ContentActivity*)activityAtIndex:(NSUInteger)index;
- (ContentInterest*)interestsAtIndex:(NSUInteger)index;
- (ContentSeedData*)seedDataAtIndex:(NSUInteger)index;
- (ContentExtMap*)extMapAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ContentBuilder*) builder;
+ (ContentBuilder*) builder;
+ (ContentBuilder*) builderWithPrototype:(Content*) prototype;
- (ContentBuilder*) toBuilder;

+ (Content*) parseFromData:(NSData*) data;
+ (Content*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Content*) parseFromInputStream:(NSInputStream*) input;
+ (Content*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Content*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (Content*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

#define ProductGroup_name @"name"
#define ProductGroup_icon @"icon"
#define ProductGroup_productItemList @"productItemList"
@interface ContentProductGroup : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasName_:1;
  BOOL hasIcon_:1;
  NSString* name;
  NSString* icon;
  NSMutableArray * productItemListArray;
}
- (BOOL) hasName;
- (BOOL) hasIcon;
@property (readonly, strong) NSString* name;
@property (readonly, strong) NSString* icon;
@property (readonly, strong) NSArray * productItemList;
- (ContentProductItem*)productItemListAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ContentProductGroupBuilder*) builder;
+ (ContentProductGroupBuilder*) builder;
+ (ContentProductGroupBuilder*) builderWithPrototype:(ContentProductGroup*) prototype;
- (ContentProductGroupBuilder*) toBuilder;

+ (ContentProductGroup*) parseFromData:(NSData*) data;
+ (ContentProductGroup*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentProductGroup*) parseFromInputStream:(NSInputStream*) input;
+ (ContentProductGroup*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentProductGroup*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ContentProductGroup*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ContentProductGroupBuilder : PBGeneratedMessageBuilder {
@private
  ContentProductGroup* resultProductGroup;
}

- (ContentProductGroup*) defaultInstance;

- (ContentProductGroupBuilder*) clear;
- (ContentProductGroupBuilder*) clone;

- (ContentProductGroup*) build;
- (ContentProductGroup*) buildPartial;

- (ContentProductGroupBuilder*) mergeFrom:(ContentProductGroup*) other;
- (ContentProductGroupBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ContentProductGroupBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasName;
- (NSString*) name;
- (ContentProductGroupBuilder*) setName:(NSString*) value;
- (ContentProductGroupBuilder*) clearName;

- (BOOL) hasIcon;
- (NSString*) icon;
- (ContentProductGroupBuilder*) setIcon:(NSString*) value;
- (ContentProductGroupBuilder*) clearIcon;

- (NSMutableArray *)productItemList;
- (ContentProductItem*)productItemListAtIndex:(NSUInteger)index;
- (ContentProductGroupBuilder *)addProductItemList:(ContentProductItem*)value;
- (ContentProductGroupBuilder *)setProductItemListArray:(NSArray *)array;
- (ContentProductGroupBuilder *)clearProductItemList;
@end

#define ProductItem_productCode @"productCode"
#define ProductItem_logoImage @"logoImage"
#define ProductItem_title @"title"
#define ProductItem_subTitle @"subTitle"
#define ProductItem_labelInfo @"labelInfo"
#define ProductItem_status @"status"
#define ProductItem_labelColor @"labelColor"
#define ProductItem_itemUrl @"itemUrl"
#define ProductItem_amountDesc @"amountDesc"
@interface ContentProductItem : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasProductCode_:1;
  BOOL hasLogoImage_:1;
  BOOL hasTitle_:1;
  BOOL hasSubTitle_:1;
  BOOL hasLabelInfo_:1;
  BOOL hasStatus_:1;
  BOOL hasLabelColor_:1;
  BOOL hasItemUrl_:1;
  BOOL hasAmountDesc_:1;
  NSString* productCode;
  NSString* logoImage;
  NSString* title;
  NSString* subTitle;
  NSString* labelInfo;
  NSString* status;
  NSString* labelColor;
  NSString* itemUrl;
  NSString* amountDesc;
}
- (BOOL) hasProductCode;
- (BOOL) hasLogoImage;
- (BOOL) hasTitle;
- (BOOL) hasSubTitle;
- (BOOL) hasLabelInfo;
- (BOOL) hasStatus;
- (BOOL) hasLabelColor;
- (BOOL) hasItemUrl;
- (BOOL) hasAmountDesc;
@property (readonly, strong) NSString* productCode;
@property (readonly, strong) NSString* logoImage;
@property (readonly, strong) NSString* title;
@property (readonly, strong) NSString* subTitle;
@property (readonly, strong) NSString* labelInfo;
@property (readonly, strong) NSString* status;
@property (readonly, strong) NSString* labelColor;
@property (readonly, strong) NSString* itemUrl;
@property (readonly, strong) NSString* amountDesc;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ContentProductItemBuilder*) builder;
+ (ContentProductItemBuilder*) builder;
+ (ContentProductItemBuilder*) builderWithPrototype:(ContentProductItem*) prototype;
- (ContentProductItemBuilder*) toBuilder;

+ (ContentProductItem*) parseFromData:(NSData*) data;
+ (ContentProductItem*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentProductItem*) parseFromInputStream:(NSInputStream*) input;
+ (ContentProductItem*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentProductItem*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ContentProductItem*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ContentProductItemBuilder : PBGeneratedMessageBuilder {
@private
  ContentProductItem* resultProductItem;
}

- (ContentProductItem*) defaultInstance;

- (ContentProductItemBuilder*) clear;
- (ContentProductItemBuilder*) clone;

- (ContentProductItem*) build;
- (ContentProductItem*) buildPartial;

- (ContentProductItemBuilder*) mergeFrom:(ContentProductItem*) other;
- (ContentProductItemBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ContentProductItemBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasProductCode;
- (NSString*) productCode;
- (ContentProductItemBuilder*) setProductCode:(NSString*) value;
- (ContentProductItemBuilder*) clearProductCode;

- (BOOL) hasLogoImage;
- (NSString*) logoImage;
- (ContentProductItemBuilder*) setLogoImage:(NSString*) value;
- (ContentProductItemBuilder*) clearLogoImage;

- (BOOL) hasTitle;
- (NSString*) title;
- (ContentProductItemBuilder*) setTitle:(NSString*) value;
- (ContentProductItemBuilder*) clearTitle;

- (BOOL) hasSubTitle;
- (NSString*) subTitle;
- (ContentProductItemBuilder*) setSubTitle:(NSString*) value;
- (ContentProductItemBuilder*) clearSubTitle;

- (BOOL) hasLabelInfo;
- (NSString*) labelInfo;
- (ContentProductItemBuilder*) setLabelInfo:(NSString*) value;
- (ContentProductItemBuilder*) clearLabelInfo;

- (BOOL) hasStatus;
- (NSString*) status;
- (ContentProductItemBuilder*) setStatus:(NSString*) value;
- (ContentProductItemBuilder*) clearStatus;

- (BOOL) hasLabelColor;
- (NSString*) labelColor;
- (ContentProductItemBuilder*) setLabelColor:(NSString*) value;
- (ContentProductItemBuilder*) clearLabelColor;

- (BOOL) hasItemUrl;
- (NSString*) itemUrl;
- (ContentProductItemBuilder*) setItemUrl:(NSString*) value;
- (ContentProductItemBuilder*) clearItemUrl;

- (BOOL) hasAmountDesc;
- (NSString*) amountDesc;
- (ContentProductItemBuilder*) setAmountDesc:(NSString*) value;
- (ContentProductItemBuilder*) clearAmountDesc;
@end

#define AtpProd_finProdType @"finProdType"
#define AtpProd_category @"category"
#define AtpProd_status @"status"
@interface ContentAtpProd : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasFinProdType_:1;
  BOOL hasCategory_:1;
  BOOL hasStatus_:1;
  NSString* finProdType;
  NSString* category;
  NSString* status;
}
- (BOOL) hasFinProdType;
- (BOOL) hasCategory;
- (BOOL) hasStatus;
@property (readonly, strong) NSString* finProdType;
@property (readonly, strong) NSString* category;
@property (readonly, strong) NSString* status;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ContentAtpProdBuilder*) builder;
+ (ContentAtpProdBuilder*) builder;
+ (ContentAtpProdBuilder*) builderWithPrototype:(ContentAtpProd*) prototype;
- (ContentAtpProdBuilder*) toBuilder;

+ (ContentAtpProd*) parseFromData:(NSData*) data;
+ (ContentAtpProd*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentAtpProd*) parseFromInputStream:(NSInputStream*) input;
+ (ContentAtpProd*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentAtpProd*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ContentAtpProd*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ContentAtpProdBuilder : PBGeneratedMessageBuilder {
@private
  ContentAtpProd* resultAtpProd;
}

- (ContentAtpProd*) defaultInstance;

- (ContentAtpProdBuilder*) clear;
- (ContentAtpProdBuilder*) clone;

- (ContentAtpProd*) build;
- (ContentAtpProd*) buildPartial;

- (ContentAtpProdBuilder*) mergeFrom:(ContentAtpProd*) other;
- (ContentAtpProdBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ContentAtpProdBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasFinProdType;
- (NSString*) finProdType;
- (ContentAtpProdBuilder*) setFinProdType:(NSString*) value;
- (ContentAtpProdBuilder*) clearFinProdType;

- (BOOL) hasCategory;
- (NSString*) category;
- (ContentAtpProdBuilder*) setCategory:(NSString*) value;
- (ContentAtpProdBuilder*) clearCategory;

- (BOOL) hasStatus;
- (NSString*) status;
- (ContentAtpProdBuilder*) setStatus:(NSString*) value;
- (ContentAtpProdBuilder*) clearStatus;
@end

#define AppInfo_appType @"appType"
#define AppInfo_latestAppVersion @"latestAppVersion"
#define AppInfo_latestAppVersionUrl @"latestAppVersionUrl"
#define AppInfo_appFlag @"appFlag"
#define AppInfo_gradientLaunchMessageTitle @"gradientLaunchMessageTitle"
#define AppInfo_gradientLaunchMessageContent @"gradientLaunchMessageContent"
#define AppInfo_md5 @"md5"
@interface ContentAppInfo : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasAppType_:1;
  BOOL hasLatestAppVersion_:1;
  BOOL hasLatestAppVersionUrl_:1;
  BOOL hasAppFlag_:1;
  BOOL hasGradientLaunchMessageTitle_:1;
  BOOL hasGradientLaunchMessageContent_:1;
  BOOL hasMd5_:1;
  NSString* appType;
  NSString* latestAppVersion;
  NSString* latestAppVersionUrl;
  NSString* appFlag;
  NSString* gradientLaunchMessageTitle;
  NSString* gradientLaunchMessageContent;
  NSString* md5;
}
- (BOOL) hasAppType;
- (BOOL) hasLatestAppVersion;
- (BOOL) hasLatestAppVersionUrl;
- (BOOL) hasAppFlag;
- (BOOL) hasGradientLaunchMessageTitle;
- (BOOL) hasGradientLaunchMessageContent;
- (BOOL) hasMd5;
@property (readonly, strong) NSString* appType;
@property (readonly, strong) NSString* latestAppVersion;
@property (readonly, strong) NSString* latestAppVersionUrl;
@property (readonly, strong) NSString* appFlag;
@property (readonly, strong) NSString* gradientLaunchMessageTitle;
@property (readonly, strong) NSString* gradientLaunchMessageContent;
@property (readonly, strong) NSString* md5;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ContentAppInfoBuilder*) builder;
+ (ContentAppInfoBuilder*) builder;
+ (ContentAppInfoBuilder*) builderWithPrototype:(ContentAppInfo*) prototype;
- (ContentAppInfoBuilder*) toBuilder;

+ (ContentAppInfo*) parseFromData:(NSData*) data;
+ (ContentAppInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentAppInfo*) parseFromInputStream:(NSInputStream*) input;
+ (ContentAppInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentAppInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ContentAppInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ContentAppInfoBuilder : PBGeneratedMessageBuilder {
@private
  ContentAppInfo* resultAppInfo;
}

- (ContentAppInfo*) defaultInstance;

- (ContentAppInfoBuilder*) clear;
- (ContentAppInfoBuilder*) clone;

- (ContentAppInfo*) build;
- (ContentAppInfo*) buildPartial;

- (ContentAppInfoBuilder*) mergeFrom:(ContentAppInfo*) other;
- (ContentAppInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ContentAppInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasAppType;
- (NSString*) appType;
- (ContentAppInfoBuilder*) setAppType:(NSString*) value;
- (ContentAppInfoBuilder*) clearAppType;

- (BOOL) hasLatestAppVersion;
- (NSString*) latestAppVersion;
- (ContentAppInfoBuilder*) setLatestAppVersion:(NSString*) value;
- (ContentAppInfoBuilder*) clearLatestAppVersion;

- (BOOL) hasLatestAppVersionUrl;
- (NSString*) latestAppVersionUrl;
- (ContentAppInfoBuilder*) setLatestAppVersionUrl:(NSString*) value;
- (ContentAppInfoBuilder*) clearLatestAppVersionUrl;

- (BOOL) hasAppFlag;
- (NSString*) appFlag;
- (ContentAppInfoBuilder*) setAppFlag:(NSString*) value;
- (ContentAppInfoBuilder*) clearAppFlag;

- (BOOL) hasGradientLaunchMessageTitle;
- (NSString*) gradientLaunchMessageTitle;
- (ContentAppInfoBuilder*) setGradientLaunchMessageTitle:(NSString*) value;
- (ContentAppInfoBuilder*) clearGradientLaunchMessageTitle;

- (BOOL) hasGradientLaunchMessageContent;
- (NSString*) gradientLaunchMessageContent;
- (ContentAppInfoBuilder*) setGradientLaunchMessageContent:(NSString*) value;
- (ContentAppInfoBuilder*) clearGradientLaunchMessageContent;

- (BOOL) hasMd5;
- (NSString*) md5;
- (ContentAppInfoBuilder*) setMd5:(NSString*) value;
- (ContentAppInfoBuilder*) clearMd5;
@end

#define Bank_pan @"pan"
#define Bank_bankId @"bankId"
#define Bank_bankName @"bankName"
#define Bank_cardType @"cardType"
#define Bank_bindStatus @"bindStatus"
#define Bank_phoneNo @"phoneNo"
#define Bank_prefix @"prefix"
#define Bank_isSafeCard @"isSafeCard"
#define Bank_branchBank @"branchBank"
#define Bank_province @"province"
#define Bank_city @"city"
#define Bank_bankNameID @"bankNameId"
#define Bank_name @"name"
#define Bank_payType @"payType"
#define Bank_memberBankAcctId @"memberBankAcctId"
#define Bank_displayName @"displayName"
#define Bank_shortPan @"shortPan"
#define Bank_icon @"icon"
#define Bank_bankType @"bankType"
@interface ContentBank : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasPan_:1;
  BOOL hasBankId_:1;
  BOOL hasBankName_:1;
  BOOL hasCardType_:1;
  BOOL hasBindStatus_:1;
  BOOL hasPhoneNo_:1;
  BOOL hasPrefix_:1;
  BOOL hasIsSafeCard_:1;
  BOOL hasBranchBank_:1;
  BOOL hasProvince_:1;
  BOOL hasCity_:1;
  BOOL hasBankNameId_:1;
  BOOL hasName_:1;
  BOOL hasPayType_:1;
  BOOL hasMemberBankAcctId_:1;
  BOOL hasDisplayName_:1;
  BOOL hasShortPan_:1;
  BOOL hasIcon_:1;
  BOOL hasBankType_:1;
  NSString* pan;
  NSString* bankId;
  NSString* bankName;
  NSString* cardType;
  NSString* bindStatus;
  NSString* phoneNo;
  NSString* prefix;
  NSString* isSafeCard;
  NSString* branchBank;
  NSString* province;
  NSString* city;
  NSString* bankNameId;
  NSString* name;
  NSString* payType;
  NSString* memberBankAcctId;
  NSString* displayName;
  NSString* shortPan;
  NSString* icon;
  NSString* bankType;
}
- (BOOL) hasPan;
- (BOOL) hasBankId;
- (BOOL) hasBankName;
- (BOOL) hasCardType;
- (BOOL) hasBindStatus;
- (BOOL) hasPhoneNo;
- (BOOL) hasPrefix;
- (BOOL) hasIsSafeCard;
- (BOOL) hasBranchBank;
- (BOOL) hasProvince;
- (BOOL) hasCity;
- (BOOL) hasBankNameId;
- (BOOL) hasName;
- (BOOL) hasPayType;
- (BOOL) hasMemberBankAcctId;
- (BOOL) hasDisplayName;
- (BOOL) hasShortPan;
- (BOOL) hasIcon;
- (BOOL) hasBankType;
@property (readonly, strong) NSString* pan;
@property (readonly, strong) NSString* bankId;
@property (readonly, strong) NSString* bankName;
@property (readonly, strong) NSString* cardType;
@property (readonly, strong) NSString* bindStatus;
@property (readonly, strong) NSString* phoneNo;
@property (readonly, strong) NSString* prefix;
@property (readonly, strong) NSString* isSafeCard;
@property (readonly, strong) NSString* branchBank;
@property (readonly, strong) NSString* province;
@property (readonly, strong) NSString* city;
@property (readonly, strong) NSString* bankNameId;
@property (readonly, strong) NSString* name;
@property (readonly, strong) NSString* payType;
@property (readonly, strong) NSString* memberBankAcctId;
@property (readonly, strong) NSString* displayName;
@property (readonly, strong) NSString* shortPan;
@property (readonly, strong) NSString* icon;
@property (readonly, strong) NSString* bankType;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ContentBankBuilder*) builder;
+ (ContentBankBuilder*) builder;
+ (ContentBankBuilder*) builderWithPrototype:(ContentBank*) prototype;
- (ContentBankBuilder*) toBuilder;

+ (ContentBank*) parseFromData:(NSData*) data;
+ (ContentBank*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentBank*) parseFromInputStream:(NSInputStream*) input;
+ (ContentBank*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentBank*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ContentBank*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ContentBankBuilder : PBGeneratedMessageBuilder {
@private
  ContentBank* resultBank;
}

- (ContentBank*) defaultInstance;

- (ContentBankBuilder*) clear;
- (ContentBankBuilder*) clone;

- (ContentBank*) build;
- (ContentBank*) buildPartial;

- (ContentBankBuilder*) mergeFrom:(ContentBank*) other;
- (ContentBankBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ContentBankBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasPan;
- (NSString*) pan;
- (ContentBankBuilder*) setPan:(NSString*) value;
- (ContentBankBuilder*) clearPan;

- (BOOL) hasBankId;
- (NSString*) bankId;
- (ContentBankBuilder*) setBankId:(NSString*) value;
- (ContentBankBuilder*) clearBankId;

- (BOOL) hasBankName;
- (NSString*) bankName;
- (ContentBankBuilder*) setBankName:(NSString*) value;
- (ContentBankBuilder*) clearBankName;

- (BOOL) hasCardType;
- (NSString*) cardType;
- (ContentBankBuilder*) setCardType:(NSString*) value;
- (ContentBankBuilder*) clearCardType;

- (BOOL) hasBindStatus;
- (NSString*) bindStatus;
- (ContentBankBuilder*) setBindStatus:(NSString*) value;
- (ContentBankBuilder*) clearBindStatus;

- (BOOL) hasPhoneNo;
- (NSString*) phoneNo;
- (ContentBankBuilder*) setPhoneNo:(NSString*) value;
- (ContentBankBuilder*) clearPhoneNo;

- (BOOL) hasPrefix;
- (NSString*) prefix;
- (ContentBankBuilder*) setPrefix:(NSString*) value;
- (ContentBankBuilder*) clearPrefix;

- (BOOL) hasIsSafeCard;
- (NSString*) isSafeCard;
- (ContentBankBuilder*) setIsSafeCard:(NSString*) value;
- (ContentBankBuilder*) clearIsSafeCard;

- (BOOL) hasBranchBank;
- (NSString*) branchBank;
- (ContentBankBuilder*) setBranchBank:(NSString*) value;
- (ContentBankBuilder*) clearBranchBank;

- (BOOL) hasProvince;
- (NSString*) province;
- (ContentBankBuilder*) setProvince:(NSString*) value;
- (ContentBankBuilder*) clearProvince;

- (BOOL) hasCity;
- (NSString*) city;
- (ContentBankBuilder*) setCity:(NSString*) value;
- (ContentBankBuilder*) clearCity;

- (BOOL) hasBankNameId;
- (NSString*) bankNameId;
- (ContentBankBuilder*) setBankNameId:(NSString*) value;
- (ContentBankBuilder*) clearBankNameId;

- (BOOL) hasName;
- (NSString*) name;
- (ContentBankBuilder*) setName:(NSString*) value;
- (ContentBankBuilder*) clearName;

- (BOOL) hasPayType;
- (NSString*) payType;
- (ContentBankBuilder*) setPayType:(NSString*) value;
- (ContentBankBuilder*) clearPayType;

- (BOOL) hasMemberBankAcctId;
- (NSString*) memberBankAcctId;
- (ContentBankBuilder*) setMemberBankAcctId:(NSString*) value;
- (ContentBankBuilder*) clearMemberBankAcctId;

- (BOOL) hasDisplayName;
- (NSString*) displayName;
- (ContentBankBuilder*) setDisplayName:(NSString*) value;
- (ContentBankBuilder*) clearDisplayName;

- (BOOL) hasShortPan;
- (NSString*) shortPan;
- (ContentBankBuilder*) setShortPan:(NSString*) value;
- (ContentBankBuilder*) clearShortPan;

- (BOOL) hasIcon;
- (NSString*) icon;
- (ContentBankBuilder*) setIcon:(NSString*) value;
- (ContentBankBuilder*) clearIcon;

- (BOOL) hasBankType;
- (NSString*) bankType;
- (ContentBankBuilder*) setBankType:(NSString*) value;
- (ContentBankBuilder*) clearBankType;
@end

#define Member_serviceLevelCode @"serviceLevelCode"
#define Member_userMebCode @"userMebCode"
#define Member_memberType @"memberType"
#define Member_name @"name"
#define Member_identitycardid @"identitycardid"
#define Member_creationDate @"creationDate"
#define Member_mergeConflictFlag @"mergeConflictFlag"
#define Member_payPwdResetFlag @"payPwdResetFlag"
#define Member_payPwdValidateFlag @"payPwdValidateFlag"
#define Member_idCardValidateFlag @"idCardValidateFlag"
#define Member_conflictAcc @"conflictAcc"
#define Member_openId @"openId"
@interface ContentMember : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasServiceLevelCode_:1;
  BOOL hasUserMebCode_:1;
  BOOL hasMemberType_:1;
  BOOL hasName_:1;
  BOOL hasIdentitycardid_:1;
  BOOL hasCreationDate_:1;
  BOOL hasMergeConflictFlag_:1;
  BOOL hasPayPwdResetFlag_:1;
  BOOL hasPayPwdValidateFlag_:1;
  BOOL hasIdCardValidateFlag_:1;
  BOOL hasOpenId_:1;
  NSString* serviceLevelCode;
  NSString* userMebCode;
  NSString* memberType;
  NSString* name;
  NSString* identitycardid;
  NSString* creationDate;
  NSString* mergeConflictFlag;
  NSString* payPwdResetFlag;
  NSString* payPwdValidateFlag;
  NSString* idCardValidateFlag;
  NSString* openId;
  NSMutableArray * conflictAccArray;
}
- (BOOL) hasServiceLevelCode;
- (BOOL) hasUserMebCode;
- (BOOL) hasMemberType;
- (BOOL) hasName;
- (BOOL) hasIdentitycardid;
- (BOOL) hasCreationDate;
- (BOOL) hasMergeConflictFlag;
- (BOOL) hasPayPwdResetFlag;
- (BOOL) hasPayPwdValidateFlag;
- (BOOL) hasIdCardValidateFlag;
- (BOOL) hasOpenId;
@property (readonly, strong) NSString* serviceLevelCode;
@property (readonly, strong) NSString* userMebCode;
@property (readonly, strong) NSString* memberType;
@property (readonly, strong) NSString* name;
@property (readonly, strong) NSString* identitycardid;
@property (readonly, strong) NSString* creationDate;
@property (readonly, strong) NSString* mergeConflictFlag;
@property (readonly, strong) NSString* payPwdResetFlag;
@property (readonly, strong) NSString* payPwdValidateFlag;
@property (readonly, strong) NSString* idCardValidateFlag;
@property (readonly, strong) NSArray * conflictAcc;
@property (readonly, strong) NSString* openId;
- (ContentConflictAcc*)conflictAccAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ContentMemberBuilder*) builder;
+ (ContentMemberBuilder*) builder;
+ (ContentMemberBuilder*) builderWithPrototype:(ContentMember*) prototype;
- (ContentMemberBuilder*) toBuilder;

+ (ContentMember*) parseFromData:(NSData*) data;
+ (ContentMember*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentMember*) parseFromInputStream:(NSInputStream*) input;
+ (ContentMember*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentMember*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ContentMember*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ContentMemberBuilder : PBGeneratedMessageBuilder {
@private
  ContentMember* resultMember;
}

- (ContentMember*) defaultInstance;

- (ContentMemberBuilder*) clear;
- (ContentMemberBuilder*) clone;

- (ContentMember*) build;
- (ContentMember*) buildPartial;

- (ContentMemberBuilder*) mergeFrom:(ContentMember*) other;
- (ContentMemberBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ContentMemberBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasServiceLevelCode;
- (NSString*) serviceLevelCode;
- (ContentMemberBuilder*) setServiceLevelCode:(NSString*) value;
- (ContentMemberBuilder*) clearServiceLevelCode;

- (BOOL) hasUserMebCode;
- (NSString*) userMebCode;
- (ContentMemberBuilder*) setUserMebCode:(NSString*) value;
- (ContentMemberBuilder*) clearUserMebCode;

- (BOOL) hasMemberType;
- (NSString*) memberType;
- (ContentMemberBuilder*) setMemberType:(NSString*) value;
- (ContentMemberBuilder*) clearMemberType;

- (BOOL) hasName;
- (NSString*) name;
- (ContentMemberBuilder*) setName:(NSString*) value;
- (ContentMemberBuilder*) clearName;

- (BOOL) hasIdentitycardid;
- (NSString*) identitycardid;
- (ContentMemberBuilder*) setIdentitycardid:(NSString*) value;
- (ContentMemberBuilder*) clearIdentitycardid;

- (BOOL) hasCreationDate;
- (NSString*) creationDate;
- (ContentMemberBuilder*) setCreationDate:(NSString*) value;
- (ContentMemberBuilder*) clearCreationDate;

- (BOOL) hasMergeConflictFlag;
- (NSString*) mergeConflictFlag;
- (ContentMemberBuilder*) setMergeConflictFlag:(NSString*) value;
- (ContentMemberBuilder*) clearMergeConflictFlag;

- (BOOL) hasPayPwdResetFlag;
- (NSString*) payPwdResetFlag;
- (ContentMemberBuilder*) setPayPwdResetFlag:(NSString*) value;
- (ContentMemberBuilder*) clearPayPwdResetFlag;

- (BOOL) hasPayPwdValidateFlag;
- (NSString*) payPwdValidateFlag;
- (ContentMemberBuilder*) setPayPwdValidateFlag:(NSString*) value;
- (ContentMemberBuilder*) clearPayPwdValidateFlag;

- (BOOL) hasIdCardValidateFlag;
- (NSString*) idCardValidateFlag;
- (ContentMemberBuilder*) setIdCardValidateFlag:(NSString*) value;
- (ContentMemberBuilder*) clearIdCardValidateFlag;

- (NSMutableArray *)conflictAcc;
- (ContentConflictAcc*)conflictAccAtIndex:(NSUInteger)index;
- (ContentMemberBuilder *)addConflictAcc:(ContentConflictAcc*)value;
- (ContentMemberBuilder *)setConflictAccArray:(NSArray *)array;
- (ContentMemberBuilder *)clearConflictAcc;

- (BOOL) hasOpenId;
- (NSString*) openId;
- (ContentMemberBuilder*) setOpenId:(NSString*) value;
- (ContentMemberBuilder*) clearOpenId;
@end

#define MemberTwo_userMebCode @"userMebCode"
#define MemberTwo_name @"name"
#define MemberTwo_realNameFlag @"realNameFlag"
#define MemberTwo_memberType @"memberType"
#define MemberTwo_userFlag @"userFlag"
#define MemberTwo_phoneNo @"phoneNo"
#define MemberTwo_userName @"userName"
#define MemberTwo_openId @"openId"
@interface ContentMemberTwo : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasUserMebCode_:1;
  BOOL hasName_:1;
  BOOL hasRealNameFlag_:1;
  BOOL hasMemberType_:1;
  BOOL hasUserFlag_:1;
  BOOL hasPhoneNo_:1;
  BOOL hasUserName_:1;
  BOOL hasOpenId_:1;
  NSString* userMebCode;
  NSString* name;
  NSString* realNameFlag;
  NSString* memberType;
  NSString* userFlag;
  NSString* phoneNo;
  NSString* userName;
  NSString* openId;
}
- (BOOL) hasUserMebCode;
- (BOOL) hasName;
- (BOOL) hasRealNameFlag;
- (BOOL) hasMemberType;
- (BOOL) hasUserFlag;
- (BOOL) hasPhoneNo;
- (BOOL) hasUserName;
- (BOOL) hasOpenId;
@property (readonly, strong) NSString* userMebCode;
@property (readonly, strong) NSString* name;
@property (readonly, strong) NSString* realNameFlag;
@property (readonly, strong) NSString* memberType;
@property (readonly, strong) NSString* userFlag;
@property (readonly, strong) NSString* phoneNo;
@property (readonly, strong) NSString* userName;
@property (readonly, strong) NSString* openId;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ContentMemberTwoBuilder*) builder;
+ (ContentMemberTwoBuilder*) builder;
+ (ContentMemberTwoBuilder*) builderWithPrototype:(ContentMemberTwo*) prototype;
- (ContentMemberTwoBuilder*) toBuilder;

+ (ContentMemberTwo*) parseFromData:(NSData*) data;
+ (ContentMemberTwo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentMemberTwo*) parseFromInputStream:(NSInputStream*) input;
+ (ContentMemberTwo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentMemberTwo*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ContentMemberTwo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ContentMemberTwoBuilder : PBGeneratedMessageBuilder {
@private
  ContentMemberTwo* resultMemberTwo;
}

- (ContentMemberTwo*) defaultInstance;

- (ContentMemberTwoBuilder*) clear;
- (ContentMemberTwoBuilder*) clone;

- (ContentMemberTwo*) build;
- (ContentMemberTwo*) buildPartial;

- (ContentMemberTwoBuilder*) mergeFrom:(ContentMemberTwo*) other;
- (ContentMemberTwoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ContentMemberTwoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasUserMebCode;
- (NSString*) userMebCode;
- (ContentMemberTwoBuilder*) setUserMebCode:(NSString*) value;
- (ContentMemberTwoBuilder*) clearUserMebCode;

- (BOOL) hasName;
- (NSString*) name;
- (ContentMemberTwoBuilder*) setName:(NSString*) value;
- (ContentMemberTwoBuilder*) clearName;

- (BOOL) hasRealNameFlag;
- (NSString*) realNameFlag;
- (ContentMemberTwoBuilder*) setRealNameFlag:(NSString*) value;
- (ContentMemberTwoBuilder*) clearRealNameFlag;

- (BOOL) hasMemberType;
- (NSString*) memberType;
- (ContentMemberTwoBuilder*) setMemberType:(NSString*) value;
- (ContentMemberTwoBuilder*) clearMemberType;

- (BOOL) hasUserFlag;
- (NSString*) userFlag;
- (ContentMemberTwoBuilder*) setUserFlag:(NSString*) value;
- (ContentMemberTwoBuilder*) clearUserFlag;

- (BOOL) hasPhoneNo;
- (NSString*) phoneNo;
- (ContentMemberTwoBuilder*) setPhoneNo:(NSString*) value;
- (ContentMemberTwoBuilder*) clearPhoneNo;

- (BOOL) hasUserName;
- (NSString*) userName;
- (ContentMemberTwoBuilder*) setUserName:(NSString*) value;
- (ContentMemberTwoBuilder*) clearUserName;

- (BOOL) hasOpenId;
- (NSString*) openId;
- (ContentMemberTwoBuilder*) setOpenId:(NSString*) value;
- (ContentMemberTwoBuilder*) clearOpenId;
@end

#define MemberIdentity_idType @"idType"
#define MemberIdentity_idContent @"idContent"
#define MemberIdentity_status @"status"
@interface ContentMemberIdentity : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasIdType_:1;
  BOOL hasIdContent_:1;
  BOOL hasStatus_:1;
  NSString* idType;
  NSString* idContent;
  NSString* status;
}
- (BOOL) hasIdType;
- (BOOL) hasIdContent;
- (BOOL) hasStatus;
@property (readonly, strong) NSString* idType;
@property (readonly, strong) NSString* idContent;
@property (readonly, strong) NSString* status;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ContentMemberIdentityBuilder*) builder;
+ (ContentMemberIdentityBuilder*) builder;
+ (ContentMemberIdentityBuilder*) builderWithPrototype:(ContentMemberIdentity*) prototype;
- (ContentMemberIdentityBuilder*) toBuilder;

+ (ContentMemberIdentity*) parseFromData:(NSData*) data;
+ (ContentMemberIdentity*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentMemberIdentity*) parseFromInputStream:(NSInputStream*) input;
+ (ContentMemberIdentity*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentMemberIdentity*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ContentMemberIdentity*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ContentMemberIdentityBuilder : PBGeneratedMessageBuilder {
@private
  ContentMemberIdentity* resultMemberIdentity;
}

- (ContentMemberIdentity*) defaultInstance;

- (ContentMemberIdentityBuilder*) clear;
- (ContentMemberIdentityBuilder*) clone;

- (ContentMemberIdentity*) build;
- (ContentMemberIdentity*) buildPartial;

- (ContentMemberIdentityBuilder*) mergeFrom:(ContentMemberIdentity*) other;
- (ContentMemberIdentityBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ContentMemberIdentityBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasIdType;
- (NSString*) idType;
- (ContentMemberIdentityBuilder*) setIdType:(NSString*) value;
- (ContentMemberIdentityBuilder*) clearIdType;

- (BOOL) hasIdContent;
- (NSString*) idContent;
- (ContentMemberIdentityBuilder*) setIdContent:(NSString*) value;
- (ContentMemberIdentityBuilder*) clearIdContent;

- (BOOL) hasStatus;
- (NSString*) status;
- (ContentMemberIdentityBuilder*) setStatus:(NSString*) value;
- (ContentMemberIdentityBuilder*) clearStatus;
@end

#define QueryAllFinaprodResponse_businessType @"businessType"
#define QueryAllFinaprodResponse_time @"time"
#define QueryAllFinaprodResponse_balance @"balance"
#define QueryAllFinaprodResponse_status @"status"
#define QueryAllFinaprodResponse_showStatus @"showStatus"
#define QueryAllFinaprodResponse_finishedTime @"finishedTime"
#define QueryAllFinaprodResponse_acctNum @"acctNum"
#define QueryAllFinaprodResponse_depositBank @"depositBank"
#define QueryAllFinaprodResponse_acctHeaded @"acctHeaded"
@interface ContentQueryAllFinaprodResponse : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasBusinessType_:1;
  BOOL hasTime_:1;
  BOOL hasBalance_:1;
  BOOL hasStatus_:1;
  BOOL hasShowStatus_:1;
  BOOL hasFinishedTime_:1;
  BOOL hasAcctNum_:1;
  BOOL hasDepositBank_:1;
  BOOL hasAcctHeaded_:1;
  NSString* businessType;
  NSString* time;
  NSString* balance;
  NSString* status;
  NSString* showStatus;
  NSString* finishedTime;
  NSString* acctNum;
  NSString* depositBank;
  NSString* acctHeaded;
}
- (BOOL) hasBusinessType;
- (BOOL) hasTime;
- (BOOL) hasBalance;
- (BOOL) hasStatus;
- (BOOL) hasShowStatus;
- (BOOL) hasFinishedTime;
- (BOOL) hasAcctNum;
- (BOOL) hasDepositBank;
- (BOOL) hasAcctHeaded;
@property (readonly, strong) NSString* businessType;
@property (readonly, strong) NSString* time;
@property (readonly, strong) NSString* balance;
@property (readonly, strong) NSString* status;
@property (readonly, strong) NSString* showStatus;
@property (readonly, strong) NSString* finishedTime;
@property (readonly, strong) NSString* acctNum;
@property (readonly, strong) NSString* depositBank;
@property (readonly, strong) NSString* acctHeaded;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ContentQueryAllFinaprodResponseBuilder*) builder;
+ (ContentQueryAllFinaprodResponseBuilder*) builder;
+ (ContentQueryAllFinaprodResponseBuilder*) builderWithPrototype:(ContentQueryAllFinaprodResponse*) prototype;
- (ContentQueryAllFinaprodResponseBuilder*) toBuilder;

+ (ContentQueryAllFinaprodResponse*) parseFromData:(NSData*) data;
+ (ContentQueryAllFinaprodResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentQueryAllFinaprodResponse*) parseFromInputStream:(NSInputStream*) input;
+ (ContentQueryAllFinaprodResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentQueryAllFinaprodResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ContentQueryAllFinaprodResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ContentQueryAllFinaprodResponseBuilder : PBGeneratedMessageBuilder {
@private
  ContentQueryAllFinaprodResponse* resultQueryAllFinaprodResponse;
}

- (ContentQueryAllFinaprodResponse*) defaultInstance;

- (ContentQueryAllFinaprodResponseBuilder*) clear;
- (ContentQueryAllFinaprodResponseBuilder*) clone;

- (ContentQueryAllFinaprodResponse*) build;
- (ContentQueryAllFinaprodResponse*) buildPartial;

- (ContentQueryAllFinaprodResponseBuilder*) mergeFrom:(ContentQueryAllFinaprodResponse*) other;
- (ContentQueryAllFinaprodResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ContentQueryAllFinaprodResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasBusinessType;
- (NSString*) businessType;
- (ContentQueryAllFinaprodResponseBuilder*) setBusinessType:(NSString*) value;
- (ContentQueryAllFinaprodResponseBuilder*) clearBusinessType;

- (BOOL) hasTime;
- (NSString*) time;
- (ContentQueryAllFinaprodResponseBuilder*) setTime:(NSString*) value;
- (ContentQueryAllFinaprodResponseBuilder*) clearTime;

- (BOOL) hasBalance;
- (NSString*) balance;
- (ContentQueryAllFinaprodResponseBuilder*) setBalance:(NSString*) value;
- (ContentQueryAllFinaprodResponseBuilder*) clearBalance;

- (BOOL) hasStatus;
- (NSString*) status;
- (ContentQueryAllFinaprodResponseBuilder*) setStatus:(NSString*) value;
- (ContentQueryAllFinaprodResponseBuilder*) clearStatus;

- (BOOL) hasShowStatus;
- (NSString*) showStatus;
- (ContentQueryAllFinaprodResponseBuilder*) setShowStatus:(NSString*) value;
- (ContentQueryAllFinaprodResponseBuilder*) clearShowStatus;

- (BOOL) hasFinishedTime;
- (NSString*) finishedTime;
- (ContentQueryAllFinaprodResponseBuilder*) setFinishedTime:(NSString*) value;
- (ContentQueryAllFinaprodResponseBuilder*) clearFinishedTime;

- (BOOL) hasAcctNum;
- (NSString*) acctNum;
- (ContentQueryAllFinaprodResponseBuilder*) setAcctNum:(NSString*) value;
- (ContentQueryAllFinaprodResponseBuilder*) clearAcctNum;

- (BOOL) hasDepositBank;
- (NSString*) depositBank;
- (ContentQueryAllFinaprodResponseBuilder*) setDepositBank:(NSString*) value;
- (ContentQueryAllFinaprodResponseBuilder*) clearDepositBank;

- (BOOL) hasAcctHeaded;
- (NSString*) acctHeaded;
- (ContentQueryAllFinaprodResponseBuilder*) setAcctHeaded:(NSString*) value;
- (ContentQueryAllFinaprodResponseBuilder*) clearAcctHeaded;
@end

#define QueryWalletBill99BillResponse_payerAcctCode @"payerAcctCode"
#define QueryWalletBill99BillResponse_memo @"memo"
#define QueryWalletBill99BillResponse_orderCode @"orderCode"
#define QueryWalletBill99BillResponse_statusName @"statusName"
#define QueryWalletBill99BillResponse_lastUpdateTime @"lastUpdateTime"
#define QueryWalletBill99BillResponse_payeeAcctCode @"payeeAcctCode"
#define QueryWalletBill99BillResponse_orderTime @"orderTime"
#define QueryWalletBill99BillResponse_orderStatus @"orderStatus"
#define QueryWalletBill99BillResponse_orderAmount @"orderAmount"
#define QueryWalletBill99BillResponse_sequenceId @"sequenceId"
#define QueryWalletBill99BillResponse_crDrName @"crDrName"
#define QueryWalletBill99BillResponse_payTypeName @"payTypeName"
@interface ContentQueryWalletBill99BillResponse : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasPayerAcctCode_:1;
  BOOL hasMemo_:1;
  BOOL hasOrderCode_:1;
  BOOL hasStatusName_:1;
  BOOL hasLastUpdateTime_:1;
  BOOL hasPayeeAcctCode_:1;
  BOOL hasOrderTime_:1;
  BOOL hasOrderStatus_:1;
  BOOL hasOrderAmount_:1;
  BOOL hasSequenceId_:1;
  BOOL hasCrDrName_:1;
  BOOL hasPayTypeName_:1;
  NSString* payerAcctCode;
  NSString* memo;
  NSString* orderCode;
  NSString* statusName;
  NSString* lastUpdateTime;
  NSString* payeeAcctCode;
  NSString* orderTime;
  NSString* orderStatus;
  NSString* orderAmount;
  NSString* sequenceId;
  NSString* crDrName;
  NSString* payTypeName;
}
- (BOOL) hasPayerAcctCode;
- (BOOL) hasMemo;
- (BOOL) hasOrderCode;
- (BOOL) hasStatusName;
- (BOOL) hasLastUpdateTime;
- (BOOL) hasPayeeAcctCode;
- (BOOL) hasOrderTime;
- (BOOL) hasOrderStatus;
- (BOOL) hasOrderAmount;
- (BOOL) hasSequenceId;
- (BOOL) hasCrDrName;
- (BOOL) hasPayTypeName;
@property (readonly, strong) NSString* payerAcctCode;
@property (readonly, strong) NSString* memo;
@property (readonly, strong) NSString* orderCode;
@property (readonly, strong) NSString* statusName;
@property (readonly, strong) NSString* lastUpdateTime;
@property (readonly, strong) NSString* payeeAcctCode;
@property (readonly, strong) NSString* orderTime;
@property (readonly, strong) NSString* orderStatus;
@property (readonly, strong) NSString* orderAmount;
@property (readonly, strong) NSString* sequenceId;
@property (readonly, strong) NSString* crDrName;
@property (readonly, strong) NSString* payTypeName;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ContentQueryWalletBill99BillResponseBuilder*) builder;
+ (ContentQueryWalletBill99BillResponseBuilder*) builder;
+ (ContentQueryWalletBill99BillResponseBuilder*) builderWithPrototype:(ContentQueryWalletBill99BillResponse*) prototype;
- (ContentQueryWalletBill99BillResponseBuilder*) toBuilder;

+ (ContentQueryWalletBill99BillResponse*) parseFromData:(NSData*) data;
+ (ContentQueryWalletBill99BillResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentQueryWalletBill99BillResponse*) parseFromInputStream:(NSInputStream*) input;
+ (ContentQueryWalletBill99BillResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentQueryWalletBill99BillResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ContentQueryWalletBill99BillResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ContentQueryWalletBill99BillResponseBuilder : PBGeneratedMessageBuilder {
@private
  ContentQueryWalletBill99BillResponse* resultQueryWalletBill99BillResponse;
}

- (ContentQueryWalletBill99BillResponse*) defaultInstance;

- (ContentQueryWalletBill99BillResponseBuilder*) clear;
- (ContentQueryWalletBill99BillResponseBuilder*) clone;

- (ContentQueryWalletBill99BillResponse*) build;
- (ContentQueryWalletBill99BillResponse*) buildPartial;

- (ContentQueryWalletBill99BillResponseBuilder*) mergeFrom:(ContentQueryWalletBill99BillResponse*) other;
- (ContentQueryWalletBill99BillResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ContentQueryWalletBill99BillResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasPayerAcctCode;
- (NSString*) payerAcctCode;
- (ContentQueryWalletBill99BillResponseBuilder*) setPayerAcctCode:(NSString*) value;
- (ContentQueryWalletBill99BillResponseBuilder*) clearPayerAcctCode;

- (BOOL) hasMemo;
- (NSString*) memo;
- (ContentQueryWalletBill99BillResponseBuilder*) setMemo:(NSString*) value;
- (ContentQueryWalletBill99BillResponseBuilder*) clearMemo;

- (BOOL) hasOrderCode;
- (NSString*) orderCode;
- (ContentQueryWalletBill99BillResponseBuilder*) setOrderCode:(NSString*) value;
- (ContentQueryWalletBill99BillResponseBuilder*) clearOrderCode;

- (BOOL) hasStatusName;
- (NSString*) statusName;
- (ContentQueryWalletBill99BillResponseBuilder*) setStatusName:(NSString*) value;
- (ContentQueryWalletBill99BillResponseBuilder*) clearStatusName;

- (BOOL) hasLastUpdateTime;
- (NSString*) lastUpdateTime;
- (ContentQueryWalletBill99BillResponseBuilder*) setLastUpdateTime:(NSString*) value;
- (ContentQueryWalletBill99BillResponseBuilder*) clearLastUpdateTime;

- (BOOL) hasPayeeAcctCode;
- (NSString*) payeeAcctCode;
- (ContentQueryWalletBill99BillResponseBuilder*) setPayeeAcctCode:(NSString*) value;
- (ContentQueryWalletBill99BillResponseBuilder*) clearPayeeAcctCode;

- (BOOL) hasOrderTime;
- (NSString*) orderTime;
- (ContentQueryWalletBill99BillResponseBuilder*) setOrderTime:(NSString*) value;
- (ContentQueryWalletBill99BillResponseBuilder*) clearOrderTime;

- (BOOL) hasOrderStatus;
- (NSString*) orderStatus;
- (ContentQueryWalletBill99BillResponseBuilder*) setOrderStatus:(NSString*) value;
- (ContentQueryWalletBill99BillResponseBuilder*) clearOrderStatus;

- (BOOL) hasOrderAmount;
- (NSString*) orderAmount;
- (ContentQueryWalletBill99BillResponseBuilder*) setOrderAmount:(NSString*) value;
- (ContentQueryWalletBill99BillResponseBuilder*) clearOrderAmount;

- (BOOL) hasSequenceId;
- (NSString*) sequenceId;
- (ContentQueryWalletBill99BillResponseBuilder*) setSequenceId:(NSString*) value;
- (ContentQueryWalletBill99BillResponseBuilder*) clearSequenceId;

- (BOOL) hasCrDrName;
- (NSString*) crDrName;
- (ContentQueryWalletBill99BillResponseBuilder*) setCrDrName:(NSString*) value;
- (ContentQueryWalletBill99BillResponseBuilder*) clearCrDrName;

- (BOOL) hasPayTypeName;
- (NSString*) payTypeName;
- (ContentQueryWalletBill99BillResponseBuilder*) setPayTypeName:(NSString*) value;
- (ContentQueryWalletBill99BillResponseBuilder*) clearPayTypeName;
@end

#define ProdAccountInfo_productCode @"productCode"
#define ProdAccountInfo_productName @"productName"
#define ProdAccountInfo_returnRateExp @"returnRateExp"
#define ProdAccountInfo_prodHorizonTo @"prodHorizonTo"
#define ProdAccountInfo_totalShare @"totalShare"
#define ProdAccountInfo_holdShare @"holdShare"
#define ProdAccountInfo_principal @"principal"
#define ProdAccountInfo_compositeCost @"compositeCost"
#define ProdAccountInfo_totalProfit @"totalProfit"
#define ProdAccountInfo_nextSettPrincipal @"nextSettPrincipal"
#define ProdAccountInfo_nextSettDate @"nextSettDate"
#define ProdAccountInfo_nextSettAmt @"nextSettAmt"
#define ProdAccountInfo_transFeeRate @"transFeeRate"
#define ProdAccountInfo_finProdType @"finProdType"
#define ProdAccountInfo_incomeType @"incomeType"
#define ProdAccountInfo_interestFrom @"interestFrom"
#define ProdAccountInfo_productBatchNo @"productBatchNo"
@interface ContentProdAccountInfo : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasProductCode_:1;
  BOOL hasProductName_:1;
  BOOL hasReturnRateExp_:1;
  BOOL hasProdHorizonTo_:1;
  BOOL hasTotalShare_:1;
  BOOL hasHoldShare_:1;
  BOOL hasPrincipal_:1;
  BOOL hasCompositeCost_:1;
  BOOL hasTotalProfit_:1;
  BOOL hasNextSettPrincipal_:1;
  BOOL hasNextSettDate_:1;
  BOOL hasNextSettAmt_:1;
  BOOL hasTransFeeRate_:1;
  BOOL hasFinProdType_:1;
  BOOL hasIncomeType_:1;
  BOOL hasInterestFrom_:1;
  BOOL hasProductBatchNo_:1;
  NSString* productCode;
  NSString* productName;
  NSString* returnRateExp;
  NSString* prodHorizonTo;
  NSString* totalShare;
  NSString* holdShare;
  NSString* principal;
  NSString* compositeCost;
  NSString* totalProfit;
  NSString* nextSettPrincipal;
  NSString* nextSettDate;
  NSString* nextSettAmt;
  NSString* transFeeRate;
  NSString* finProdType;
  NSString* incomeType;
  NSString* interestFrom;
  NSString* productBatchNo;
}
- (BOOL) hasProductCode;
- (BOOL) hasProductName;
- (BOOL) hasReturnRateExp;
- (BOOL) hasProdHorizonTo;
- (BOOL) hasTotalShare;
- (BOOL) hasHoldShare;
- (BOOL) hasPrincipal;
- (BOOL) hasCompositeCost;
- (BOOL) hasTotalProfit;
- (BOOL) hasNextSettPrincipal;
- (BOOL) hasNextSettDate;
- (BOOL) hasNextSettAmt;
- (BOOL) hasTransFeeRate;
- (BOOL) hasFinProdType;
- (BOOL) hasIncomeType;
- (BOOL) hasInterestFrom;
- (BOOL) hasProductBatchNo;
@property (readonly, strong) NSString* productCode;
@property (readonly, strong) NSString* productName;
@property (readonly, strong) NSString* returnRateExp;
@property (readonly, strong) NSString* prodHorizonTo;
@property (readonly, strong) NSString* totalShare;
@property (readonly, strong) NSString* holdShare;
@property (readonly, strong) NSString* principal;
@property (readonly, strong) NSString* compositeCost;
@property (readonly, strong) NSString* totalProfit;
@property (readonly, strong) NSString* nextSettPrincipal;
@property (readonly, strong) NSString* nextSettDate;
@property (readonly, strong) NSString* nextSettAmt;
@property (readonly, strong) NSString* transFeeRate;
@property (readonly, strong) NSString* finProdType;
@property (readonly, strong) NSString* incomeType;
@property (readonly, strong) NSString* interestFrom;
@property (readonly, strong) NSString* productBatchNo;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ContentProdAccountInfoBuilder*) builder;
+ (ContentProdAccountInfoBuilder*) builder;
+ (ContentProdAccountInfoBuilder*) builderWithPrototype:(ContentProdAccountInfo*) prototype;
- (ContentProdAccountInfoBuilder*) toBuilder;

+ (ContentProdAccountInfo*) parseFromData:(NSData*) data;
+ (ContentProdAccountInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentProdAccountInfo*) parseFromInputStream:(NSInputStream*) input;
+ (ContentProdAccountInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentProdAccountInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ContentProdAccountInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ContentProdAccountInfoBuilder : PBGeneratedMessageBuilder {
@private
  ContentProdAccountInfo* resultProdAccountInfo;
}

- (ContentProdAccountInfo*) defaultInstance;

- (ContentProdAccountInfoBuilder*) clear;
- (ContentProdAccountInfoBuilder*) clone;

- (ContentProdAccountInfo*) build;
- (ContentProdAccountInfo*) buildPartial;

- (ContentProdAccountInfoBuilder*) mergeFrom:(ContentProdAccountInfo*) other;
- (ContentProdAccountInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ContentProdAccountInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasProductCode;
- (NSString*) productCode;
- (ContentProdAccountInfoBuilder*) setProductCode:(NSString*) value;
- (ContentProdAccountInfoBuilder*) clearProductCode;

- (BOOL) hasProductName;
- (NSString*) productName;
- (ContentProdAccountInfoBuilder*) setProductName:(NSString*) value;
- (ContentProdAccountInfoBuilder*) clearProductName;

- (BOOL) hasReturnRateExp;
- (NSString*) returnRateExp;
- (ContentProdAccountInfoBuilder*) setReturnRateExp:(NSString*) value;
- (ContentProdAccountInfoBuilder*) clearReturnRateExp;

- (BOOL) hasProdHorizonTo;
- (NSString*) prodHorizonTo;
- (ContentProdAccountInfoBuilder*) setProdHorizonTo:(NSString*) value;
- (ContentProdAccountInfoBuilder*) clearProdHorizonTo;

- (BOOL) hasTotalShare;
- (NSString*) totalShare;
- (ContentProdAccountInfoBuilder*) setTotalShare:(NSString*) value;
- (ContentProdAccountInfoBuilder*) clearTotalShare;

- (BOOL) hasHoldShare;
- (NSString*) holdShare;
- (ContentProdAccountInfoBuilder*) setHoldShare:(NSString*) value;
- (ContentProdAccountInfoBuilder*) clearHoldShare;

- (BOOL) hasPrincipal;
- (NSString*) principal;
- (ContentProdAccountInfoBuilder*) setPrincipal:(NSString*) value;
- (ContentProdAccountInfoBuilder*) clearPrincipal;

- (BOOL) hasCompositeCost;
- (NSString*) compositeCost;
- (ContentProdAccountInfoBuilder*) setCompositeCost:(NSString*) value;
- (ContentProdAccountInfoBuilder*) clearCompositeCost;

- (BOOL) hasTotalProfit;
- (NSString*) totalProfit;
- (ContentProdAccountInfoBuilder*) setTotalProfit:(NSString*) value;
- (ContentProdAccountInfoBuilder*) clearTotalProfit;

- (BOOL) hasNextSettPrincipal;
- (NSString*) nextSettPrincipal;
- (ContentProdAccountInfoBuilder*) setNextSettPrincipal:(NSString*) value;
- (ContentProdAccountInfoBuilder*) clearNextSettPrincipal;

- (BOOL) hasNextSettDate;
- (NSString*) nextSettDate;
- (ContentProdAccountInfoBuilder*) setNextSettDate:(NSString*) value;
- (ContentProdAccountInfoBuilder*) clearNextSettDate;

- (BOOL) hasNextSettAmt;
- (NSString*) nextSettAmt;
- (ContentProdAccountInfoBuilder*) setNextSettAmt:(NSString*) value;
- (ContentProdAccountInfoBuilder*) clearNextSettAmt;

- (BOOL) hasTransFeeRate;
- (NSString*) transFeeRate;
- (ContentProdAccountInfoBuilder*) setTransFeeRate:(NSString*) value;
- (ContentProdAccountInfoBuilder*) clearTransFeeRate;

- (BOOL) hasFinProdType;
- (NSString*) finProdType;
- (ContentProdAccountInfoBuilder*) setFinProdType:(NSString*) value;
- (ContentProdAccountInfoBuilder*) clearFinProdType;

- (BOOL) hasIncomeType;
- (NSString*) incomeType;
- (ContentProdAccountInfoBuilder*) setIncomeType:(NSString*) value;
- (ContentProdAccountInfoBuilder*) clearIncomeType;

- (BOOL) hasInterestFrom;
- (NSString*) interestFrom;
- (ContentProdAccountInfoBuilder*) setInterestFrom:(NSString*) value;
- (ContentProdAccountInfoBuilder*) clearInterestFrom;

- (BOOL) hasProductBatchNo;
- (NSString*) productBatchNo;
- (ContentProdAccountInfoBuilder*) setProductBatchNo:(NSString*) value;
- (ContentProdAccountInfoBuilder*) clearProductBatchNo;
@end

#define SolidCard_cardId @"cardId"
#define SolidCard_pan @"pan"
#define SolidCard_userMebCode @"userMebCode"
#define SolidCard_status @"status"
#define SolidCard_crtTime @"crtTime"
#define SolidCard_updTime @"updTime"
#define SolidCard_cardType @"cardType"
@interface ContentSolidCard : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasCardId_:1;
  BOOL hasPan_:1;
  BOOL hasUserMebCode_:1;
  BOOL hasStatus_:1;
  BOOL hasCrtTime_:1;
  BOOL hasUpdTime_:1;
  BOOL hasCardType_:1;
  NSString* cardId;
  NSString* pan;
  NSString* userMebCode;
  NSString* status;
  NSString* crtTime;
  NSString* updTime;
  NSString* cardType;
}
- (BOOL) hasCardId;
- (BOOL) hasPan;
- (BOOL) hasUserMebCode;
- (BOOL) hasStatus;
- (BOOL) hasCrtTime;
- (BOOL) hasUpdTime;
- (BOOL) hasCardType;
@property (readonly, strong) NSString* cardId;
@property (readonly, strong) NSString* pan;
@property (readonly, strong) NSString* userMebCode;
@property (readonly, strong) NSString* status;
@property (readonly, strong) NSString* crtTime;
@property (readonly, strong) NSString* updTime;
@property (readonly, strong) NSString* cardType;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ContentSolidCardBuilder*) builder;
+ (ContentSolidCardBuilder*) builder;
+ (ContentSolidCardBuilder*) builderWithPrototype:(ContentSolidCard*) prototype;
- (ContentSolidCardBuilder*) toBuilder;

+ (ContentSolidCard*) parseFromData:(NSData*) data;
+ (ContentSolidCard*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentSolidCard*) parseFromInputStream:(NSInputStream*) input;
+ (ContentSolidCard*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentSolidCard*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ContentSolidCard*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ContentSolidCardBuilder : PBGeneratedMessageBuilder {
@private
  ContentSolidCard* resultSolidCard;
}

- (ContentSolidCard*) defaultInstance;

- (ContentSolidCardBuilder*) clear;
- (ContentSolidCardBuilder*) clone;

- (ContentSolidCard*) build;
- (ContentSolidCard*) buildPartial;

- (ContentSolidCardBuilder*) mergeFrom:(ContentSolidCard*) other;
- (ContentSolidCardBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ContentSolidCardBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasCardId;
- (NSString*) cardId;
- (ContentSolidCardBuilder*) setCardId:(NSString*) value;
- (ContentSolidCardBuilder*) clearCardId;

- (BOOL) hasPan;
- (NSString*) pan;
- (ContentSolidCardBuilder*) setPan:(NSString*) value;
- (ContentSolidCardBuilder*) clearPan;

- (BOOL) hasUserMebCode;
- (NSString*) userMebCode;
- (ContentSolidCardBuilder*) setUserMebCode:(NSString*) value;
- (ContentSolidCardBuilder*) clearUserMebCode;

- (BOOL) hasStatus;
- (NSString*) status;
- (ContentSolidCardBuilder*) setStatus:(NSString*) value;
- (ContentSolidCardBuilder*) clearStatus;

- (BOOL) hasCrtTime;
- (NSString*) crtTime;
- (ContentSolidCardBuilder*) setCrtTime:(NSString*) value;
- (ContentSolidCardBuilder*) clearCrtTime;

- (BOOL) hasUpdTime;
- (NSString*) updTime;
- (ContentSolidCardBuilder*) setUpdTime:(NSString*) value;
- (ContentSolidCardBuilder*) clearUpdTime;

- (BOOL) hasCardType;
- (NSString*) cardType;
- (ContentSolidCardBuilder*) setCardType:(NSString*) value;
- (ContentSolidCardBuilder*) clearCardType;
@end

#define FinancialInfo_totalAmt @"totalAmt"
#define FinancialInfo_fpdBalance @"fpdBalance"
#define FinancialInfo_lastFpdProfit @"lastFpdProfit"
#define FinancialInfo_cumulativeFpdProfit @"cumulativeFpdProfit"
#define FinancialInfo_atpHoldAmt @"atpHoldAmt"
#define FinancialInfo_atpHoldProfit @"atpHoldProfit"
#define FinancialInfo_atpSubscribeAmt @"atpSubscribeAmt"
#define FinancialInfo_rate @"rate"
#define FinancialInfo_operableBalance @"operableBalance"
#define FinancialInfo_transferableBalance @"transferableBalance"
#define FinancialInfo_redeemToBeConfirmedBalance @"redeemToBeConfirmedBalance"
#define FinancialInfo_toBeConfirmedBalance @"toBeConfirmedBalance"
#define FinancialInfo_profit @"profit"
#define FinancialInfo_profitRateSeven @"profitRateSeven"
#define FinancialInfo_insureAmt @"insureAmt"
#define FinancialInfo_fundsAsset @"fundsAsset"
#define FinancialInfo_kqbTotalProfit @"kqbTotalProfit"
#define FinancialInfo_kqbProfit @"kqbProfit"
#define FinancialInfo_kqbRealShare @"kqbRealShare"
#define FinancialInfo_peAmount @"peAmount"
#define FinancialInfo_peAppointNum @"peAppointNum"
#define FinancialInfo_peIncome @"peIncome"
@interface ContentFinancialInfo : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasTotalAmt_:1;
  BOOL hasFpdBalance_:1;
  BOOL hasLastFpdProfit_:1;
  BOOL hasCumulativeFpdProfit_:1;
  BOOL hasAtpHoldAmt_:1;
  BOOL hasAtpHoldProfit_:1;
  BOOL hasAtpSubscribeAmt_:1;
  BOOL hasRate_:1;
  BOOL hasOperableBalance_:1;
  BOOL hasTransferableBalance_:1;
  BOOL hasRedeemToBeConfirmedBalance_:1;
  BOOL hasToBeConfirmedBalance_:1;
  BOOL hasProfit_:1;
  BOOL hasProfitRateSeven_:1;
  BOOL hasInsureAmt_:1;
  BOOL hasFundsAsset_:1;
  BOOL hasKqbTotalProfit_:1;
  BOOL hasKqbProfit_:1;
  BOOL hasKqbRealShare_:1;
  BOOL hasPeAmount_:1;
  BOOL hasPeAppointNum_:1;
  BOOL hasPeIncome_:1;
  NSString* totalAmt;
  NSString* fpdBalance;
  NSString* lastFpdProfit;
  NSString* cumulativeFpdProfit;
  NSString* atpHoldAmt;
  NSString* atpHoldProfit;
  NSString* atpSubscribeAmt;
  NSString* rate;
  NSString* operableBalance;
  NSString* transferableBalance;
  NSString* redeemToBeConfirmedBalance;
  NSString* toBeConfirmedBalance;
  NSString* profit;
  NSString* profitRateSeven;
  NSString* insureAmt;
  NSString* fundsAsset;
  NSString* kqbTotalProfit;
  NSString* kqbProfit;
  NSString* kqbRealShare;
  NSString* peAmount;
  NSString* peAppointNum;
  NSString* peIncome;
}
- (BOOL) hasTotalAmt;
- (BOOL) hasFpdBalance;
- (BOOL) hasLastFpdProfit;
- (BOOL) hasCumulativeFpdProfit;
- (BOOL) hasAtpHoldAmt;
- (BOOL) hasAtpHoldProfit;
- (BOOL) hasAtpSubscribeAmt;
- (BOOL) hasRate;
- (BOOL) hasOperableBalance;
- (BOOL) hasTransferableBalance;
- (BOOL) hasRedeemToBeConfirmedBalance;
- (BOOL) hasToBeConfirmedBalance;
- (BOOL) hasProfit;
- (BOOL) hasProfitRateSeven;
- (BOOL) hasInsureAmt;
- (BOOL) hasFundsAsset;
- (BOOL) hasKqbTotalProfit;
- (BOOL) hasKqbProfit;
- (BOOL) hasKqbRealShare;
- (BOOL) hasPeAmount;
- (BOOL) hasPeAppointNum;
- (BOOL) hasPeIncome;
@property (readonly, strong) NSString* totalAmt;
@property (readonly, strong) NSString* fpdBalance;
@property (readonly, strong) NSString* lastFpdProfit;
@property (readonly, strong) NSString* cumulativeFpdProfit;
@property (readonly, strong) NSString* atpHoldAmt;
@property (readonly, strong) NSString* atpHoldProfit;
@property (readonly, strong) NSString* atpSubscribeAmt;
@property (readonly, strong) NSString* rate;
@property (readonly, strong) NSString* operableBalance;
@property (readonly, strong) NSString* transferableBalance;
@property (readonly, strong) NSString* redeemToBeConfirmedBalance;
@property (readonly, strong) NSString* toBeConfirmedBalance;
@property (readonly, strong) NSString* profit;
@property (readonly, strong) NSString* profitRateSeven;
@property (readonly, strong) NSString* insureAmt;
@property (readonly, strong) NSString* fundsAsset;
@property (readonly, strong) NSString* kqbTotalProfit;
@property (readonly, strong) NSString* kqbProfit;
@property (readonly, strong) NSString* kqbRealShare;
@property (readonly, strong) NSString* peAmount;
@property (readonly, strong) NSString* peAppointNum;
@property (readonly, strong) NSString* peIncome;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ContentFinancialInfoBuilder*) builder;
+ (ContentFinancialInfoBuilder*) builder;
+ (ContentFinancialInfoBuilder*) builderWithPrototype:(ContentFinancialInfo*) prototype;
- (ContentFinancialInfoBuilder*) toBuilder;

+ (ContentFinancialInfo*) parseFromData:(NSData*) data;
+ (ContentFinancialInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentFinancialInfo*) parseFromInputStream:(NSInputStream*) input;
+ (ContentFinancialInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentFinancialInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ContentFinancialInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ContentFinancialInfoBuilder : PBGeneratedMessageBuilder {
@private
  ContentFinancialInfo* resultFinancialInfo;
}

- (ContentFinancialInfo*) defaultInstance;

- (ContentFinancialInfoBuilder*) clear;
- (ContentFinancialInfoBuilder*) clone;

- (ContentFinancialInfo*) build;
- (ContentFinancialInfo*) buildPartial;

- (ContentFinancialInfoBuilder*) mergeFrom:(ContentFinancialInfo*) other;
- (ContentFinancialInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ContentFinancialInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasTotalAmt;
- (NSString*) totalAmt;
- (ContentFinancialInfoBuilder*) setTotalAmt:(NSString*) value;
- (ContentFinancialInfoBuilder*) clearTotalAmt;

- (BOOL) hasFpdBalance;
- (NSString*) fpdBalance;
- (ContentFinancialInfoBuilder*) setFpdBalance:(NSString*) value;
- (ContentFinancialInfoBuilder*) clearFpdBalance;

- (BOOL) hasLastFpdProfit;
- (NSString*) lastFpdProfit;
- (ContentFinancialInfoBuilder*) setLastFpdProfit:(NSString*) value;
- (ContentFinancialInfoBuilder*) clearLastFpdProfit;

- (BOOL) hasCumulativeFpdProfit;
- (NSString*) cumulativeFpdProfit;
- (ContentFinancialInfoBuilder*) setCumulativeFpdProfit:(NSString*) value;
- (ContentFinancialInfoBuilder*) clearCumulativeFpdProfit;

- (BOOL) hasAtpHoldAmt;
- (NSString*) atpHoldAmt;
- (ContentFinancialInfoBuilder*) setAtpHoldAmt:(NSString*) value;
- (ContentFinancialInfoBuilder*) clearAtpHoldAmt;

- (BOOL) hasAtpHoldProfit;
- (NSString*) atpHoldProfit;
- (ContentFinancialInfoBuilder*) setAtpHoldProfit:(NSString*) value;
- (ContentFinancialInfoBuilder*) clearAtpHoldProfit;

- (BOOL) hasAtpSubscribeAmt;
- (NSString*) atpSubscribeAmt;
- (ContentFinancialInfoBuilder*) setAtpSubscribeAmt:(NSString*) value;
- (ContentFinancialInfoBuilder*) clearAtpSubscribeAmt;

- (BOOL) hasRate;
- (NSString*) rate;
- (ContentFinancialInfoBuilder*) setRate:(NSString*) value;
- (ContentFinancialInfoBuilder*) clearRate;

- (BOOL) hasOperableBalance;
- (NSString*) operableBalance;
- (ContentFinancialInfoBuilder*) setOperableBalance:(NSString*) value;
- (ContentFinancialInfoBuilder*) clearOperableBalance;

- (BOOL) hasTransferableBalance;
- (NSString*) transferableBalance;
- (ContentFinancialInfoBuilder*) setTransferableBalance:(NSString*) value;
- (ContentFinancialInfoBuilder*) clearTransferableBalance;

- (BOOL) hasRedeemToBeConfirmedBalance;
- (NSString*) redeemToBeConfirmedBalance;
- (ContentFinancialInfoBuilder*) setRedeemToBeConfirmedBalance:(NSString*) value;
- (ContentFinancialInfoBuilder*) clearRedeemToBeConfirmedBalance;

- (BOOL) hasToBeConfirmedBalance;
- (NSString*) toBeConfirmedBalance;
- (ContentFinancialInfoBuilder*) setToBeConfirmedBalance:(NSString*) value;
- (ContentFinancialInfoBuilder*) clearToBeConfirmedBalance;

- (BOOL) hasProfit;
- (NSString*) profit;
- (ContentFinancialInfoBuilder*) setProfit:(NSString*) value;
- (ContentFinancialInfoBuilder*) clearProfit;

- (BOOL) hasProfitRateSeven;
- (NSString*) profitRateSeven;
- (ContentFinancialInfoBuilder*) setProfitRateSeven:(NSString*) value;
- (ContentFinancialInfoBuilder*) clearProfitRateSeven;

- (BOOL) hasInsureAmt;
- (NSString*) insureAmt;
- (ContentFinancialInfoBuilder*) setInsureAmt:(NSString*) value;
- (ContentFinancialInfoBuilder*) clearInsureAmt;

- (BOOL) hasFundsAsset;
- (NSString*) fundsAsset;
- (ContentFinancialInfoBuilder*) setFundsAsset:(NSString*) value;
- (ContentFinancialInfoBuilder*) clearFundsAsset;

- (BOOL) hasKqbTotalProfit;
- (NSString*) kqbTotalProfit;
- (ContentFinancialInfoBuilder*) setKqbTotalProfit:(NSString*) value;
- (ContentFinancialInfoBuilder*) clearKqbTotalProfit;

- (BOOL) hasKqbProfit;
- (NSString*) kqbProfit;
- (ContentFinancialInfoBuilder*) setKqbProfit:(NSString*) value;
- (ContentFinancialInfoBuilder*) clearKqbProfit;

- (BOOL) hasKqbRealShare;
- (NSString*) kqbRealShare;
- (ContentFinancialInfoBuilder*) setKqbRealShare:(NSString*) value;
- (ContentFinancialInfoBuilder*) clearKqbRealShare;

- (BOOL) hasPeAmount;
- (NSString*) peAmount;
- (ContentFinancialInfoBuilder*) setPeAmount:(NSString*) value;
- (ContentFinancialInfoBuilder*) clearPeAmount;

- (BOOL) hasPeAppointNum;
- (NSString*) peAppointNum;
- (ContentFinancialInfoBuilder*) setPeAppointNum:(NSString*) value;
- (ContentFinancialInfoBuilder*) clearPeAppointNum;

- (BOOL) hasPeIncome;
- (NSString*) peIncome;
- (ContentFinancialInfoBuilder*) setPeIncome:(NSString*) value;
- (ContentFinancialInfoBuilder*) clearPeIncome;
@end

#define MemberAuthDto_isVfi @"isVfi"
#define MemberAuthDto_isCsi @"isCsi"
#define MemberAuthDto_bankNames @"bankNames"
#define MemberAuthDto_channelNum @"channelNum"
#define MemberAuthDto_needAuthChannelNum @"needAuthChannelNum"
#define MemberAuthDto_isVeriMobile @"isVeriMobile"
#define MemberAuthDto_isDL @"isDl"
#define MemberAuthDto_curAcctType @"curAcctType"
#define MemberAuthDto_upgrade @"upgrade"
@interface ContentMemberAuthDto : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasIsVfi_:1;
  BOOL hasIsCsi_:1;
  BOOL hasBankNames_:1;
  BOOL hasChannelNum_:1;
  BOOL hasNeedAuthChannelNum_:1;
  BOOL hasIsVeriMobile_:1;
  BOOL hasIsDl_:1;
  BOOL hasCurAcctType_:1;
  BOOL hasUpgrade_:1;
  NSString* isVfi;
  NSString* isCsi;
  NSString* bankNames;
  NSString* channelNum;
  NSString* needAuthChannelNum;
  NSString* isVeriMobile;
  NSString* isDl;
  NSString* curAcctType;
  NSString* upgrade;
}
- (BOOL) hasIsVfi;
- (BOOL) hasIsCsi;
- (BOOL) hasBankNames;
- (BOOL) hasChannelNum;
- (BOOL) hasNeedAuthChannelNum;
- (BOOL) hasIsVeriMobile;
- (BOOL) hasIsDl;
- (BOOL) hasCurAcctType;
- (BOOL) hasUpgrade;
@property (readonly, strong) NSString* isVfi;
@property (readonly, strong) NSString* isCsi;
@property (readonly, strong) NSString* bankNames;
@property (readonly, strong) NSString* channelNum;
@property (readonly, strong) NSString* needAuthChannelNum;
@property (readonly, strong) NSString* isVeriMobile;
@property (readonly, strong) NSString* isDl;
@property (readonly, strong) NSString* curAcctType;
@property (readonly, strong) NSString* upgrade;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ContentMemberAuthDtoBuilder*) builder;
+ (ContentMemberAuthDtoBuilder*) builder;
+ (ContentMemberAuthDtoBuilder*) builderWithPrototype:(ContentMemberAuthDto*) prototype;
- (ContentMemberAuthDtoBuilder*) toBuilder;

+ (ContentMemberAuthDto*) parseFromData:(NSData*) data;
+ (ContentMemberAuthDto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentMemberAuthDto*) parseFromInputStream:(NSInputStream*) input;
+ (ContentMemberAuthDto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentMemberAuthDto*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ContentMemberAuthDto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ContentMemberAuthDtoBuilder : PBGeneratedMessageBuilder {
@private
  ContentMemberAuthDto* resultMemberAuthDto;
}

- (ContentMemberAuthDto*) defaultInstance;

- (ContentMemberAuthDtoBuilder*) clear;
- (ContentMemberAuthDtoBuilder*) clone;

- (ContentMemberAuthDto*) build;
- (ContentMemberAuthDto*) buildPartial;

- (ContentMemberAuthDtoBuilder*) mergeFrom:(ContentMemberAuthDto*) other;
- (ContentMemberAuthDtoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ContentMemberAuthDtoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasIsVfi;
- (NSString*) isVfi;
- (ContentMemberAuthDtoBuilder*) setIsVfi:(NSString*) value;
- (ContentMemberAuthDtoBuilder*) clearIsVfi;

- (BOOL) hasIsCsi;
- (NSString*) isCsi;
- (ContentMemberAuthDtoBuilder*) setIsCsi:(NSString*) value;
- (ContentMemberAuthDtoBuilder*) clearIsCsi;

- (BOOL) hasBankNames;
- (NSString*) bankNames;
- (ContentMemberAuthDtoBuilder*) setBankNames:(NSString*) value;
- (ContentMemberAuthDtoBuilder*) clearBankNames;

- (BOOL) hasChannelNum;
- (NSString*) channelNum;
- (ContentMemberAuthDtoBuilder*) setChannelNum:(NSString*) value;
- (ContentMemberAuthDtoBuilder*) clearChannelNum;

- (BOOL) hasNeedAuthChannelNum;
- (NSString*) needAuthChannelNum;
- (ContentMemberAuthDtoBuilder*) setNeedAuthChannelNum:(NSString*) value;
- (ContentMemberAuthDtoBuilder*) clearNeedAuthChannelNum;

- (BOOL) hasIsVeriMobile;
- (NSString*) isVeriMobile;
- (ContentMemberAuthDtoBuilder*) setIsVeriMobile:(NSString*) value;
- (ContentMemberAuthDtoBuilder*) clearIsVeriMobile;

- (BOOL) hasIsDl;
- (NSString*) isDl;
- (ContentMemberAuthDtoBuilder*) setIsDl:(NSString*) value;
- (ContentMemberAuthDtoBuilder*) clearIsDl;

- (BOOL) hasCurAcctType;
- (NSString*) curAcctType;
- (ContentMemberAuthDtoBuilder*) setCurAcctType:(NSString*) value;
- (ContentMemberAuthDtoBuilder*) clearCurAcctType;

- (BOOL) hasUpgrade;
- (NSString*) upgrade;
- (ContentMemberAuthDtoBuilder*) setUpgrade:(NSString*) value;
- (ContentMemberAuthDtoBuilder*) clearUpgrade;
@end

#define BankLimitAmountDto_id @"id"
#define BankLimitAmountDto_bankId @"bankId"
#define BankLimitAmountDto_cardType @"cardType"
#define BankLimitAmountDto_productCode @"productCode"
#define BankLimitAmountDto_dayAmount @"dayAmount"
#define BankLimitAmountDto_monthAmount @"monthAmount"
#define BankLimitAmountDto_singleAmount @"singleAmount"
@interface ContentBankLimitAmountDto : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasId_:1;
  BOOL hasBankId_:1;
  BOOL hasCardType_:1;
  BOOL hasProductCode_:1;
  BOOL hasDayAmount_:1;
  BOOL hasMonthAmount_:1;
  BOOL hasSingleAmount_:1;
  NSString* id;
  NSString* bankId;
  NSString* cardType;
  NSString* productCode;
  NSString* dayAmount;
  NSString* monthAmount;
  NSString* singleAmount;
}
- (BOOL) hasId;
- (BOOL) hasBankId;
- (BOOL) hasCardType;
- (BOOL) hasProductCode;
- (BOOL) hasDayAmount;
- (BOOL) hasMonthAmount;
- (BOOL) hasSingleAmount;
@property (readonly, strong) NSString* id;
@property (readonly, strong) NSString* bankId;
@property (readonly, strong) NSString* cardType;
@property (readonly, strong) NSString* productCode;
@property (readonly, strong) NSString* dayAmount;
@property (readonly, strong) NSString* monthAmount;
@property (readonly, strong) NSString* singleAmount;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ContentBankLimitAmountDtoBuilder*) builder;
+ (ContentBankLimitAmountDtoBuilder*) builder;
+ (ContentBankLimitAmountDtoBuilder*) builderWithPrototype:(ContentBankLimitAmountDto*) prototype;
- (ContentBankLimitAmountDtoBuilder*) toBuilder;

+ (ContentBankLimitAmountDto*) parseFromData:(NSData*) data;
+ (ContentBankLimitAmountDto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentBankLimitAmountDto*) parseFromInputStream:(NSInputStream*) input;
+ (ContentBankLimitAmountDto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentBankLimitAmountDto*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ContentBankLimitAmountDto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ContentBankLimitAmountDtoBuilder : PBGeneratedMessageBuilder {
@private
  ContentBankLimitAmountDto* resultBankLimitAmountDto;
}

- (ContentBankLimitAmountDto*) defaultInstance;

- (ContentBankLimitAmountDtoBuilder*) clear;
- (ContentBankLimitAmountDtoBuilder*) clone;

- (ContentBankLimitAmountDto*) build;
- (ContentBankLimitAmountDto*) buildPartial;

- (ContentBankLimitAmountDtoBuilder*) mergeFrom:(ContentBankLimitAmountDto*) other;
- (ContentBankLimitAmountDtoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ContentBankLimitAmountDtoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasId;
- (NSString*) id;
- (ContentBankLimitAmountDtoBuilder*) setId:(NSString*) value;
- (ContentBankLimitAmountDtoBuilder*) clearId;

- (BOOL) hasBankId;
- (NSString*) bankId;
- (ContentBankLimitAmountDtoBuilder*) setBankId:(NSString*) value;
- (ContentBankLimitAmountDtoBuilder*) clearBankId;

- (BOOL) hasCardType;
- (NSString*) cardType;
- (ContentBankLimitAmountDtoBuilder*) setCardType:(NSString*) value;
- (ContentBankLimitAmountDtoBuilder*) clearCardType;

- (BOOL) hasProductCode;
- (NSString*) productCode;
- (ContentBankLimitAmountDtoBuilder*) setProductCode:(NSString*) value;
- (ContentBankLimitAmountDtoBuilder*) clearProductCode;

- (BOOL) hasDayAmount;
- (NSString*) dayAmount;
- (ContentBankLimitAmountDtoBuilder*) setDayAmount:(NSString*) value;
- (ContentBankLimitAmountDtoBuilder*) clearDayAmount;

- (BOOL) hasMonthAmount;
- (NSString*) monthAmount;
- (ContentBankLimitAmountDtoBuilder*) setMonthAmount:(NSString*) value;
- (ContentBankLimitAmountDtoBuilder*) clearMonthAmount;

- (BOOL) hasSingleAmount;
- (NSString*) singleAmount;
- (ContentBankLimitAmountDtoBuilder*) setSingleAmount:(NSString*) value;
- (ContentBankLimitAmountDtoBuilder*) clearSingleAmount;
@end

#define ConflictAcc_pwid @"pwid"
#define ConflictAcc_sysFrom @"sysFrom"
@interface ContentConflictAcc : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasPwid_:1;
  BOOL hasSysFrom_:1;
  NSString* pwid;
  NSString* sysFrom;
}
- (BOOL) hasPwid;
- (BOOL) hasSysFrom;
@property (readonly, strong) NSString* pwid;
@property (readonly, strong) NSString* sysFrom;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ContentConflictAccBuilder*) builder;
+ (ContentConflictAccBuilder*) builder;
+ (ContentConflictAccBuilder*) builderWithPrototype:(ContentConflictAcc*) prototype;
- (ContentConflictAccBuilder*) toBuilder;

+ (ContentConflictAcc*) parseFromData:(NSData*) data;
+ (ContentConflictAcc*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentConflictAcc*) parseFromInputStream:(NSInputStream*) input;
+ (ContentConflictAcc*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentConflictAcc*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ContentConflictAcc*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ContentConflictAccBuilder : PBGeneratedMessageBuilder {
@private
  ContentConflictAcc* resultConflictAcc;
}

- (ContentConflictAcc*) defaultInstance;

- (ContentConflictAccBuilder*) clear;
- (ContentConflictAccBuilder*) clone;

- (ContentConflictAcc*) build;
- (ContentConflictAcc*) buildPartial;

- (ContentConflictAccBuilder*) mergeFrom:(ContentConflictAcc*) other;
- (ContentConflictAccBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ContentConflictAccBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasPwid;
- (NSString*) pwid;
- (ContentConflictAccBuilder*) setPwid:(NSString*) value;
- (ContentConflictAccBuilder*) clearPwid;

- (BOOL) hasSysFrom;
- (NSString*) sysFrom;
- (ContentConflictAccBuilder*) setSysFrom:(NSString*) value;
- (ContentConflictAccBuilder*) clearSysFrom;
@end

#define AppUpInfo_model @"model"
#define AppUpInfo_systemName @"systemName"
#define AppUpInfo_systemVersion @"systemVersion"
#define AppUpInfo_deviceCity @"deviceCity"
#define AppUpInfo_deviceProv @"deviceProv"
#define AppUpInfo_resolution @"resolution"
#define AppUpInfo_netWorkType @"netWorkType"
#define AppUpInfo_region @"region"
#define AppUpInfo_currentTime @"currentTime"
#define AppUpInfo_activateAppChannel @"activateAppChannel"
#define AppUpInfo_deviceToken @"deviceToken"
#define AppUpInfo_newBaiduTag @"newBaiduTag"
#define AppUpInfo_deviceName @"deviceName"
#define AppUpInfo_idfa @"idfa"
#define AppUpInfo_idfv @"idfv"
#define AppUpInfo_userAgent @"userAgent"
@interface ContentAppUpInfo : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasModel_:1;
  BOOL hasSystemName_:1;
  BOOL hasSystemVersion_:1;
  BOOL hasDeviceCity_:1;
  BOOL hasDeviceProv_:1;
  BOOL hasResolution_:1;
  BOOL hasNetWorkType_:1;
  BOOL hasRegion_:1;
  BOOL hasCurrentTime_:1;
  BOOL hasActivateAppChannel_:1;
  BOOL hasDeviceToken_:1;
  BOOL hasNewBaiduTag_:1;
  BOOL hasDeviceName_:1;
  BOOL hasIdfa_:1;
  BOOL hasIdfv_:1;
  BOOL hasUserAgent_:1;
  NSString* model;
  NSString* systemName;
  NSString* systemVersion;
  NSString* deviceCity;
  NSString* deviceProv;
  NSString* resolution;
  NSString* netWorkType;
  NSString* region;
  NSString* currentTime;
  NSString* activateAppChannel;
  NSString* deviceToken;
  NSString* newBaiduTag;
  NSString* deviceName;
  NSString* idfa;
  NSString* idfv;
  NSString* userAgent;
}
- (BOOL) hasModel;
- (BOOL) hasSystemName;
- (BOOL) hasSystemVersion;
- (BOOL) hasDeviceCity;
- (BOOL) hasDeviceProv;
- (BOOL) hasResolution;
- (BOOL) hasNetWorkType;
- (BOOL) hasRegion;
- (BOOL) hasCurrentTime;
- (BOOL) hasActivateAppChannel;
- (BOOL) hasDeviceToken;
- (BOOL) hasNewBaiduTag;
- (BOOL) hasDeviceName;
- (BOOL) hasIdfa;
- (BOOL) hasIdfv;
- (BOOL) hasUserAgent;
@property (readonly, strong) NSString* model;
@property (readonly, strong) NSString* systemName;
@property (readonly, strong) NSString* systemVersion;
@property (readonly, strong) NSString* deviceCity;
@property (readonly, strong) NSString* deviceProv;
@property (readonly, strong) NSString* resolution;
@property (readonly, strong) NSString* netWorkType;
@property (readonly, strong) NSString* region;
@property (readonly, strong) NSString* currentTime;
@property (readonly, strong) NSString* activateAppChannel;
@property (readonly, strong) NSString* deviceToken;
@property (readonly, strong) NS_RETURNS_NOT_RETAINED NSString* newBaiduTag;
@property (readonly, strong) NSString* deviceName;
@property (readonly, strong) NSString* idfa;
@property (readonly, strong) NSString* idfv;
@property (readonly, strong) NSString* userAgent;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ContentAppUpInfoBuilder*) builder;
+ (ContentAppUpInfoBuilder*) builder;
+ (ContentAppUpInfoBuilder*) builderWithPrototype:(ContentAppUpInfo*) prototype;
- (ContentAppUpInfoBuilder*) toBuilder;

+ (ContentAppUpInfo*) parseFromData:(NSData*) data;
+ (ContentAppUpInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentAppUpInfo*) parseFromInputStream:(NSInputStream*) input;
+ (ContentAppUpInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentAppUpInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ContentAppUpInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ContentAppUpInfoBuilder : PBGeneratedMessageBuilder {
@private
  ContentAppUpInfo* resultAppUpInfo;
}

- (ContentAppUpInfo*) defaultInstance;

- (ContentAppUpInfoBuilder*) clear;
- (ContentAppUpInfoBuilder*) clone;

- (ContentAppUpInfo*) build;
- (ContentAppUpInfo*) buildPartial;

- (ContentAppUpInfoBuilder*) mergeFrom:(ContentAppUpInfo*) other;
- (ContentAppUpInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ContentAppUpInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasModel;
- (NSString*) model;
- (ContentAppUpInfoBuilder*) setModel:(NSString*) value;
- (ContentAppUpInfoBuilder*) clearModel;

- (BOOL) hasSystemName;
- (NSString*) systemName;
- (ContentAppUpInfoBuilder*) setSystemName:(NSString*) value;
- (ContentAppUpInfoBuilder*) clearSystemName;

- (BOOL) hasSystemVersion;
- (NSString*) systemVersion;
- (ContentAppUpInfoBuilder*) setSystemVersion:(NSString*) value;
- (ContentAppUpInfoBuilder*) clearSystemVersion;

- (BOOL) hasDeviceCity;
- (NSString*) deviceCity;
- (ContentAppUpInfoBuilder*) setDeviceCity:(NSString*) value;
- (ContentAppUpInfoBuilder*) clearDeviceCity;

- (BOOL) hasDeviceProv;
- (NSString*) deviceProv;
- (ContentAppUpInfoBuilder*) setDeviceProv:(NSString*) value;
- (ContentAppUpInfoBuilder*) clearDeviceProv;

- (BOOL) hasResolution;
- (NSString*) resolution;
- (ContentAppUpInfoBuilder*) setResolution:(NSString*) value;
- (ContentAppUpInfoBuilder*) clearResolution;

- (BOOL) hasNetWorkType;
- (NSString*) netWorkType;
- (ContentAppUpInfoBuilder*) setNetWorkType:(NSString*) value;
- (ContentAppUpInfoBuilder*) clearNetWorkType;

- (BOOL) hasRegion;
- (NSString*) region;
- (ContentAppUpInfoBuilder*) setRegion:(NSString*) value;
- (ContentAppUpInfoBuilder*) clearRegion;

- (BOOL) hasCurrentTime;
- (NSString*) currentTime;
- (ContentAppUpInfoBuilder*) setCurrentTime:(NSString*) value;
- (ContentAppUpInfoBuilder*) clearCurrentTime;

- (BOOL) hasActivateAppChannel;
- (NSString*) activateAppChannel;
- (ContentAppUpInfoBuilder*) setActivateAppChannel:(NSString*) value;
- (ContentAppUpInfoBuilder*) clearActivateAppChannel;

- (BOOL) hasDeviceToken;
- (NSString*) deviceToken;
- (ContentAppUpInfoBuilder*) setDeviceToken:(NSString*) value;
- (ContentAppUpInfoBuilder*) clearDeviceToken;

- (BOOL) hasNewBaiduTag;
- (NSString*) newBaiduTag NS_RETURNS_NOT_RETAINED;
- (ContentAppUpInfoBuilder*) setNewBaiduTag:(NSString*) value;
- (ContentAppUpInfoBuilder*) clearNewBaiduTag;

- (BOOL) hasDeviceName;
- (NSString*) deviceName;
- (ContentAppUpInfoBuilder*) setDeviceName:(NSString*) value;
- (ContentAppUpInfoBuilder*) clearDeviceName;

- (BOOL) hasIdfa;
- (NSString*) idfa;
- (ContentAppUpInfoBuilder*) setIdfa:(NSString*) value;
- (ContentAppUpInfoBuilder*) clearIdfa;

- (BOOL) hasIdfv;
- (NSString*) idfv;
- (ContentAppUpInfoBuilder*) setIdfv:(NSString*) value;
- (ContentAppUpInfoBuilder*) clearIdfv;

- (BOOL) hasUserAgent;
- (NSString*) userAgent;
- (ContentAppUpInfoBuilder*) setUserAgent:(NSString*) value;
- (ContentAppUpInfoBuilder*) clearUserAgent;
@end

#define AtpTradeOrder_atpProdCode @"atpProdCode"
#define AtpTradeOrder_amount @"amount"
#define AtpTradeOrder_atpProdName @"atpProdName"
#define AtpTradeOrder_finProdType @"finProdType"
#define AtpTradeOrder_status @"status"
#define AtpTradeOrder_crtTime @"crtTime"
#define AtpTradeOrder_tradeType @"tradeType"
#define AtpTradeOrder_returnRateExp @"returnRateExp"
#define AtpTradeOrder_holdShare @"holdShare"
#define AtpTradeOrder_orderId @"orderId"
#define AtpTradeOrder_accountType @"accountType"
#define AtpTradeOrder_tradePrice @"tradePrice"
#define AtpTradeOrder_premiumRate @"premiumRate"
#define AtpTradeOrder_interestFrom @"interestFrom"
#define AtpTradeOrder_interestTo @"interestTo"
#define AtpTradeOrder_returnRateDesc @"returnRateDesc"
#define AtpTradeOrder_currentPrice @"currentPrice"
#define AtpTradeOrder_remark @"remark"
#define AtpTradeOrder_tradeTypeDesc @"tradeTypeDesc"
#define AtpTradeOrder_acctNum @"acctNum"
#define AtpTradeOrder_depositBank @"depositBank"
#define AtpTradeOrder_acctHeaded @"acctHeaded"
#define AtpTradeOrder_finishTime @"finishTime"
@interface ContentAtpTradeOrder : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasAtpProdCode_:1;
  BOOL hasAmount_:1;
  BOOL hasAtpProdName_:1;
  BOOL hasFinProdType_:1;
  BOOL hasStatus_:1;
  BOOL hasCrtTime_:1;
  BOOL hasTradeType_:1;
  BOOL hasReturnRateExp_:1;
  BOOL hasHoldShare_:1;
  BOOL hasOrderId_:1;
  BOOL hasAccountType_:1;
  BOOL hasTradePrice_:1;
  BOOL hasPremiumRate_:1;
  BOOL hasInterestFrom_:1;
  BOOL hasInterestTo_:1;
  BOOL hasReturnRateDesc_:1;
  BOOL hasCurrentPrice_:1;
  BOOL hasRemark_:1;
  BOOL hasTradeTypeDesc_:1;
  BOOL hasAcctNum_:1;
  BOOL hasDepositBank_:1;
  BOOL hasAcctHeaded_:1;
  BOOL hasFinishTime_:1;
  NSString* atpProdCode;
  NSString* amount;
  NSString* atpProdName;
  NSString* finProdType;
  NSString* status;
  NSString* crtTime;
  NSString* tradeType;
  NSString* returnRateExp;
  NSString* holdShare;
  NSString* orderId;
  NSString* accountType;
  NSString* tradePrice;
  NSString* premiumRate;
  NSString* interestFrom;
  NSString* interestTo;
  NSString* returnRateDesc;
  NSString* currentPrice;
  NSString* remark;
  NSString* tradeTypeDesc;
  NSString* acctNum;
  NSString* depositBank;
  NSString* acctHeaded;
  NSString* finishTime;
}
- (BOOL) hasAtpProdCode;
- (BOOL) hasAmount;
- (BOOL) hasAtpProdName;
- (BOOL) hasFinProdType;
- (BOOL) hasStatus;
- (BOOL) hasCrtTime;
- (BOOL) hasTradeType;
- (BOOL) hasReturnRateExp;
- (BOOL) hasHoldShare;
- (BOOL) hasOrderId;
- (BOOL) hasAccountType;
- (BOOL) hasTradePrice;
- (BOOL) hasPremiumRate;
- (BOOL) hasInterestFrom;
- (BOOL) hasInterestTo;
- (BOOL) hasReturnRateDesc;
- (BOOL) hasCurrentPrice;
- (BOOL) hasRemark;
- (BOOL) hasTradeTypeDesc;
- (BOOL) hasAcctNum;
- (BOOL) hasDepositBank;
- (BOOL) hasAcctHeaded;
- (BOOL) hasFinishTime;
@property (readonly, strong) NSString* atpProdCode;
@property (readonly, strong) NSString* amount;
@property (readonly, strong) NSString* atpProdName;
@property (readonly, strong) NSString* finProdType;
@property (readonly, strong) NSString* status;
@property (readonly, strong) NSString* crtTime;
@property (readonly, strong) NSString* tradeType;
@property (readonly, strong) NSString* returnRateExp;
@property (readonly, strong) NSString* holdShare;
@property (readonly, strong) NSString* orderId;
@property (readonly, strong) NSString* accountType;
@property (readonly, strong) NSString* tradePrice;
@property (readonly, strong) NSString* premiumRate;
@property (readonly, strong) NSString* interestFrom;
@property (readonly, strong) NSString* interestTo;
@property (readonly, strong) NSString* returnRateDesc;
@property (readonly, strong) NSString* currentPrice;
@property (readonly, strong) NSString* remark;
@property (readonly, strong) NSString* tradeTypeDesc;
@property (readonly, strong) NSString* acctNum;
@property (readonly, strong) NSString* depositBank;
@property (readonly, strong) NSString* acctHeaded;
@property (readonly, strong) NSString* finishTime;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ContentAtpTradeOrderBuilder*) builder;
+ (ContentAtpTradeOrderBuilder*) builder;
+ (ContentAtpTradeOrderBuilder*) builderWithPrototype:(ContentAtpTradeOrder*) prototype;
- (ContentAtpTradeOrderBuilder*) toBuilder;

+ (ContentAtpTradeOrder*) parseFromData:(NSData*) data;
+ (ContentAtpTradeOrder*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentAtpTradeOrder*) parseFromInputStream:(NSInputStream*) input;
+ (ContentAtpTradeOrder*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentAtpTradeOrder*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ContentAtpTradeOrder*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ContentAtpTradeOrderBuilder : PBGeneratedMessageBuilder {
@private
  ContentAtpTradeOrder* resultAtpTradeOrder;
}

- (ContentAtpTradeOrder*) defaultInstance;

- (ContentAtpTradeOrderBuilder*) clear;
- (ContentAtpTradeOrderBuilder*) clone;

- (ContentAtpTradeOrder*) build;
- (ContentAtpTradeOrder*) buildPartial;

- (ContentAtpTradeOrderBuilder*) mergeFrom:(ContentAtpTradeOrder*) other;
- (ContentAtpTradeOrderBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ContentAtpTradeOrderBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasAtpProdCode;
- (NSString*) atpProdCode;
- (ContentAtpTradeOrderBuilder*) setAtpProdCode:(NSString*) value;
- (ContentAtpTradeOrderBuilder*) clearAtpProdCode;

- (BOOL) hasAmount;
- (NSString*) amount;
- (ContentAtpTradeOrderBuilder*) setAmount:(NSString*) value;
- (ContentAtpTradeOrderBuilder*) clearAmount;

- (BOOL) hasAtpProdName;
- (NSString*) atpProdName;
- (ContentAtpTradeOrderBuilder*) setAtpProdName:(NSString*) value;
- (ContentAtpTradeOrderBuilder*) clearAtpProdName;

- (BOOL) hasFinProdType;
- (NSString*) finProdType;
- (ContentAtpTradeOrderBuilder*) setFinProdType:(NSString*) value;
- (ContentAtpTradeOrderBuilder*) clearFinProdType;

- (BOOL) hasStatus;
- (NSString*) status;
- (ContentAtpTradeOrderBuilder*) setStatus:(NSString*) value;
- (ContentAtpTradeOrderBuilder*) clearStatus;

- (BOOL) hasCrtTime;
- (NSString*) crtTime;
- (ContentAtpTradeOrderBuilder*) setCrtTime:(NSString*) value;
- (ContentAtpTradeOrderBuilder*) clearCrtTime;

- (BOOL) hasTradeType;
- (NSString*) tradeType;
- (ContentAtpTradeOrderBuilder*) setTradeType:(NSString*) value;
- (ContentAtpTradeOrderBuilder*) clearTradeType;

- (BOOL) hasReturnRateExp;
- (NSString*) returnRateExp;
- (ContentAtpTradeOrderBuilder*) setReturnRateExp:(NSString*) value;
- (ContentAtpTradeOrderBuilder*) clearReturnRateExp;

- (BOOL) hasHoldShare;
- (NSString*) holdShare;
- (ContentAtpTradeOrderBuilder*) setHoldShare:(NSString*) value;
- (ContentAtpTradeOrderBuilder*) clearHoldShare;

- (BOOL) hasOrderId;
- (NSString*) orderId;
- (ContentAtpTradeOrderBuilder*) setOrderId:(NSString*) value;
- (ContentAtpTradeOrderBuilder*) clearOrderId;

- (BOOL) hasAccountType;
- (NSString*) accountType;
- (ContentAtpTradeOrderBuilder*) setAccountType:(NSString*) value;
- (ContentAtpTradeOrderBuilder*) clearAccountType;

- (BOOL) hasTradePrice;
- (NSString*) tradePrice;
- (ContentAtpTradeOrderBuilder*) setTradePrice:(NSString*) value;
- (ContentAtpTradeOrderBuilder*) clearTradePrice;

- (BOOL) hasPremiumRate;
- (NSString*) premiumRate;
- (ContentAtpTradeOrderBuilder*) setPremiumRate:(NSString*) value;
- (ContentAtpTradeOrderBuilder*) clearPremiumRate;

- (BOOL) hasInterestFrom;
- (NSString*) interestFrom;
- (ContentAtpTradeOrderBuilder*) setInterestFrom:(NSString*) value;
- (ContentAtpTradeOrderBuilder*) clearInterestFrom;

- (BOOL) hasInterestTo;
- (NSString*) interestTo;
- (ContentAtpTradeOrderBuilder*) setInterestTo:(NSString*) value;
- (ContentAtpTradeOrderBuilder*) clearInterestTo;

- (BOOL) hasReturnRateDesc;
- (NSString*) returnRateDesc;
- (ContentAtpTradeOrderBuilder*) setReturnRateDesc:(NSString*) value;
- (ContentAtpTradeOrderBuilder*) clearReturnRateDesc;

- (BOOL) hasCurrentPrice;
- (NSString*) currentPrice;
- (ContentAtpTradeOrderBuilder*) setCurrentPrice:(NSString*) value;
- (ContentAtpTradeOrderBuilder*) clearCurrentPrice;

- (BOOL) hasRemark;
- (NSString*) remark;
- (ContentAtpTradeOrderBuilder*) setRemark:(NSString*) value;
- (ContentAtpTradeOrderBuilder*) clearRemark;

- (BOOL) hasTradeTypeDesc;
- (NSString*) tradeTypeDesc;
- (ContentAtpTradeOrderBuilder*) setTradeTypeDesc:(NSString*) value;
- (ContentAtpTradeOrderBuilder*) clearTradeTypeDesc;

- (BOOL) hasAcctNum;
- (NSString*) acctNum;
- (ContentAtpTradeOrderBuilder*) setAcctNum:(NSString*) value;
- (ContentAtpTradeOrderBuilder*) clearAcctNum;

- (BOOL) hasDepositBank;
- (NSString*) depositBank;
- (ContentAtpTradeOrderBuilder*) setDepositBank:(NSString*) value;
- (ContentAtpTradeOrderBuilder*) clearDepositBank;

- (BOOL) hasAcctHeaded;
- (NSString*) acctHeaded;
- (ContentAtpTradeOrderBuilder*) setAcctHeaded:(NSString*) value;
- (ContentAtpTradeOrderBuilder*) clearAcctHeaded;

- (BOOL) hasFinishTime;
- (NSString*) finishTime;
- (ContentAtpTradeOrderBuilder*) setFinishTime:(NSString*) value;
- (ContentAtpTradeOrderBuilder*) clearFinishTime;
@end

#define PayMethod_methodId @"methodId"
#define PayMethod_bankCard @"bankCard"
#define PayMethod_bankName @"bankName"
#define PayMethod_cardType @"cardType"
#define PayMethod_phoneNo @"phoneNo"
#define PayMethod_desc @"desc"
#define PayMethod_remainingSum @"remainingSum"
#define PayMethod_bankId @"bankId"
#define PayMethod_payType @"payType"
#define PayMethod_limitInfo @"limitInfo"
#define PayMethod_available @"available"
#define PayMethod_displayName @"displayName"
#define PayMethod_limit @"limit"
#define PayMethod_icon @"icon"
#define PayMethod_isStagable @"isStagable"
#define PayMethod_memberBankAcctId @"memberBankAcctId"
#define PayMethod_cashierId @"cashierId"
#define PayMethod_chnCode @"chnCode"
#define PayMethod_paySort @"paySort"
#define PayMethod_isActivity @"isActivity"
#define PayMethod_status @"status"
@interface ContentPayMethod : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasMethodId_:1;
  BOOL hasBankCard_:1;
  BOOL hasBankName_:1;
  BOOL hasCardType_:1;
  BOOL hasPhoneNo_:1;
  BOOL hasDesc_:1;
  BOOL hasRemainingSum_:1;
  BOOL hasBankId_:1;
  BOOL hasPayType_:1;
  BOOL hasLimitInfo_:1;
  BOOL hasAvailable_:1;
  BOOL hasDisplayName_:1;
  BOOL hasLimit_:1;
  BOOL hasIcon_:1;
  BOOL hasIsStagable_:1;
  BOOL hasMemberBankAcctId_:1;
  BOOL hasCashierId_:1;
  BOOL hasChnCode_:1;
  BOOL hasPaySort_:1;
  BOOL hasIsActivity_:1;
  BOOL hasStatus_:1;
  NSString* methodId;
  NSString* bankCard;
  NSString* bankName;
  NSString* cardType;
  NSString* phoneNo;
  NSString* desc;
  NSString* remainingSum;
  NSString* bankId;
  NSString* payType;
  NSString* limitInfo;
  NSString* available;
  NSString* displayName;
  NSString* limit;
  NSString* icon;
  NSString* isStagable;
  NSString* memberBankAcctId;
  NSString* cashierId;
  NSString* chnCode;
  NSString* paySort;
  NSString* isActivity;
  NSString* status;
}
- (BOOL) hasMethodId;
- (BOOL) hasBankCard;
- (BOOL) hasBankName;
- (BOOL) hasCardType;
- (BOOL) hasPhoneNo;
- (BOOL) hasDesc;
- (BOOL) hasRemainingSum;
- (BOOL) hasBankId;
- (BOOL) hasPayType;
- (BOOL) hasLimitInfo;
- (BOOL) hasAvailable;
- (BOOL) hasDisplayName;
- (BOOL) hasLimit;
- (BOOL) hasIcon;
- (BOOL) hasIsStagable;
- (BOOL) hasMemberBankAcctId;
- (BOOL) hasCashierId;
- (BOOL) hasChnCode;
- (BOOL) hasPaySort;
- (BOOL) hasIsActivity;
- (BOOL) hasStatus;
@property (readonly, strong) NSString* methodId;
@property (readonly, strong) NSString* bankCard;
@property (readonly, strong) NSString* bankName;
@property (readonly, strong) NSString* cardType;
@property (readonly, strong) NSString* phoneNo;
@property (readonly, strong) NSString* desc;
@property (readonly, strong) NSString* remainingSum;
@property (readonly, strong) NSString* bankId;
@property (readonly, strong) NSString* payType;
@property (readonly, strong) NSString* limitInfo;
@property (readonly, strong) NSString* available;
@property (readonly, strong) NSString* displayName;
@property (readonly, strong) NSString* limit;
@property (readonly, strong) NSString* icon;
@property (readonly, strong) NSString* isStagable;
@property (readonly, strong) NSString* memberBankAcctId;
@property (readonly, strong) NSString* cashierId;
@property (readonly, strong) NSString* chnCode;
@property (readonly, strong) NSString* paySort;
@property (readonly, strong) NSString* isActivity;
@property (readonly, strong) NSString* status;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ContentPayMethodBuilder*) builder;
+ (ContentPayMethodBuilder*) builder;
+ (ContentPayMethodBuilder*) builderWithPrototype:(ContentPayMethod*) prototype;
- (ContentPayMethodBuilder*) toBuilder;

+ (ContentPayMethod*) parseFromData:(NSData*) data;
+ (ContentPayMethod*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentPayMethod*) parseFromInputStream:(NSInputStream*) input;
+ (ContentPayMethod*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentPayMethod*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ContentPayMethod*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ContentPayMethodBuilder : PBGeneratedMessageBuilder {
@private
  ContentPayMethod* resultPayMethod;
}

- (ContentPayMethod*) defaultInstance;

- (ContentPayMethodBuilder*) clear;
- (ContentPayMethodBuilder*) clone;

- (ContentPayMethod*) build;
- (ContentPayMethod*) buildPartial;

- (ContentPayMethodBuilder*) mergeFrom:(ContentPayMethod*) other;
- (ContentPayMethodBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ContentPayMethodBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasMethodId;
- (NSString*) methodId;
- (ContentPayMethodBuilder*) setMethodId:(NSString*) value;
- (ContentPayMethodBuilder*) clearMethodId;

- (BOOL) hasBankCard;
- (NSString*) bankCard;
- (ContentPayMethodBuilder*) setBankCard:(NSString*) value;
- (ContentPayMethodBuilder*) clearBankCard;

- (BOOL) hasBankName;
- (NSString*) bankName;
- (ContentPayMethodBuilder*) setBankName:(NSString*) value;
- (ContentPayMethodBuilder*) clearBankName;

- (BOOL) hasCardType;
- (NSString*) cardType;
- (ContentPayMethodBuilder*) setCardType:(NSString*) value;
- (ContentPayMethodBuilder*) clearCardType;

- (BOOL) hasPhoneNo;
- (NSString*) phoneNo;
- (ContentPayMethodBuilder*) setPhoneNo:(NSString*) value;
- (ContentPayMethodBuilder*) clearPhoneNo;

- (BOOL) hasDesc;
- (NSString*) desc;
- (ContentPayMethodBuilder*) setDesc:(NSString*) value;
- (ContentPayMethodBuilder*) clearDesc;

- (BOOL) hasRemainingSum;
- (NSString*) remainingSum;
- (ContentPayMethodBuilder*) setRemainingSum:(NSString*) value;
- (ContentPayMethodBuilder*) clearRemainingSum;

- (BOOL) hasBankId;
- (NSString*) bankId;
- (ContentPayMethodBuilder*) setBankId:(NSString*) value;
- (ContentPayMethodBuilder*) clearBankId;

- (BOOL) hasPayType;
- (NSString*) payType;
- (ContentPayMethodBuilder*) setPayType:(NSString*) value;
- (ContentPayMethodBuilder*) clearPayType;

- (BOOL) hasLimitInfo;
- (NSString*) limitInfo;
- (ContentPayMethodBuilder*) setLimitInfo:(NSString*) value;
- (ContentPayMethodBuilder*) clearLimitInfo;

- (BOOL) hasAvailable;
- (NSString*) available;
- (ContentPayMethodBuilder*) setAvailable:(NSString*) value;
- (ContentPayMethodBuilder*) clearAvailable;

- (BOOL) hasDisplayName;
- (NSString*) displayName;
- (ContentPayMethodBuilder*) setDisplayName:(NSString*) value;
- (ContentPayMethodBuilder*) clearDisplayName;

- (BOOL) hasLimit;
- (NSString*) limit;
- (ContentPayMethodBuilder*) setLimit:(NSString*) value;
- (ContentPayMethodBuilder*) clearLimit;

- (BOOL) hasIcon;
- (NSString*) icon;
- (ContentPayMethodBuilder*) setIcon:(NSString*) value;
- (ContentPayMethodBuilder*) clearIcon;

- (BOOL) hasIsStagable;
- (NSString*) isStagable;
- (ContentPayMethodBuilder*) setIsStagable:(NSString*) value;
- (ContentPayMethodBuilder*) clearIsStagable;

- (BOOL) hasMemberBankAcctId;
- (NSString*) memberBankAcctId;
- (ContentPayMethodBuilder*) setMemberBankAcctId:(NSString*) value;
- (ContentPayMethodBuilder*) clearMemberBankAcctId;

- (BOOL) hasCashierId;
- (NSString*) cashierId;
- (ContentPayMethodBuilder*) setCashierId:(NSString*) value;
- (ContentPayMethodBuilder*) clearCashierId;

- (BOOL) hasChnCode;
- (NSString*) chnCode;
- (ContentPayMethodBuilder*) setChnCode:(NSString*) value;
- (ContentPayMethodBuilder*) clearChnCode;

- (BOOL) hasPaySort;
- (NSString*) paySort;
- (ContentPayMethodBuilder*) setPaySort:(NSString*) value;
- (ContentPayMethodBuilder*) clearPaySort;

- (BOOL) hasIsActivity;
- (NSString*) isActivity;
- (ContentPayMethodBuilder*) setIsActivity:(NSString*) value;
- (ContentPayMethodBuilder*) clearIsActivity;

- (BOOL) hasStatus;
- (NSString*) status;
- (ContentPayMethodBuilder*) setStatus:(NSString*) value;
- (ContentPayMethodBuilder*) clearStatus;
@end

#define ProductInfo_productTag @"productTag"
#define ProductInfo_productDesc @"productDesc"
@interface ContentProductInfo : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasProductTag_:1;
  BOOL hasProductDesc_:1;
  NSString* productTag;
  NSString* productDesc;
}
- (BOOL) hasProductTag;
- (BOOL) hasProductDesc;
@property (readonly, strong) NSString* productTag;
@property (readonly, strong) NSString* productDesc;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ContentProductInfoBuilder*) builder;
+ (ContentProductInfoBuilder*) builder;
+ (ContentProductInfoBuilder*) builderWithPrototype:(ContentProductInfo*) prototype;
- (ContentProductInfoBuilder*) toBuilder;

+ (ContentProductInfo*) parseFromData:(NSData*) data;
+ (ContentProductInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentProductInfo*) parseFromInputStream:(NSInputStream*) input;
+ (ContentProductInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentProductInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ContentProductInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ContentProductInfoBuilder : PBGeneratedMessageBuilder {
@private
  ContentProductInfo* resultProductInfo;
}

- (ContentProductInfo*) defaultInstance;

- (ContentProductInfoBuilder*) clear;
- (ContentProductInfoBuilder*) clone;

- (ContentProductInfo*) build;
- (ContentProductInfo*) buildPartial;

- (ContentProductInfoBuilder*) mergeFrom:(ContentProductInfo*) other;
- (ContentProductInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ContentProductInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasProductTag;
- (NSString*) productTag;
- (ContentProductInfoBuilder*) setProductTag:(NSString*) value;
- (ContentProductInfoBuilder*) clearProductTag;

- (BOOL) hasProductDesc;
- (NSString*) productDesc;
- (ContentProductInfoBuilder*) setProductDesc:(NSString*) value;
- (ContentProductInfoBuilder*) clearProductDesc;
@end

#define Instalment_id @"id"
#define Instalment_stageCount @"stageCount"
#define Instalment_feeRate @"feeRate"
#define Instalment_cost @"cost"
#define Instalment_repay @"repay"
#define Instalment_total @"total"
#define Instalment_instalmentType @"instalmentType"
#define Instalment_stageInfo @"stageInfo"
#define Instalment_feeInfo @"feeInfo"
#define Instalment_totalFeeInfo @"totalFeeInfo"
@interface ContentInstalment : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasId_:1;
  BOOL hasStageCount_:1;
  BOOL hasFeeRate_:1;
  BOOL hasCost_:1;
  BOOL hasRepay_:1;
  BOOL hasTotal_:1;
  BOOL hasInstalmentType_:1;
  BOOL hasStageInfo_:1;
  BOOL hasFeeInfo_:1;
  BOOL hasTotalFeeInfo_:1;
  NSString* id;
  NSString* stageCount;
  NSString* feeRate;
  NSString* cost;
  NSString* repay;
  NSString* total;
  NSString* instalmentType;
  NSString* stageInfo;
  NSString* feeInfo;
  NSString* totalFeeInfo;
}
- (BOOL) hasId;
- (BOOL) hasStageCount;
- (BOOL) hasFeeRate;
- (BOOL) hasCost;
- (BOOL) hasRepay;
- (BOOL) hasTotal;
- (BOOL) hasInstalmentType;
- (BOOL) hasStageInfo;
- (BOOL) hasFeeInfo;
- (BOOL) hasTotalFeeInfo;
@property (readonly, strong) NSString* id;
@property (readonly, strong) NSString* stageCount;
@property (readonly, strong) NSString* feeRate;
@property (readonly, strong) NSString* cost;
@property (readonly, strong) NSString* repay;
@property (readonly, strong) NSString* total;
@property (readonly, strong) NSString* instalmentType;
@property (readonly, strong) NSString* stageInfo;
@property (readonly, strong) NSString* feeInfo;
@property (readonly, strong) NSString* totalFeeInfo;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ContentInstalmentBuilder*) builder;
+ (ContentInstalmentBuilder*) builder;
+ (ContentInstalmentBuilder*) builderWithPrototype:(ContentInstalment*) prototype;
- (ContentInstalmentBuilder*) toBuilder;

+ (ContentInstalment*) parseFromData:(NSData*) data;
+ (ContentInstalment*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentInstalment*) parseFromInputStream:(NSInputStream*) input;
+ (ContentInstalment*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentInstalment*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ContentInstalment*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ContentInstalmentBuilder : PBGeneratedMessageBuilder {
@private
  ContentInstalment* resultInstalment;
}

- (ContentInstalment*) defaultInstance;

- (ContentInstalmentBuilder*) clear;
- (ContentInstalmentBuilder*) clone;

- (ContentInstalment*) build;
- (ContentInstalment*) buildPartial;

- (ContentInstalmentBuilder*) mergeFrom:(ContentInstalment*) other;
- (ContentInstalmentBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ContentInstalmentBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasId;
- (NSString*) id;
- (ContentInstalmentBuilder*) setId:(NSString*) value;
- (ContentInstalmentBuilder*) clearId;

- (BOOL) hasStageCount;
- (NSString*) stageCount;
- (ContentInstalmentBuilder*) setStageCount:(NSString*) value;
- (ContentInstalmentBuilder*) clearStageCount;

- (BOOL) hasFeeRate;
- (NSString*) feeRate;
- (ContentInstalmentBuilder*) setFeeRate:(NSString*) value;
- (ContentInstalmentBuilder*) clearFeeRate;

- (BOOL) hasCost;
- (NSString*) cost;
- (ContentInstalmentBuilder*) setCost:(NSString*) value;
- (ContentInstalmentBuilder*) clearCost;

- (BOOL) hasRepay;
- (NSString*) repay;
- (ContentInstalmentBuilder*) setRepay:(NSString*) value;
- (ContentInstalmentBuilder*) clearRepay;

- (BOOL) hasTotal;
- (NSString*) total;
- (ContentInstalmentBuilder*) setTotal:(NSString*) value;
- (ContentInstalmentBuilder*) clearTotal;

- (BOOL) hasInstalmentType;
- (NSString*) instalmentType;
- (ContentInstalmentBuilder*) setInstalmentType:(NSString*) value;
- (ContentInstalmentBuilder*) clearInstalmentType;

- (BOOL) hasStageInfo;
- (NSString*) stageInfo;
- (ContentInstalmentBuilder*) setStageInfo:(NSString*) value;
- (ContentInstalmentBuilder*) clearStageInfo;

- (BOOL) hasFeeInfo;
- (NSString*) feeInfo;
- (ContentInstalmentBuilder*) setFeeInfo:(NSString*) value;
- (ContentInstalmentBuilder*) clearFeeInfo;

- (BOOL) hasTotalFeeInfo;
- (NSString*) totalFeeInfo;
- (ContentInstalmentBuilder*) setTotalFeeInfo:(NSString*) value;
- (ContentInstalmentBuilder*) clearTotalFeeInfo;
@end

#define Voucher_voucherInfo @"voucherInfo"
#define Voucher_name @"name"
#define Voucher_expDate @"expDate"
#define Voucher_status @"status"
#define Voucher_voucherNo @"voucherNo"
#define Voucher_voucherAmount @"voucherAmount"
#define Voucher_payAmount @"payAmount"
#define Voucher_supportedMethodIdList @"supportedMethodIdList"
@interface ContentVoucher : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasVoucherInfo_:1;
  BOOL hasName_:1;
  BOOL hasExpDate_:1;
  BOOL hasStatus_:1;
  BOOL hasVoucherNo_:1;
  BOOL hasVoucherAmount_:1;
  BOOL hasPayAmount_:1;
  NSString* voucherInfo;
  NSString* name;
  NSString* expDate;
  NSString* status;
  NSString* voucherNo;
  NSString* voucherAmount;
  NSString* payAmount;
  NSMutableArray * supportedMethodIdListArray;
}
- (BOOL) hasVoucherInfo;
- (BOOL) hasName;
- (BOOL) hasExpDate;
- (BOOL) hasStatus;
- (BOOL) hasVoucherNo;
- (BOOL) hasVoucherAmount;
- (BOOL) hasPayAmount;
@property (readonly, strong) NSString* voucherInfo;
@property (readonly, strong) NSString* name;
@property (readonly, strong) NSString* expDate;
@property (readonly, strong) NSString* status;
@property (readonly, strong) NSString* voucherNo;
@property (readonly, strong) NSString* voucherAmount;
@property (readonly, strong) NSString* payAmount;
@property (readonly, strong) NSArray * supportedMethodIdList;
- (NSString*)supportedMethodIdListAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ContentVoucherBuilder*) builder;
+ (ContentVoucherBuilder*) builder;
+ (ContentVoucherBuilder*) builderWithPrototype:(ContentVoucher*) prototype;
- (ContentVoucherBuilder*) toBuilder;

+ (ContentVoucher*) parseFromData:(NSData*) data;
+ (ContentVoucher*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentVoucher*) parseFromInputStream:(NSInputStream*) input;
+ (ContentVoucher*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentVoucher*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ContentVoucher*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ContentVoucherBuilder : PBGeneratedMessageBuilder {
@private
  ContentVoucher* resultVoucher;
}

- (ContentVoucher*) defaultInstance;

- (ContentVoucherBuilder*) clear;
- (ContentVoucherBuilder*) clone;

- (ContentVoucher*) build;
- (ContentVoucher*) buildPartial;

- (ContentVoucherBuilder*) mergeFrom:(ContentVoucher*) other;
- (ContentVoucherBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ContentVoucherBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasVoucherInfo;
- (NSString*) voucherInfo;
- (ContentVoucherBuilder*) setVoucherInfo:(NSString*) value;
- (ContentVoucherBuilder*) clearVoucherInfo;

- (BOOL) hasName;
- (NSString*) name;
- (ContentVoucherBuilder*) setName:(NSString*) value;
- (ContentVoucherBuilder*) clearName;

- (BOOL) hasExpDate;
- (NSString*) expDate;
- (ContentVoucherBuilder*) setExpDate:(NSString*) value;
- (ContentVoucherBuilder*) clearExpDate;

- (BOOL) hasStatus;
- (NSString*) status;
- (ContentVoucherBuilder*) setStatus:(NSString*) value;
- (ContentVoucherBuilder*) clearStatus;

- (BOOL) hasVoucherNo;
- (NSString*) voucherNo;
- (ContentVoucherBuilder*) setVoucherNo:(NSString*) value;
- (ContentVoucherBuilder*) clearVoucherNo;

- (BOOL) hasVoucherAmount;
- (NSString*) voucherAmount;
- (ContentVoucherBuilder*) setVoucherAmount:(NSString*) value;
- (ContentVoucherBuilder*) clearVoucherAmount;

- (BOOL) hasPayAmount;
- (NSString*) payAmount;
- (ContentVoucherBuilder*) setPayAmount:(NSString*) value;
- (ContentVoucherBuilder*) clearPayAmount;

- (NSMutableArray *)supportedMethodIdList;
- (NSString*)supportedMethodIdListAtIndex:(NSUInteger)index;
- (ContentVoucherBuilder *)addSupportedMethodIdList:(NSString*)value;
- (ContentVoucherBuilder *)setSupportedMethodIdListArray:(NSArray *)array;
- (ContentVoucherBuilder *)clearSupportedMethodIdList;
@end

#define AteTradeOrder_appId @"appId"
#define AteTradeOrder_merchantCode @"merchantCode"
#define AteTradeOrder_outTradeNo @"outTradeNo"
#define AteTradeOrder_tradeId @"tradeId"
#define AteTradeOrder_isPlus @"isPlus"
#define AteTradeOrder_tradeAmount @"tradeAmount"
#define AteTradeOrder_orderType @"orderType"
#define AteTradeOrder_showStatus @"showStatus"
#define AteTradeOrder_createTime @"createTime"
#define AteTradeOrder_tradeEndTime @"tradeEndTime"
#define AteTradeOrder_payStatus @"payStatus"
#define AteTradeOrder_equityAmount @"equityAmount"
#define AteTradeOrder_productTag @"productTag"
#define AteTradeOrder_productDesc @"productDesc"
#define AteTradeOrder_merchantName @"merchantName"
#define AteTradeOrder_channelType @"channelType"
#define AteTradeOrder_payMode @"payMode"
#define AteTradeOrder_functionCode @"functionCode"
#define AteTradeOrder_currencyCode @"currencyCode"
#define AteTradeOrder_refundAmount @"refundAmount"
#define AteTradeOrder_refundStatus @"refundStatus"
#define AteTradeOrder_showAmount @"showAmount"
#define AteTradeOrder_tradeStatus @"tradeStatus"
#define AteTradeOrder_errorCode @"errorCode"
#define AteTradeOrder_errorInfo @"errorInfo"
#define AteTradeOrder_bankAcctId @"bankAcctId"
#define AteTradeOrder_bankAcctType @"bankAcctType"
#define AteTradeOrder_bankAcctName @"bankAcctName"
#define AteTradeOrder_payAmount @"payAmount"
#define AteTradeOrder_payModeInfo @"payModeInfo"
#define AteTradeOrder_memo @"memo"
#define AteTradeOrder_equityInfo @"equityInfo"
#define AteTradeOrder_billId @"billId"
@interface ContentAteTradeOrder : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasAppId_:1;
  BOOL hasMerchantCode_:1;
  BOOL hasOutTradeNo_:1;
  BOOL hasTradeId_:1;
  BOOL hasIsPlus_:1;
  BOOL hasTradeAmount_:1;
  BOOL hasOrderType_:1;
  BOOL hasShowStatus_:1;
  BOOL hasCreateTime_:1;
  BOOL hasTradeEndTime_:1;
  BOOL hasPayStatus_:1;
  BOOL hasEquityAmount_:1;
  BOOL hasProductTag_:1;
  BOOL hasProductDesc_:1;
  BOOL hasMerchantName_:1;
  BOOL hasChannelType_:1;
  BOOL hasPayMode_:1;
  BOOL hasFunctionCode_:1;
  BOOL hasCurrencyCode_:1;
  BOOL hasRefundAmount_:1;
  BOOL hasRefundStatus_:1;
  BOOL hasShowAmount_:1;
  BOOL hasTradeStatus_:1;
  BOOL hasErrorCode_:1;
  BOOL hasErrorInfo_:1;
  BOOL hasBankAcctId_:1;
  BOOL hasBankAcctType_:1;
  BOOL hasBankAcctName_:1;
  BOOL hasPayAmount_:1;
  BOOL hasPayModeInfo_:1;
  BOOL hasMemo_:1;
  BOOL hasBillId_:1;
  NSString* appId;
  NSString* merchantCode;
  NSString* outTradeNo;
  NSString* tradeId;
  NSString* isPlus;
  NSString* tradeAmount;
  NSString* orderType;
  NSString* showStatus;
  NSString* createTime;
  NSString* tradeEndTime;
  NSString* payStatus;
  NSString* equityAmount;
  NSString* productTag;
  NSString* productDesc;
  NSString* merchantName;
  NSString* channelType;
  NSString* payMode;
  NSString* functionCode;
  NSString* currencyCode;
  NSString* refundAmount;
  NSString* refundStatus;
  NSString* showAmount;
  NSString* tradeStatus;
  NSString* errorCode;
  NSString* errorInfo;
  NSString* bankAcctId;
  NSString* bankAcctType;
  NSString* bankAcctName;
  NSString* payAmount;
  NSString* payModeInfo;
  NSString* memo;
  NSString* billId;
  NSMutableArray * equityInfoArray;
}
- (BOOL) hasAppId;
- (BOOL) hasMerchantCode;
- (BOOL) hasOutTradeNo;
- (BOOL) hasTradeId;
- (BOOL) hasIsPlus;
- (BOOL) hasTradeAmount;
- (BOOL) hasOrderType;
- (BOOL) hasShowStatus;
- (BOOL) hasCreateTime;
- (BOOL) hasTradeEndTime;
- (BOOL) hasPayStatus;
- (BOOL) hasEquityAmount;
- (BOOL) hasProductTag;
- (BOOL) hasProductDesc;
- (BOOL) hasMerchantName;
- (BOOL) hasChannelType;
- (BOOL) hasPayMode;
- (BOOL) hasFunctionCode;
- (BOOL) hasCurrencyCode;
- (BOOL) hasRefundAmount;
- (BOOL) hasRefundStatus;
- (BOOL) hasShowAmount;
- (BOOL) hasTradeStatus;
- (BOOL) hasErrorCode;
- (BOOL) hasErrorInfo;
- (BOOL) hasBankAcctId;
- (BOOL) hasBankAcctType;
- (BOOL) hasBankAcctName;
- (BOOL) hasPayAmount;
- (BOOL) hasPayModeInfo;
- (BOOL) hasMemo;
- (BOOL) hasBillId;
@property (readonly, strong) NSString* appId;
@property (readonly, strong) NSString* merchantCode;
@property (readonly, strong) NSString* outTradeNo;
@property (readonly, strong) NSString* tradeId;
@property (readonly, strong) NSString* isPlus;
@property (readonly, strong) NSString* tradeAmount;
@property (readonly, strong) NSString* orderType;
@property (readonly, strong) NSString* showStatus;
@property (readonly, strong) NSString* createTime;
@property (readonly, strong) NSString* tradeEndTime;
@property (readonly, strong) NSString* payStatus;
@property (readonly, strong) NSString* equityAmount;
@property (readonly, strong) NSString* productTag;
@property (readonly, strong) NSString* productDesc;
@property (readonly, strong) NSString* merchantName;
@property (readonly, strong) NSString* channelType;
@property (readonly, strong) NSString* payMode;
@property (readonly, strong) NSString* functionCode;
@property (readonly, strong) NSString* currencyCode;
@property (readonly, strong) NSString* refundAmount;
@property (readonly, strong) NSString* refundStatus;
@property (readonly, strong) NSString* showAmount;
@property (readonly, strong) NSString* tradeStatus;
@property (readonly, strong) NSString* errorCode;
@property (readonly, strong) NSString* errorInfo;
@property (readonly, strong) NSString* bankAcctId;
@property (readonly, strong) NSString* bankAcctType;
@property (readonly, strong) NSString* bankAcctName;
@property (readonly, strong) NSString* payAmount;
@property (readonly, strong) NSString* payModeInfo;
@property (readonly, strong) NSString* memo;
@property (readonly, strong) NSArray * equityInfo;
@property (readonly, strong) NSString* billId;
- (ContentEquityInfo*)equityInfoAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ContentAteTradeOrderBuilder*) builder;
+ (ContentAteTradeOrderBuilder*) builder;
+ (ContentAteTradeOrderBuilder*) builderWithPrototype:(ContentAteTradeOrder*) prototype;
- (ContentAteTradeOrderBuilder*) toBuilder;

+ (ContentAteTradeOrder*) parseFromData:(NSData*) data;
+ (ContentAteTradeOrder*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentAteTradeOrder*) parseFromInputStream:(NSInputStream*) input;
+ (ContentAteTradeOrder*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentAteTradeOrder*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ContentAteTradeOrder*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ContentAteTradeOrderBuilder : PBGeneratedMessageBuilder {
@private
  ContentAteTradeOrder* resultAteTradeOrder;
}

- (ContentAteTradeOrder*) defaultInstance;

- (ContentAteTradeOrderBuilder*) clear;
- (ContentAteTradeOrderBuilder*) clone;

- (ContentAteTradeOrder*) build;
- (ContentAteTradeOrder*) buildPartial;

- (ContentAteTradeOrderBuilder*) mergeFrom:(ContentAteTradeOrder*) other;
- (ContentAteTradeOrderBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ContentAteTradeOrderBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasAppId;
- (NSString*) appId;
- (ContentAteTradeOrderBuilder*) setAppId:(NSString*) value;
- (ContentAteTradeOrderBuilder*) clearAppId;

- (BOOL) hasMerchantCode;
- (NSString*) merchantCode;
- (ContentAteTradeOrderBuilder*) setMerchantCode:(NSString*) value;
- (ContentAteTradeOrderBuilder*) clearMerchantCode;

- (BOOL) hasOutTradeNo;
- (NSString*) outTradeNo;
- (ContentAteTradeOrderBuilder*) setOutTradeNo:(NSString*) value;
- (ContentAteTradeOrderBuilder*) clearOutTradeNo;

- (BOOL) hasTradeId;
- (NSString*) tradeId;
- (ContentAteTradeOrderBuilder*) setTradeId:(NSString*) value;
- (ContentAteTradeOrderBuilder*) clearTradeId;

- (BOOL) hasIsPlus;
- (NSString*) isPlus;
- (ContentAteTradeOrderBuilder*) setIsPlus:(NSString*) value;
- (ContentAteTradeOrderBuilder*) clearIsPlus;

- (BOOL) hasTradeAmount;
- (NSString*) tradeAmount;
- (ContentAteTradeOrderBuilder*) setTradeAmount:(NSString*) value;
- (ContentAteTradeOrderBuilder*) clearTradeAmount;

- (BOOL) hasOrderType;
- (NSString*) orderType;
- (ContentAteTradeOrderBuilder*) setOrderType:(NSString*) value;
- (ContentAteTradeOrderBuilder*) clearOrderType;

- (BOOL) hasShowStatus;
- (NSString*) showStatus;
- (ContentAteTradeOrderBuilder*) setShowStatus:(NSString*) value;
- (ContentAteTradeOrderBuilder*) clearShowStatus;

- (BOOL) hasCreateTime;
- (NSString*) createTime;
- (ContentAteTradeOrderBuilder*) setCreateTime:(NSString*) value;
- (ContentAteTradeOrderBuilder*) clearCreateTime;

- (BOOL) hasTradeEndTime;
- (NSString*) tradeEndTime;
- (ContentAteTradeOrderBuilder*) setTradeEndTime:(NSString*) value;
- (ContentAteTradeOrderBuilder*) clearTradeEndTime;

- (BOOL) hasPayStatus;
- (NSString*) payStatus;
- (ContentAteTradeOrderBuilder*) setPayStatus:(NSString*) value;
- (ContentAteTradeOrderBuilder*) clearPayStatus;

- (BOOL) hasEquityAmount;
- (NSString*) equityAmount;
- (ContentAteTradeOrderBuilder*) setEquityAmount:(NSString*) value;
- (ContentAteTradeOrderBuilder*) clearEquityAmount;

- (BOOL) hasProductTag;
- (NSString*) productTag;
- (ContentAteTradeOrderBuilder*) setProductTag:(NSString*) value;
- (ContentAteTradeOrderBuilder*) clearProductTag;

- (BOOL) hasProductDesc;
- (NSString*) productDesc;
- (ContentAteTradeOrderBuilder*) setProductDesc:(NSString*) value;
- (ContentAteTradeOrderBuilder*) clearProductDesc;

- (BOOL) hasMerchantName;
- (NSString*) merchantName;
- (ContentAteTradeOrderBuilder*) setMerchantName:(NSString*) value;
- (ContentAteTradeOrderBuilder*) clearMerchantName;

- (BOOL) hasChannelType;
- (NSString*) channelType;
- (ContentAteTradeOrderBuilder*) setChannelType:(NSString*) value;
- (ContentAteTradeOrderBuilder*) clearChannelType;

- (BOOL) hasPayMode;
- (NSString*) payMode;
- (ContentAteTradeOrderBuilder*) setPayMode:(NSString*) value;
- (ContentAteTradeOrderBuilder*) clearPayMode;

- (BOOL) hasFunctionCode;
- (NSString*) functionCode;
- (ContentAteTradeOrderBuilder*) setFunctionCode:(NSString*) value;
- (ContentAteTradeOrderBuilder*) clearFunctionCode;

- (BOOL) hasCurrencyCode;
- (NSString*) currencyCode;
- (ContentAteTradeOrderBuilder*) setCurrencyCode:(NSString*) value;
- (ContentAteTradeOrderBuilder*) clearCurrencyCode;

- (BOOL) hasRefundAmount;
- (NSString*) refundAmount;
- (ContentAteTradeOrderBuilder*) setRefundAmount:(NSString*) value;
- (ContentAteTradeOrderBuilder*) clearRefundAmount;

- (BOOL) hasRefundStatus;
- (NSString*) refundStatus;
- (ContentAteTradeOrderBuilder*) setRefundStatus:(NSString*) value;
- (ContentAteTradeOrderBuilder*) clearRefundStatus;

- (BOOL) hasShowAmount;
- (NSString*) showAmount;
- (ContentAteTradeOrderBuilder*) setShowAmount:(NSString*) value;
- (ContentAteTradeOrderBuilder*) clearShowAmount;

- (BOOL) hasTradeStatus;
- (NSString*) tradeStatus;
- (ContentAteTradeOrderBuilder*) setTradeStatus:(NSString*) value;
- (ContentAteTradeOrderBuilder*) clearTradeStatus;

- (BOOL) hasErrorCode;
- (NSString*) errorCode;
- (ContentAteTradeOrderBuilder*) setErrorCode:(NSString*) value;
- (ContentAteTradeOrderBuilder*) clearErrorCode;

- (BOOL) hasErrorInfo;
- (NSString*) errorInfo;
- (ContentAteTradeOrderBuilder*) setErrorInfo:(NSString*) value;
- (ContentAteTradeOrderBuilder*) clearErrorInfo;

- (BOOL) hasBankAcctId;
- (NSString*) bankAcctId;
- (ContentAteTradeOrderBuilder*) setBankAcctId:(NSString*) value;
- (ContentAteTradeOrderBuilder*) clearBankAcctId;

- (BOOL) hasBankAcctType;
- (NSString*) bankAcctType;
- (ContentAteTradeOrderBuilder*) setBankAcctType:(NSString*) value;
- (ContentAteTradeOrderBuilder*) clearBankAcctType;

- (BOOL) hasBankAcctName;
- (NSString*) bankAcctName;
- (ContentAteTradeOrderBuilder*) setBankAcctName:(NSString*) value;
- (ContentAteTradeOrderBuilder*) clearBankAcctName;

- (BOOL) hasPayAmount;
- (NSString*) payAmount;
- (ContentAteTradeOrderBuilder*) setPayAmount:(NSString*) value;
- (ContentAteTradeOrderBuilder*) clearPayAmount;

- (BOOL) hasPayModeInfo;
- (NSString*) payModeInfo;
- (ContentAteTradeOrderBuilder*) setPayModeInfo:(NSString*) value;
- (ContentAteTradeOrderBuilder*) clearPayModeInfo;

- (BOOL) hasMemo;
- (NSString*) memo;
- (ContentAteTradeOrderBuilder*) setMemo:(NSString*) value;
- (ContentAteTradeOrderBuilder*) clearMemo;

- (NSMutableArray *)equityInfo;
- (ContentEquityInfo*)equityInfoAtIndex:(NSUInteger)index;
- (ContentAteTradeOrderBuilder *)addEquityInfo:(ContentEquityInfo*)value;
- (ContentAteTradeOrderBuilder *)setEquityInfoArray:(NSArray *)array;
- (ContentAteTradeOrderBuilder *)clearEquityInfo;

- (BOOL) hasBillId;
- (NSString*) billId;
- (ContentAteTradeOrderBuilder*) setBillId:(NSString*) value;
- (ContentAteTradeOrderBuilder*) clearBillId;
@end

#define MsgTypeInfo_typeId @"typeId"
#define MsgTypeInfo_typeName @"typeName"
#define MsgTypeInfo_lastRecordTime @"lastRecordTime"
#define MsgTypeInfo_lastRecordTitle @"lastRecordTitle"
#define MsgTypeInfo_unreadCount @"unreadCount"
#define MsgTypeInfo_picUrl @"picUrl"
#define MsgTypeInfo_isDisBeforeLogin @"isDisBeforeLogin"
#define MsgTypeInfo_isDisMsgCenter @"isDisMsgCenter"
@interface ContentMsgTypeInfo : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasTypeId_:1;
  BOOL hasTypeName_:1;
  BOOL hasLastRecordTime_:1;
  BOOL hasLastRecordTitle_:1;
  BOOL hasUnreadCount_:1;
  BOOL hasPicUrl_:1;
  BOOL hasIsDisBeforeLogin_:1;
  BOOL hasIsDisMsgCenter_:1;
  NSString* typeId;
  NSString* typeName;
  NSString* lastRecordTime;
  NSString* lastRecordTitle;
  NSString* unreadCount;
  NSString* picUrl;
  NSString* isDisBeforeLogin;
  NSString* isDisMsgCenter;
}
- (BOOL) hasTypeId;
- (BOOL) hasTypeName;
- (BOOL) hasLastRecordTime;
- (BOOL) hasLastRecordTitle;
- (BOOL) hasUnreadCount;
- (BOOL) hasPicUrl;
- (BOOL) hasIsDisBeforeLogin;
- (BOOL) hasIsDisMsgCenter;
@property (readonly, strong) NSString* typeId;
@property (readonly, strong) NSString* typeName;
@property (readonly, strong) NSString* lastRecordTime;
@property (readonly, strong) NSString* lastRecordTitle;
@property (readonly, strong) NSString* unreadCount;
@property (readonly, strong) NSString* picUrl;
@property (readonly, strong) NSString* isDisBeforeLogin;
@property (readonly, strong) NSString* isDisMsgCenter;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ContentMsgTypeInfoBuilder*) builder;
+ (ContentMsgTypeInfoBuilder*) builder;
+ (ContentMsgTypeInfoBuilder*) builderWithPrototype:(ContentMsgTypeInfo*) prototype;
- (ContentMsgTypeInfoBuilder*) toBuilder;

+ (ContentMsgTypeInfo*) parseFromData:(NSData*) data;
+ (ContentMsgTypeInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentMsgTypeInfo*) parseFromInputStream:(NSInputStream*) input;
+ (ContentMsgTypeInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentMsgTypeInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ContentMsgTypeInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ContentMsgTypeInfoBuilder : PBGeneratedMessageBuilder {
@private
  ContentMsgTypeInfo* resultMsgTypeInfo;
}

- (ContentMsgTypeInfo*) defaultInstance;

- (ContentMsgTypeInfoBuilder*) clear;
- (ContentMsgTypeInfoBuilder*) clone;

- (ContentMsgTypeInfo*) build;
- (ContentMsgTypeInfo*) buildPartial;

- (ContentMsgTypeInfoBuilder*) mergeFrom:(ContentMsgTypeInfo*) other;
- (ContentMsgTypeInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ContentMsgTypeInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasTypeId;
- (NSString*) typeId;
- (ContentMsgTypeInfoBuilder*) setTypeId:(NSString*) value;
- (ContentMsgTypeInfoBuilder*) clearTypeId;

- (BOOL) hasTypeName;
- (NSString*) typeName;
- (ContentMsgTypeInfoBuilder*) setTypeName:(NSString*) value;
- (ContentMsgTypeInfoBuilder*) clearTypeName;

- (BOOL) hasLastRecordTime;
- (NSString*) lastRecordTime;
- (ContentMsgTypeInfoBuilder*) setLastRecordTime:(NSString*) value;
- (ContentMsgTypeInfoBuilder*) clearLastRecordTime;

- (BOOL) hasLastRecordTitle;
- (NSString*) lastRecordTitle;
- (ContentMsgTypeInfoBuilder*) setLastRecordTitle:(NSString*) value;
- (ContentMsgTypeInfoBuilder*) clearLastRecordTitle;

- (BOOL) hasUnreadCount;
- (NSString*) unreadCount;
- (ContentMsgTypeInfoBuilder*) setUnreadCount:(NSString*) value;
- (ContentMsgTypeInfoBuilder*) clearUnreadCount;

- (BOOL) hasPicUrl;
- (NSString*) picUrl;
- (ContentMsgTypeInfoBuilder*) setPicUrl:(NSString*) value;
- (ContentMsgTypeInfoBuilder*) clearPicUrl;

- (BOOL) hasIsDisBeforeLogin;
- (NSString*) isDisBeforeLogin;
- (ContentMsgTypeInfoBuilder*) setIsDisBeforeLogin:(NSString*) value;
- (ContentMsgTypeInfoBuilder*) clearIsDisBeforeLogin;

- (BOOL) hasIsDisMsgCenter;
- (NSString*) isDisMsgCenter;
- (ContentMsgTypeInfoBuilder*) setIsDisMsgCenter:(NSString*) value;
- (ContentMsgTypeInfoBuilder*) clearIsDisMsgCenter;
@end

#define MsgInfo_id @"id"
#define MsgInfo_title @"title"
#define MsgInfo_outline @"outline"
#define MsgInfo_picUrl @"picUrl"
#define MsgInfo_jumpMode @"jumpMode"
#define MsgInfo_jumpPath @"jumpPath"
#define MsgInfo_validTime @"validTime"
#define MsgInfo_invalidTime @"invalidTime"
#define MsgInfo_typeId @"typeId"
#define MsgInfo_pageType @"pageType"
#define MsgInfo_extParamter @"extParamter"
#define MsgInfo_channelCode @"channelCode"
@interface ContentMsgInfo : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasId_:1;
  BOOL hasTitle_:1;
  BOOL hasOutline_:1;
  BOOL hasPicUrl_:1;
  BOOL hasJumpMode_:1;
  BOOL hasJumpPath_:1;
  BOOL hasValidTime_:1;
  BOOL hasInvalidTime_:1;
  BOOL hasTypeId_:1;
  BOOL hasPageType_:1;
  BOOL hasExtParamter_:1;
  BOOL hasChannelCode_:1;
  NSString* id;
  NSString* title;
  NSString* outline;
  NSString* picUrl;
  NSString* jumpMode;
  NSString* jumpPath;
  NSString* validTime;
  NSString* invalidTime;
  NSString* typeId;
  NSString* pageType;
  NSString* extParamter;
  NSString* channelCode;
}
- (BOOL) hasId;
- (BOOL) hasTitle;
- (BOOL) hasOutline;
- (BOOL) hasPicUrl;
- (BOOL) hasJumpMode;
- (BOOL) hasJumpPath;
- (BOOL) hasValidTime;
- (BOOL) hasInvalidTime;
- (BOOL) hasTypeId;
- (BOOL) hasPageType;
- (BOOL) hasExtParamter;
- (BOOL) hasChannelCode;
@property (readonly, strong) NSString* id;
@property (readonly, strong) NSString* title;
@property (readonly, strong) NSString* outline;
@property (readonly, strong) NSString* picUrl;
@property (readonly, strong) NSString* jumpMode;
@property (readonly, strong) NSString* jumpPath;
@property (readonly, strong) NSString* validTime;
@property (readonly, strong) NSString* invalidTime;
@property (readonly, strong) NSString* typeId;
@property (readonly, strong) NSString* pageType;
@property (readonly, strong) NSString* extParamter;
@property (readonly, strong) NSString* channelCode;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ContentMsgInfoBuilder*) builder;
+ (ContentMsgInfoBuilder*) builder;
+ (ContentMsgInfoBuilder*) builderWithPrototype:(ContentMsgInfo*) prototype;
- (ContentMsgInfoBuilder*) toBuilder;

+ (ContentMsgInfo*) parseFromData:(NSData*) data;
+ (ContentMsgInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentMsgInfo*) parseFromInputStream:(NSInputStream*) input;
+ (ContentMsgInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentMsgInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ContentMsgInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ContentMsgInfoBuilder : PBGeneratedMessageBuilder {
@private
  ContentMsgInfo* resultMsgInfo;
}

- (ContentMsgInfo*) defaultInstance;

- (ContentMsgInfoBuilder*) clear;
- (ContentMsgInfoBuilder*) clone;

- (ContentMsgInfo*) build;
- (ContentMsgInfo*) buildPartial;

- (ContentMsgInfoBuilder*) mergeFrom:(ContentMsgInfo*) other;
- (ContentMsgInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ContentMsgInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasId;
- (NSString*) id;
- (ContentMsgInfoBuilder*) setId:(NSString*) value;
- (ContentMsgInfoBuilder*) clearId;

- (BOOL) hasTitle;
- (NSString*) title;
- (ContentMsgInfoBuilder*) setTitle:(NSString*) value;
- (ContentMsgInfoBuilder*) clearTitle;

- (BOOL) hasOutline;
- (NSString*) outline;
- (ContentMsgInfoBuilder*) setOutline:(NSString*) value;
- (ContentMsgInfoBuilder*) clearOutline;

- (BOOL) hasPicUrl;
- (NSString*) picUrl;
- (ContentMsgInfoBuilder*) setPicUrl:(NSString*) value;
- (ContentMsgInfoBuilder*) clearPicUrl;

- (BOOL) hasJumpMode;
- (NSString*) jumpMode;
- (ContentMsgInfoBuilder*) setJumpMode:(NSString*) value;
- (ContentMsgInfoBuilder*) clearJumpMode;

- (BOOL) hasJumpPath;
- (NSString*) jumpPath;
- (ContentMsgInfoBuilder*) setJumpPath:(NSString*) value;
- (ContentMsgInfoBuilder*) clearJumpPath;

- (BOOL) hasValidTime;
- (NSString*) validTime;
- (ContentMsgInfoBuilder*) setValidTime:(NSString*) value;
- (ContentMsgInfoBuilder*) clearValidTime;

- (BOOL) hasInvalidTime;
- (NSString*) invalidTime;
- (ContentMsgInfoBuilder*) setInvalidTime:(NSString*) value;
- (ContentMsgInfoBuilder*) clearInvalidTime;

- (BOOL) hasTypeId;
- (NSString*) typeId;
- (ContentMsgInfoBuilder*) setTypeId:(NSString*) value;
- (ContentMsgInfoBuilder*) clearTypeId;

- (BOOL) hasPageType;
- (NSString*) pageType;
- (ContentMsgInfoBuilder*) setPageType:(NSString*) value;
- (ContentMsgInfoBuilder*) clearPageType;

- (BOOL) hasExtParamter;
- (NSString*) extParamter;
- (ContentMsgInfoBuilder*) setExtParamter:(NSString*) value;
- (ContentMsgInfoBuilder*) clearExtParamter;

- (BOOL) hasChannelCode;
- (NSString*) channelCode;
- (ContentMsgInfoBuilder*) setChannelCode:(NSString*) value;
- (ContentMsgInfoBuilder*) clearChannelCode;
@end

#define ResourceInfo_resourceId @"resourceId"
#define ResourceInfo_resourceName @"resourceName"
#define ResourceInfo_resourceType @"resourceType"
#define ResourceInfo_resourceUrl @"resourceUrl"
#define ResourceInfo_md5 @"md5"
@interface ContentResourceInfo : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasResourceId_:1;
  BOOL hasResourceName_:1;
  BOOL hasResourceType_:1;
  BOOL hasResourceUrl_:1;
  BOOL hasMd5_:1;
  NSString* resourceId;
  NSString* resourceName;
  NSString* resourceType;
  NSString* resourceUrl;
  NSString* md5;
}
- (BOOL) hasResourceId;
- (BOOL) hasResourceName;
- (BOOL) hasResourceType;
- (BOOL) hasResourceUrl;
- (BOOL) hasMd5;
@property (readonly, strong) NSString* resourceId;
@property (readonly, strong) NSString* resourceName;
@property (readonly, strong) NSString* resourceType;
@property (readonly, strong) NSString* resourceUrl;
@property (readonly, strong) NSString* md5;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ContentResourceInfoBuilder*) builder;
+ (ContentResourceInfoBuilder*) builder;
+ (ContentResourceInfoBuilder*) builderWithPrototype:(ContentResourceInfo*) prototype;
- (ContentResourceInfoBuilder*) toBuilder;

+ (ContentResourceInfo*) parseFromData:(NSData*) data;
+ (ContentResourceInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentResourceInfo*) parseFromInputStream:(NSInputStream*) input;
+ (ContentResourceInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentResourceInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ContentResourceInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ContentResourceInfoBuilder : PBGeneratedMessageBuilder {
@private
  ContentResourceInfo* resultResourceInfo;
}

- (ContentResourceInfo*) defaultInstance;

- (ContentResourceInfoBuilder*) clear;
- (ContentResourceInfoBuilder*) clone;

- (ContentResourceInfo*) build;
- (ContentResourceInfo*) buildPartial;

- (ContentResourceInfoBuilder*) mergeFrom:(ContentResourceInfo*) other;
- (ContentResourceInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ContentResourceInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasResourceId;
- (NSString*) resourceId;
- (ContentResourceInfoBuilder*) setResourceId:(NSString*) value;
- (ContentResourceInfoBuilder*) clearResourceId;

- (BOOL) hasResourceName;
- (NSString*) resourceName;
- (ContentResourceInfoBuilder*) setResourceName:(NSString*) value;
- (ContentResourceInfoBuilder*) clearResourceName;

- (BOOL) hasResourceType;
- (NSString*) resourceType;
- (ContentResourceInfoBuilder*) setResourceType:(NSString*) value;
- (ContentResourceInfoBuilder*) clearResourceType;

- (BOOL) hasResourceUrl;
- (NSString*) resourceUrl;
- (ContentResourceInfoBuilder*) setResourceUrl:(NSString*) value;
- (ContentResourceInfoBuilder*) clearResourceUrl;

- (BOOL) hasMd5;
- (NSString*) md5;
- (ContentResourceInfoBuilder*) setMd5:(NSString*) value;
- (ContentResourceInfoBuilder*) clearMd5;
@end

#define CommonZipInfo_commonZipId @"commonZipId"
#define CommonZipInfo_commonZipName @"commonZipName"
#define CommonZipInfo_commonZipUrl @"commonZipUrl"
#define CommonZipInfo_md5 @"md5"
@interface ContentCommonZipInfo : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasCommonZipId_:1;
  BOOL hasCommonZipName_:1;
  BOOL hasCommonZipUrl_:1;
  BOOL hasMd5_:1;
  NSString* commonZipId;
  NSString* commonZipName;
  NSString* commonZipUrl;
  NSString* md5;
}
- (BOOL) hasCommonZipId;
- (BOOL) hasCommonZipName;
- (BOOL) hasCommonZipUrl;
- (BOOL) hasMd5;
@property (readonly, strong) NSString* commonZipId;
@property (readonly, strong) NSString* commonZipName;
@property (readonly, strong) NSString* commonZipUrl;
@property (readonly, strong) NSString* md5;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ContentCommonZipInfoBuilder*) builder;
+ (ContentCommonZipInfoBuilder*) builder;
+ (ContentCommonZipInfoBuilder*) builderWithPrototype:(ContentCommonZipInfo*) prototype;
- (ContentCommonZipInfoBuilder*) toBuilder;

+ (ContentCommonZipInfo*) parseFromData:(NSData*) data;
+ (ContentCommonZipInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentCommonZipInfo*) parseFromInputStream:(NSInputStream*) input;
+ (ContentCommonZipInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentCommonZipInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ContentCommonZipInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ContentCommonZipInfoBuilder : PBGeneratedMessageBuilder {
@private
  ContentCommonZipInfo* resultCommonZipInfo;
}

- (ContentCommonZipInfo*) defaultInstance;

- (ContentCommonZipInfoBuilder*) clear;
- (ContentCommonZipInfoBuilder*) clone;

- (ContentCommonZipInfo*) build;
- (ContentCommonZipInfo*) buildPartial;

- (ContentCommonZipInfoBuilder*) mergeFrom:(ContentCommonZipInfo*) other;
- (ContentCommonZipInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ContentCommonZipInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasCommonZipId;
- (NSString*) commonZipId;
- (ContentCommonZipInfoBuilder*) setCommonZipId:(NSString*) value;
- (ContentCommonZipInfoBuilder*) clearCommonZipId;

- (BOOL) hasCommonZipName;
- (NSString*) commonZipName;
- (ContentCommonZipInfoBuilder*) setCommonZipName:(NSString*) value;
- (ContentCommonZipInfoBuilder*) clearCommonZipName;

- (BOOL) hasCommonZipUrl;
- (NSString*) commonZipUrl;
- (ContentCommonZipInfoBuilder*) setCommonZipUrl:(NSString*) value;
- (ContentCommonZipInfoBuilder*) clearCommonZipUrl;

- (BOOL) hasMd5;
- (NSString*) md5;
- (ContentCommonZipInfoBuilder*) setMd5:(NSString*) value;
- (ContentCommonZipInfoBuilder*) clearMd5;
@end

#define ShareInfo_shareType @"shareType"
#define ShareInfo_shareTitle @"shareTitle"
#define ShareInfo_shareLinkUrl @"shareLinkUrl"
#define ShareInfo_shareDes @"shareDes"
#define ShareInfo_shareImageUrl @"shareImageUrl"
#define ShareInfo_needRealNameFlg @"needRealNameFlg"
@interface ContentShareInfo : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasShareType_:1;
  BOOL hasShareTitle_:1;
  BOOL hasShareLinkUrl_:1;
  BOOL hasShareDes_:1;
  BOOL hasShareImageUrl_:1;
  BOOL hasNeedRealNameFlg_:1;
  NSString* shareType;
  NSString* shareTitle;
  NSString* shareLinkUrl;
  NSString* shareDes;
  NSString* shareImageUrl;
  NSString* needRealNameFlg;
}
- (BOOL) hasShareType;
- (BOOL) hasShareTitle;
- (BOOL) hasShareLinkUrl;
- (BOOL) hasShareDes;
- (BOOL) hasShareImageUrl;
- (BOOL) hasNeedRealNameFlg;
@property (readonly, strong) NSString* shareType;
@property (readonly, strong) NSString* shareTitle;
@property (readonly, strong) NSString* shareLinkUrl;
@property (readonly, strong) NSString* shareDes;
@property (readonly, strong) NSString* shareImageUrl;
@property (readonly, strong) NSString* needRealNameFlg;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ContentShareInfoBuilder*) builder;
+ (ContentShareInfoBuilder*) builder;
+ (ContentShareInfoBuilder*) builderWithPrototype:(ContentShareInfo*) prototype;
- (ContentShareInfoBuilder*) toBuilder;

+ (ContentShareInfo*) parseFromData:(NSData*) data;
+ (ContentShareInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentShareInfo*) parseFromInputStream:(NSInputStream*) input;
+ (ContentShareInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentShareInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ContentShareInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ContentShareInfoBuilder : PBGeneratedMessageBuilder {
@private
  ContentShareInfo* resultShareInfo;
}

- (ContentShareInfo*) defaultInstance;

- (ContentShareInfoBuilder*) clear;
- (ContentShareInfoBuilder*) clone;

- (ContentShareInfo*) build;
- (ContentShareInfo*) buildPartial;

- (ContentShareInfoBuilder*) mergeFrom:(ContentShareInfo*) other;
- (ContentShareInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ContentShareInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasShareType;
- (NSString*) shareType;
- (ContentShareInfoBuilder*) setShareType:(NSString*) value;
- (ContentShareInfoBuilder*) clearShareType;

- (BOOL) hasShareTitle;
- (NSString*) shareTitle;
- (ContentShareInfoBuilder*) setShareTitle:(NSString*) value;
- (ContentShareInfoBuilder*) clearShareTitle;

- (BOOL) hasShareLinkUrl;
- (NSString*) shareLinkUrl;
- (ContentShareInfoBuilder*) setShareLinkUrl:(NSString*) value;
- (ContentShareInfoBuilder*) clearShareLinkUrl;

- (BOOL) hasShareDes;
- (NSString*) shareDes;
- (ContentShareInfoBuilder*) setShareDes:(NSString*) value;
- (ContentShareInfoBuilder*) clearShareDes;

- (BOOL) hasShareImageUrl;
- (NSString*) shareImageUrl;
- (ContentShareInfoBuilder*) setShareImageUrl:(NSString*) value;
- (ContentShareInfoBuilder*) clearShareImageUrl;

- (BOOL) hasNeedRealNameFlg;
- (NSString*) needRealNameFlg;
- (ContentShareInfoBuilder*) setNeedRealNameFlg:(NSString*) value;
- (ContentShareInfoBuilder*) clearNeedRealNameFlg;
@end

#define UserAppLoginInfo_loginType @"loginType"
#define UserAppLoginInfo_loginTime @"loginTime"
#define UserAppLoginInfo_wifiName @"wifiName"
#define UserAppLoginInfo_wifiDomain @"wifiDomain"
#define UserAppLoginInfo_loginResult @"loginResult"
@interface ContentUserAppLoginInfo : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasLoginType_:1;
  BOOL hasLoginTime_:1;
  BOOL hasWifiName_:1;
  BOOL hasWifiDomain_:1;
  BOOL hasLoginResult_:1;
  NSString* loginType;
  NSString* loginTime;
  NSString* wifiName;
  NSString* wifiDomain;
  NSString* loginResult;
}
- (BOOL) hasLoginType;
- (BOOL) hasLoginTime;
- (BOOL) hasWifiName;
- (BOOL) hasWifiDomain;
- (BOOL) hasLoginResult;
@property (readonly, strong) NSString* loginType;
@property (readonly, strong) NSString* loginTime;
@property (readonly, strong) NSString* wifiName;
@property (readonly, strong) NSString* wifiDomain;
@property (readonly, strong) NSString* loginResult;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ContentUserAppLoginInfoBuilder*) builder;
+ (ContentUserAppLoginInfoBuilder*) builder;
+ (ContentUserAppLoginInfoBuilder*) builderWithPrototype:(ContentUserAppLoginInfo*) prototype;
- (ContentUserAppLoginInfoBuilder*) toBuilder;

+ (ContentUserAppLoginInfo*) parseFromData:(NSData*) data;
+ (ContentUserAppLoginInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentUserAppLoginInfo*) parseFromInputStream:(NSInputStream*) input;
+ (ContentUserAppLoginInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentUserAppLoginInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ContentUserAppLoginInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ContentUserAppLoginInfoBuilder : PBGeneratedMessageBuilder {
@private
  ContentUserAppLoginInfo* resultUserAppLoginInfo;
}

- (ContentUserAppLoginInfo*) defaultInstance;

- (ContentUserAppLoginInfoBuilder*) clear;
- (ContentUserAppLoginInfoBuilder*) clone;

- (ContentUserAppLoginInfo*) build;
- (ContentUserAppLoginInfo*) buildPartial;

- (ContentUserAppLoginInfoBuilder*) mergeFrom:(ContentUserAppLoginInfo*) other;
- (ContentUserAppLoginInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ContentUserAppLoginInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasLoginType;
- (NSString*) loginType;
- (ContentUserAppLoginInfoBuilder*) setLoginType:(NSString*) value;
- (ContentUserAppLoginInfoBuilder*) clearLoginType;

- (BOOL) hasLoginTime;
- (NSString*) loginTime;
- (ContentUserAppLoginInfoBuilder*) setLoginTime:(NSString*) value;
- (ContentUserAppLoginInfoBuilder*) clearLoginTime;

- (BOOL) hasWifiName;
- (NSString*) wifiName;
- (ContentUserAppLoginInfoBuilder*) setWifiName:(NSString*) value;
- (ContentUserAppLoginInfoBuilder*) clearWifiName;

- (BOOL) hasWifiDomain;
- (NSString*) wifiDomain;
- (ContentUserAppLoginInfoBuilder*) setWifiDomain:(NSString*) value;
- (ContentUserAppLoginInfoBuilder*) clearWifiDomain;

- (BOOL) hasLoginResult;
- (NSString*) loginResult;
- (ContentUserAppLoginInfoBuilder*) setLoginResult:(NSString*) value;
- (ContentUserAppLoginInfoBuilder*) clearLoginResult;
@end

#define CardInfo_phoneNo @"phoneNo"
#define CardInfo_holderName @"holderName"
#define CardInfo_id @"id"
#define CardInfo_pan @"pan"
#define CardInfo_bankId @"bankId"
#define CardInfo_cardType @"cardType"
#define CardInfo_bankName @"bankName"
@interface ContentCardInfo : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasPhoneNo_:1;
  BOOL hasHolderName_:1;
  BOOL hasId_:1;
  BOOL hasPan_:1;
  BOOL hasBankId_:1;
  BOOL hasCardType_:1;
  BOOL hasBankName_:1;
  NSString* phoneNo;
  NSString* holderName;
  NSString* id;
  NSString* pan;
  NSString* bankId;
  NSString* cardType;
  NSString* bankName;
}
- (BOOL) hasPhoneNo;
- (BOOL) hasHolderName;
- (BOOL) hasId;
- (BOOL) hasPan;
- (BOOL) hasBankId;
- (BOOL) hasCardType;
- (BOOL) hasBankName;
@property (readonly, strong) NSString* phoneNo;
@property (readonly, strong) NSString* holderName;
@property (readonly, strong) NSString* id;
@property (readonly, strong) NSString* pan;
@property (readonly, strong) NSString* bankId;
@property (readonly, strong) NSString* cardType;
@property (readonly, strong) NSString* bankName;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ContentCardInfoBuilder*) builder;
+ (ContentCardInfoBuilder*) builder;
+ (ContentCardInfoBuilder*) builderWithPrototype:(ContentCardInfo*) prototype;
- (ContentCardInfoBuilder*) toBuilder;

+ (ContentCardInfo*) parseFromData:(NSData*) data;
+ (ContentCardInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentCardInfo*) parseFromInputStream:(NSInputStream*) input;
+ (ContentCardInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentCardInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ContentCardInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ContentCardInfoBuilder : PBGeneratedMessageBuilder {
@private
  ContentCardInfo* resultCardInfo;
}

- (ContentCardInfo*) defaultInstance;

- (ContentCardInfoBuilder*) clear;
- (ContentCardInfoBuilder*) clone;

- (ContentCardInfo*) build;
- (ContentCardInfo*) buildPartial;

- (ContentCardInfoBuilder*) mergeFrom:(ContentCardInfo*) other;
- (ContentCardInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ContentCardInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasPhoneNo;
- (NSString*) phoneNo;
- (ContentCardInfoBuilder*) setPhoneNo:(NSString*) value;
- (ContentCardInfoBuilder*) clearPhoneNo;

- (BOOL) hasHolderName;
- (NSString*) holderName;
- (ContentCardInfoBuilder*) setHolderName:(NSString*) value;
- (ContentCardInfoBuilder*) clearHolderName;

- (BOOL) hasId;
- (NSString*) id;
- (ContentCardInfoBuilder*) setId:(NSString*) value;
- (ContentCardInfoBuilder*) clearId;

- (BOOL) hasPan;
- (NSString*) pan;
- (ContentCardInfoBuilder*) setPan:(NSString*) value;
- (ContentCardInfoBuilder*) clearPan;

- (BOOL) hasBankId;
- (NSString*) bankId;
- (ContentCardInfoBuilder*) setBankId:(NSString*) value;
- (ContentCardInfoBuilder*) clearBankId;

- (BOOL) hasCardType;
- (NSString*) cardType;
- (ContentCardInfoBuilder*) setCardType:(NSString*) value;
- (ContentCardInfoBuilder*) clearCardType;

- (BOOL) hasBankName;
- (NSString*) bankName;
- (ContentCardInfoBuilder*) setBankName:(NSString*) value;
- (ContentCardInfoBuilder*) clearBankName;
@end

#define SummarizeInfo_memAcctcodeBalance @"memAcctcodeBalance"
#define SummarizeInfo_fpdBalance @"fpdBalance"
#define SummarizeInfo_totalAmt @"totalAmt"
#define SummarizeInfo_totalAssets @"totalAssets"
#define SummarizeInfo_kyhStatus @"kyhStatus"
#define SummarizeInfo_amt @"amt"
#define SummarizeInfo_fee @"fee"
#define SummarizeInfo_leftCashCreditAmt @"leftCashCreditAmt"
#define SummarizeInfo_voucherCount @"voucherCount"
#define SummarizeInfo_ticketCount @"ticketCount"
#define SummarizeInfo_cardCount @"cardCount"
#define SummarizeInfo_accStatus @"accStatus"
#define SummarizeInfo_totalFee @"totalFee"
#define SummarizeInfo_cashCreditUrl @"cashCreditUrl"
#define SummarizeInfo_kyhFrozenStatus @"kyhFrozenStatus"
#define SummarizeInfo_isShowPreQuotaAmt @"isShowPreQuotaAmt"
#define SummarizeInfo_preFcsAmt @"preFcsAmt"
#define SummarizeInfo_preFcsUrl @"preFcsUrl"
#define SummarizeInfo_interestsBackBalance @"interestsBackBalance"
#define SummarizeInfo_leftFcsCreditAmt @"leftFcsCreditAmt"
#define SummarizeInfo_isShowCashInstallment @"isShowCashInstallment"
#define SummarizeInfo_quotaShowType @"quotaShowType"
#define SummarizeInfo_cashCreditAmtStatus @"cashCreditAmtStatus"
#define SummarizeInfo_leftCreditAmtName @"leftCreditAmtName"
#define SummarizeInfo_leftCashCreditAmtName @"leftCashCreditAmtName"
#define SummarizeInfo_leftFcsCreditName @"leftFcsCreditName"
#define SummarizeInfo_bankCardCount @"bankCardCount"
#define SummarizeInfo_kyhFrozenUrl @"kyhFrozenUrl"
#define SummarizeInfo_msxfOverdueInd @"msxfOverdueInd"
#define SummarizeInfo_msxfApplyStatus @"msxfApplyStatus"
@interface ContentSummarizeInfo : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasMemAcctcodeBalance_:1;
  BOOL hasFpdBalance_:1;
  BOOL hasTotalAmt_:1;
  BOOL hasTotalAssets_:1;
  BOOL hasKyhStatus_:1;
  BOOL hasAmt_:1;
  BOOL hasFee_:1;
  BOOL hasLeftCashCreditAmt_:1;
  BOOL hasVoucherCount_:1;
  BOOL hasTicketCount_:1;
  BOOL hasCardCount_:1;
  BOOL hasAccStatus_:1;
  BOOL hasTotalFee_:1;
  BOOL hasCashCreditUrl_:1;
  BOOL hasKyhFrozenStatus_:1;
  BOOL hasIsShowPreQuotaAmt_:1;
  BOOL hasPreFcsAmt_:1;
  BOOL hasPreFcsUrl_:1;
  BOOL hasInterestsBackBalance_:1;
  BOOL hasLeftFcsCreditAmt_:1;
  BOOL hasIsShowCashInstallment_:1;
  BOOL hasQuotaShowType_:1;
  BOOL hasCashCreditAmtStatus_:1;
  BOOL hasLeftCreditAmtName_:1;
  BOOL hasLeftCashCreditAmtName_:1;
  BOOL hasLeftFcsCreditName_:1;
  BOOL hasBankCardCount_:1;
  BOOL hasKyhFrozenUrl_:1;
  BOOL hasMsxfOverdueInd_:1;
  BOOL hasMsxfApplyStatus_:1;
  NSString* memAcctcodeBalance;
  NSString* fpdBalance;
  NSString* totalAmt;
  NSString* totalAssets;
  NSString* kyhStatus;
  NSString* amt;
  NSString* fee;
  NSString* leftCashCreditAmt;
  NSString* voucherCount;
  NSString* ticketCount;
  NSString* cardCount;
  NSString* accStatus;
  NSString* totalFee;
  NSString* cashCreditUrl;
  NSString* kyhFrozenStatus;
  NSString* isShowPreQuotaAmt;
  NSString* preFcsAmt;
  NSString* preFcsUrl;
  NSString* interestsBackBalance;
  NSString* leftFcsCreditAmt;
  NSString* isShowCashInstallment;
  NSString* quotaShowType;
  NSString* cashCreditAmtStatus;
  NSString* leftCreditAmtName;
  NSString* leftCashCreditAmtName;
  NSString* leftFcsCreditName;
  NSString* bankCardCount;
  NSString* kyhFrozenUrl;
  NSString* msxfOverdueInd;
  NSString* msxfApplyStatus;
}
- (BOOL) hasMemAcctcodeBalance;
- (BOOL) hasFpdBalance;
- (BOOL) hasTotalAmt;
- (BOOL) hasTotalAssets;
- (BOOL) hasKyhStatus;
- (BOOL) hasAmt;
- (BOOL) hasFee;
- (BOOL) hasLeftCashCreditAmt;
- (BOOL) hasVoucherCount;
- (BOOL) hasTicketCount;
- (BOOL) hasCardCount;
- (BOOL) hasAccStatus;
- (BOOL) hasTotalFee;
- (BOOL) hasCashCreditUrl;
- (BOOL) hasKyhFrozenStatus;
- (BOOL) hasIsShowPreQuotaAmt;
- (BOOL) hasPreFcsAmt;
- (BOOL) hasPreFcsUrl;
- (BOOL) hasInterestsBackBalance;
- (BOOL) hasLeftFcsCreditAmt;
- (BOOL) hasIsShowCashInstallment;
- (BOOL) hasQuotaShowType;
- (BOOL) hasCashCreditAmtStatus;
- (BOOL) hasLeftCreditAmtName;
- (BOOL) hasLeftCashCreditAmtName;
- (BOOL) hasLeftFcsCreditName;
- (BOOL) hasBankCardCount;
- (BOOL) hasKyhFrozenUrl;
- (BOOL) hasMsxfOverdueInd;
- (BOOL) hasMsxfApplyStatus;
@property (readonly, strong) NSString* memAcctcodeBalance;
@property (readonly, strong) NSString* fpdBalance;
@property (readonly, strong) NSString* totalAmt;
@property (readonly, strong) NSString* totalAssets;
@property (readonly, strong) NSString* kyhStatus;
@property (readonly, strong) NSString* amt;
@property (readonly, strong) NSString* fee;
@property (readonly, strong) NSString* leftCashCreditAmt;
@property (readonly, strong) NSString* voucherCount;
@property (readonly, strong) NSString* ticketCount;
@property (readonly, strong) NSString* cardCount;
@property (readonly, strong) NSString* accStatus;
@property (readonly, strong) NSString* totalFee;
@property (readonly, strong) NSString* cashCreditUrl;
@property (readonly, strong) NSString* kyhFrozenStatus;
@property (readonly, strong) NSString* isShowPreQuotaAmt;
@property (readonly, strong) NSString* preFcsAmt;
@property (readonly, strong) NSString* preFcsUrl;
@property (readonly, strong) NSString* interestsBackBalance;
@property (readonly, strong) NSString* leftFcsCreditAmt;
@property (readonly, strong) NSString* isShowCashInstallment;
@property (readonly, strong) NSString* quotaShowType;
@property (readonly, strong) NSString* cashCreditAmtStatus;
@property (readonly, strong) NSString* leftCreditAmtName;
@property (readonly, strong) NSString* leftCashCreditAmtName;
@property (readonly, strong) NSString* leftFcsCreditName;
@property (readonly, strong) NSString* bankCardCount;
@property (readonly, strong) NSString* kyhFrozenUrl;
@property (readonly, strong) NSString* msxfOverdueInd;
@property (readonly, strong) NSString* msxfApplyStatus;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ContentSummarizeInfoBuilder*) builder;
+ (ContentSummarizeInfoBuilder*) builder;
+ (ContentSummarizeInfoBuilder*) builderWithPrototype:(ContentSummarizeInfo*) prototype;
- (ContentSummarizeInfoBuilder*) toBuilder;

+ (ContentSummarizeInfo*) parseFromData:(NSData*) data;
+ (ContentSummarizeInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentSummarizeInfo*) parseFromInputStream:(NSInputStream*) input;
+ (ContentSummarizeInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentSummarizeInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ContentSummarizeInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ContentSummarizeInfoBuilder : PBGeneratedMessageBuilder {
@private
  ContentSummarizeInfo* resultSummarizeInfo;
}

- (ContentSummarizeInfo*) defaultInstance;

- (ContentSummarizeInfoBuilder*) clear;
- (ContentSummarizeInfoBuilder*) clone;

- (ContentSummarizeInfo*) build;
- (ContentSummarizeInfo*) buildPartial;

- (ContentSummarizeInfoBuilder*) mergeFrom:(ContentSummarizeInfo*) other;
- (ContentSummarizeInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ContentSummarizeInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasMemAcctcodeBalance;
- (NSString*) memAcctcodeBalance;
- (ContentSummarizeInfoBuilder*) setMemAcctcodeBalance:(NSString*) value;
- (ContentSummarizeInfoBuilder*) clearMemAcctcodeBalance;

- (BOOL) hasFpdBalance;
- (NSString*) fpdBalance;
- (ContentSummarizeInfoBuilder*) setFpdBalance:(NSString*) value;
- (ContentSummarizeInfoBuilder*) clearFpdBalance;

- (BOOL) hasTotalAmt;
- (NSString*) totalAmt;
- (ContentSummarizeInfoBuilder*) setTotalAmt:(NSString*) value;
- (ContentSummarizeInfoBuilder*) clearTotalAmt;

- (BOOL) hasTotalAssets;
- (NSString*) totalAssets;
- (ContentSummarizeInfoBuilder*) setTotalAssets:(NSString*) value;
- (ContentSummarizeInfoBuilder*) clearTotalAssets;

- (BOOL) hasKyhStatus;
- (NSString*) kyhStatus;
- (ContentSummarizeInfoBuilder*) setKyhStatus:(NSString*) value;
- (ContentSummarizeInfoBuilder*) clearKyhStatus;

- (BOOL) hasAmt;
- (NSString*) amt;
- (ContentSummarizeInfoBuilder*) setAmt:(NSString*) value;
- (ContentSummarizeInfoBuilder*) clearAmt;

- (BOOL) hasFee;
- (NSString*) fee;
- (ContentSummarizeInfoBuilder*) setFee:(NSString*) value;
- (ContentSummarizeInfoBuilder*) clearFee;

- (BOOL) hasLeftCashCreditAmt;
- (NSString*) leftCashCreditAmt;
- (ContentSummarizeInfoBuilder*) setLeftCashCreditAmt:(NSString*) value;
- (ContentSummarizeInfoBuilder*) clearLeftCashCreditAmt;

- (BOOL) hasVoucherCount;
- (NSString*) voucherCount;
- (ContentSummarizeInfoBuilder*) setVoucherCount:(NSString*) value;
- (ContentSummarizeInfoBuilder*) clearVoucherCount;

- (BOOL) hasTicketCount;
- (NSString*) ticketCount;
- (ContentSummarizeInfoBuilder*) setTicketCount:(NSString*) value;
- (ContentSummarizeInfoBuilder*) clearTicketCount;

- (BOOL) hasCardCount;
- (NSString*) cardCount;
- (ContentSummarizeInfoBuilder*) setCardCount:(NSString*) value;
- (ContentSummarizeInfoBuilder*) clearCardCount;

- (BOOL) hasAccStatus;
- (NSString*) accStatus;
- (ContentSummarizeInfoBuilder*) setAccStatus:(NSString*) value;
- (ContentSummarizeInfoBuilder*) clearAccStatus;

- (BOOL) hasTotalFee;
- (NSString*) totalFee;
- (ContentSummarizeInfoBuilder*) setTotalFee:(NSString*) value;
- (ContentSummarizeInfoBuilder*) clearTotalFee;

- (BOOL) hasCashCreditUrl;
- (NSString*) cashCreditUrl;
- (ContentSummarizeInfoBuilder*) setCashCreditUrl:(NSString*) value;
- (ContentSummarizeInfoBuilder*) clearCashCreditUrl;

- (BOOL) hasKyhFrozenStatus;
- (NSString*) kyhFrozenStatus;
- (ContentSummarizeInfoBuilder*) setKyhFrozenStatus:(NSString*) value;
- (ContentSummarizeInfoBuilder*) clearKyhFrozenStatus;

- (BOOL) hasIsShowPreQuotaAmt;
- (NSString*) isShowPreQuotaAmt;
- (ContentSummarizeInfoBuilder*) setIsShowPreQuotaAmt:(NSString*) value;
- (ContentSummarizeInfoBuilder*) clearIsShowPreQuotaAmt;

- (BOOL) hasPreFcsAmt;
- (NSString*) preFcsAmt;
- (ContentSummarizeInfoBuilder*) setPreFcsAmt:(NSString*) value;
- (ContentSummarizeInfoBuilder*) clearPreFcsAmt;

- (BOOL) hasPreFcsUrl;
- (NSString*) preFcsUrl;
- (ContentSummarizeInfoBuilder*) setPreFcsUrl:(NSString*) value;
- (ContentSummarizeInfoBuilder*) clearPreFcsUrl;

- (BOOL) hasInterestsBackBalance;
- (NSString*) interestsBackBalance;
- (ContentSummarizeInfoBuilder*) setInterestsBackBalance:(NSString*) value;
- (ContentSummarizeInfoBuilder*) clearInterestsBackBalance;

- (BOOL) hasLeftFcsCreditAmt;
- (NSString*) leftFcsCreditAmt;
- (ContentSummarizeInfoBuilder*) setLeftFcsCreditAmt:(NSString*) value;
- (ContentSummarizeInfoBuilder*) clearLeftFcsCreditAmt;

- (BOOL) hasIsShowCashInstallment;
- (NSString*) isShowCashInstallment;
- (ContentSummarizeInfoBuilder*) setIsShowCashInstallment:(NSString*) value;
- (ContentSummarizeInfoBuilder*) clearIsShowCashInstallment;

- (BOOL) hasQuotaShowType;
- (NSString*) quotaShowType;
- (ContentSummarizeInfoBuilder*) setQuotaShowType:(NSString*) value;
- (ContentSummarizeInfoBuilder*) clearQuotaShowType;

- (BOOL) hasCashCreditAmtStatus;
- (NSString*) cashCreditAmtStatus;
- (ContentSummarizeInfoBuilder*) setCashCreditAmtStatus:(NSString*) value;
- (ContentSummarizeInfoBuilder*) clearCashCreditAmtStatus;

- (BOOL) hasLeftCreditAmtName;
- (NSString*) leftCreditAmtName;
- (ContentSummarizeInfoBuilder*) setLeftCreditAmtName:(NSString*) value;
- (ContentSummarizeInfoBuilder*) clearLeftCreditAmtName;

- (BOOL) hasLeftCashCreditAmtName;
- (NSString*) leftCashCreditAmtName;
- (ContentSummarizeInfoBuilder*) setLeftCashCreditAmtName:(NSString*) value;
- (ContentSummarizeInfoBuilder*) clearLeftCashCreditAmtName;

- (BOOL) hasLeftFcsCreditName;
- (NSString*) leftFcsCreditName;
- (ContentSummarizeInfoBuilder*) setLeftFcsCreditName:(NSString*) value;
- (ContentSummarizeInfoBuilder*) clearLeftFcsCreditName;

- (BOOL) hasBankCardCount;
- (NSString*) bankCardCount;
- (ContentSummarizeInfoBuilder*) setBankCardCount:(NSString*) value;
- (ContentSummarizeInfoBuilder*) clearBankCardCount;

- (BOOL) hasKyhFrozenUrl;
- (NSString*) kyhFrozenUrl;
- (ContentSummarizeInfoBuilder*) setKyhFrozenUrl:(NSString*) value;
- (ContentSummarizeInfoBuilder*) clearKyhFrozenUrl;

- (BOOL) hasMsxfOverdueInd;
- (NSString*) msxfOverdueInd;
- (ContentSummarizeInfoBuilder*) setMsxfOverdueInd:(NSString*) value;
- (ContentSummarizeInfoBuilder*) clearMsxfOverdueInd;

- (BOOL) hasMsxfApplyStatus;
- (NSString*) msxfApplyStatus;
- (ContentSummarizeInfoBuilder*) setMsxfApplyStatus:(NSString*) value;
- (ContentSummarizeInfoBuilder*) clearMsxfApplyStatus;
@end

#define TxnInfo_merchantName @"merchantName"
#define TxnInfo_amt @"amt"
#define TxnInfo_txnTime @"txnTime"
#define TxnInfo_idTxnCtrl @"idTxnCtrl"
#define TxnInfo_extTraceNo @"extTraceNo"
#define TxnInfo_txnStatus @"txnStatus"
#define TxnInfo_txnStatusDisplay @"txnStatusDisplay"
#define TxnInfo_txnTrueStatus @"txnTrueStatus"
#define TxnInfo_txnType @"txnType"
#define TxnInfo_txnTypeDisplay @"txnTypeDisplay"
#define TxnInfo_recieveTime @"recieveTime"
@interface ContentTxnInfo : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasMerchantName_:1;
  BOOL hasAmt_:1;
  BOOL hasTxnTime_:1;
  BOOL hasIdTxnCtrl_:1;
  BOOL hasExtTraceNo_:1;
  BOOL hasTxnStatus_:1;
  BOOL hasTxnStatusDisplay_:1;
  BOOL hasTxnTrueStatus_:1;
  BOOL hasTxnType_:1;
  BOOL hasTxnTypeDisplay_:1;
  BOOL hasRecieveTime_:1;
  NSString* merchantName;
  NSString* amt;
  NSString* txnTime;
  NSString* idTxnCtrl;
  NSString* extTraceNo;
  NSString* txnStatus;
  NSString* txnStatusDisplay;
  NSString* txnTrueStatus;
  NSString* txnType;
  NSString* txnTypeDisplay;
  NSString* recieveTime;
}
- (BOOL) hasMerchantName;
- (BOOL) hasAmt;
- (BOOL) hasTxnTime;
- (BOOL) hasIdTxnCtrl;
- (BOOL) hasExtTraceNo;
- (BOOL) hasTxnStatus;
- (BOOL) hasTxnStatusDisplay;
- (BOOL) hasTxnTrueStatus;
- (BOOL) hasTxnType;
- (BOOL) hasTxnTypeDisplay;
- (BOOL) hasRecieveTime;
@property (readonly, strong) NSString* merchantName;
@property (readonly, strong) NSString* amt;
@property (readonly, strong) NSString* txnTime;
@property (readonly, strong) NSString* idTxnCtrl;
@property (readonly, strong) NSString* extTraceNo;
@property (readonly, strong) NSString* txnStatus;
@property (readonly, strong) NSString* txnStatusDisplay;
@property (readonly, strong) NSString* txnTrueStatus;
@property (readonly, strong) NSString* txnType;
@property (readonly, strong) NSString* txnTypeDisplay;
@property (readonly, strong) NSString* recieveTime;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ContentTxnInfoBuilder*) builder;
+ (ContentTxnInfoBuilder*) builder;
+ (ContentTxnInfoBuilder*) builderWithPrototype:(ContentTxnInfo*) prototype;
- (ContentTxnInfoBuilder*) toBuilder;

+ (ContentTxnInfo*) parseFromData:(NSData*) data;
+ (ContentTxnInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentTxnInfo*) parseFromInputStream:(NSInputStream*) input;
+ (ContentTxnInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentTxnInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ContentTxnInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ContentTxnInfoBuilder : PBGeneratedMessageBuilder {
@private
  ContentTxnInfo* resultTxnInfo;
}

- (ContentTxnInfo*) defaultInstance;

- (ContentTxnInfoBuilder*) clear;
- (ContentTxnInfoBuilder*) clone;

- (ContentTxnInfo*) build;
- (ContentTxnInfo*) buildPartial;

- (ContentTxnInfoBuilder*) mergeFrom:(ContentTxnInfo*) other;
- (ContentTxnInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ContentTxnInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasMerchantName;
- (NSString*) merchantName;
- (ContentTxnInfoBuilder*) setMerchantName:(NSString*) value;
- (ContentTxnInfoBuilder*) clearMerchantName;

- (BOOL) hasAmt;
- (NSString*) amt;
- (ContentTxnInfoBuilder*) setAmt:(NSString*) value;
- (ContentTxnInfoBuilder*) clearAmt;

- (BOOL) hasTxnTime;
- (NSString*) txnTime;
- (ContentTxnInfoBuilder*) setTxnTime:(NSString*) value;
- (ContentTxnInfoBuilder*) clearTxnTime;

- (BOOL) hasIdTxnCtrl;
- (NSString*) idTxnCtrl;
- (ContentTxnInfoBuilder*) setIdTxnCtrl:(NSString*) value;
- (ContentTxnInfoBuilder*) clearIdTxnCtrl;

- (BOOL) hasExtTraceNo;
- (NSString*) extTraceNo;
- (ContentTxnInfoBuilder*) setExtTraceNo:(NSString*) value;
- (ContentTxnInfoBuilder*) clearExtTraceNo;

- (BOOL) hasTxnStatus;
- (NSString*) txnStatus;
- (ContentTxnInfoBuilder*) setTxnStatus:(NSString*) value;
- (ContentTxnInfoBuilder*) clearTxnStatus;

- (BOOL) hasTxnStatusDisplay;
- (NSString*) txnStatusDisplay;
- (ContentTxnInfoBuilder*) setTxnStatusDisplay:(NSString*) value;
- (ContentTxnInfoBuilder*) clearTxnStatusDisplay;

- (BOOL) hasTxnTrueStatus;
- (NSString*) txnTrueStatus;
- (ContentTxnInfoBuilder*) setTxnTrueStatus:(NSString*) value;
- (ContentTxnInfoBuilder*) clearTxnTrueStatus;

- (BOOL) hasTxnType;
- (NSString*) txnType;
- (ContentTxnInfoBuilder*) setTxnType:(NSString*) value;
- (ContentTxnInfoBuilder*) clearTxnType;

- (BOOL) hasTxnTypeDisplay;
- (NSString*) txnTypeDisplay;
- (ContentTxnInfoBuilder*) setTxnTypeDisplay:(NSString*) value;
- (ContentTxnInfoBuilder*) clearTxnTypeDisplay;

- (BOOL) hasRecieveTime;
- (NSString*) recieveTime;
- (ContentTxnInfoBuilder*) setRecieveTime:(NSString*) value;
- (ContentTxnInfoBuilder*) clearRecieveTime;
@end

#define CreditOrder_billOrderId @"billOrderId"
#define CreditOrder_tradeId @"tradeId"
#define CreditOrder_txnAcctNo @"txnAcctNo"
#define CreditOrder_txnStatus @"txnStatus"
#define CreditOrder_txnAmt @"txnAmt"
#define CreditOrder_txnTime @"txnTime"
#define CreditOrder_merchantName @"merchantName"
#define CreditOrder_stages @"stages"
#define CreditOrder_txnStatusName @"txnStatusName"
#define CreditOrder_fcsCreditAmtType @"fcsCreditAmtType"
@interface ContentCreditOrder : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasBillOrderId_:1;
  BOOL hasTradeId_:1;
  BOOL hasTxnAcctNo_:1;
  BOOL hasTxnStatus_:1;
  BOOL hasTxnAmt_:1;
  BOOL hasTxnTime_:1;
  BOOL hasMerchantName_:1;
  BOOL hasStages_:1;
  BOOL hasTxnStatusName_:1;
  BOOL hasFcsCreditAmtType_:1;
  NSString* billOrderId;
  NSString* tradeId;
  NSString* txnAcctNo;
  NSString* txnStatus;
  NSString* txnAmt;
  NSString* txnTime;
  NSString* merchantName;
  NSString* stages;
  NSString* txnStatusName;
  NSString* fcsCreditAmtType;
}
- (BOOL) hasBillOrderId;
- (BOOL) hasTradeId;
- (BOOL) hasTxnAcctNo;
- (BOOL) hasTxnStatus;
- (BOOL) hasTxnAmt;
- (BOOL) hasTxnTime;
- (BOOL) hasMerchantName;
- (BOOL) hasStages;
- (BOOL) hasTxnStatusName;
- (BOOL) hasFcsCreditAmtType;
@property (readonly, strong) NSString* billOrderId;
@property (readonly, strong) NSString* tradeId;
@property (readonly, strong) NSString* txnAcctNo;
@property (readonly, strong) NSString* txnStatus;
@property (readonly, strong) NSString* txnAmt;
@property (readonly, strong) NSString* txnTime;
@property (readonly, strong) NSString* merchantName;
@property (readonly, strong) NSString* stages;
@property (readonly, strong) NSString* txnStatusName;
@property (readonly, strong) NSString* fcsCreditAmtType;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ContentCreditOrderBuilder*) builder;
+ (ContentCreditOrderBuilder*) builder;
+ (ContentCreditOrderBuilder*) builderWithPrototype:(ContentCreditOrder*) prototype;
- (ContentCreditOrderBuilder*) toBuilder;

+ (ContentCreditOrder*) parseFromData:(NSData*) data;
+ (ContentCreditOrder*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentCreditOrder*) parseFromInputStream:(NSInputStream*) input;
+ (ContentCreditOrder*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentCreditOrder*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ContentCreditOrder*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ContentCreditOrderBuilder : PBGeneratedMessageBuilder {
@private
  ContentCreditOrder* resultCreditOrder;
}

- (ContentCreditOrder*) defaultInstance;

- (ContentCreditOrderBuilder*) clear;
- (ContentCreditOrderBuilder*) clone;

- (ContentCreditOrder*) build;
- (ContentCreditOrder*) buildPartial;

- (ContentCreditOrderBuilder*) mergeFrom:(ContentCreditOrder*) other;
- (ContentCreditOrderBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ContentCreditOrderBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasBillOrderId;
- (NSString*) billOrderId;
- (ContentCreditOrderBuilder*) setBillOrderId:(NSString*) value;
- (ContentCreditOrderBuilder*) clearBillOrderId;

- (BOOL) hasTradeId;
- (NSString*) tradeId;
- (ContentCreditOrderBuilder*) setTradeId:(NSString*) value;
- (ContentCreditOrderBuilder*) clearTradeId;

- (BOOL) hasTxnAcctNo;
- (NSString*) txnAcctNo;
- (ContentCreditOrderBuilder*) setTxnAcctNo:(NSString*) value;
- (ContentCreditOrderBuilder*) clearTxnAcctNo;

- (BOOL) hasTxnStatus;
- (NSString*) txnStatus;
- (ContentCreditOrderBuilder*) setTxnStatus:(NSString*) value;
- (ContentCreditOrderBuilder*) clearTxnStatus;

- (BOOL) hasTxnAmt;
- (NSString*) txnAmt;
- (ContentCreditOrderBuilder*) setTxnAmt:(NSString*) value;
- (ContentCreditOrderBuilder*) clearTxnAmt;

- (BOOL) hasTxnTime;
- (NSString*) txnTime;
- (ContentCreditOrderBuilder*) setTxnTime:(NSString*) value;
- (ContentCreditOrderBuilder*) clearTxnTime;

- (BOOL) hasMerchantName;
- (NSString*) merchantName;
- (ContentCreditOrderBuilder*) setMerchantName:(NSString*) value;
- (ContentCreditOrderBuilder*) clearMerchantName;

- (BOOL) hasStages;
- (NSString*) stages;
- (ContentCreditOrderBuilder*) setStages:(NSString*) value;
- (ContentCreditOrderBuilder*) clearStages;

- (BOOL) hasTxnStatusName;
- (NSString*) txnStatusName;
- (ContentCreditOrderBuilder*) setTxnStatusName:(NSString*) value;
- (ContentCreditOrderBuilder*) clearTxnStatusName;

- (BOOL) hasFcsCreditAmtType;
- (NSString*) fcsCreditAmtType;
- (ContentCreditOrderBuilder*) setFcsCreditAmtType:(NSString*) value;
- (ContentCreditOrderBuilder*) clearFcsCreditAmtType;
@end

#define Divide_currentStage @"currentStage"
#define Divide_divideTxnNo @"divideTxnNo"
#define Divide_divideTxnStatus @"divideTxnStatus"
#define Divide_divideTxnAmt @"divideTxnAmt"
#define Divide_divideFee @"divideFee"
#define Divide_divideInterest @"divideInterest"
#define Divide_divideReturnAmt @"divideReturnAmt"
#define Divide_divideRepayDate @"divideRepayDate"
#define Divide_statusShow @"statusShow"
#define Divide_divideRepayAmt @"divideRepayAmt"
#define Divide_leftDays @"leftDays"
#define Divide_totalAmt @"totalAmt"
#define Divide_divideTxnStatusName @"divideTxnStatusName"
@interface ContentDivide : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasCurrentStage_:1;
  BOOL hasDivideTxnNo_:1;
  BOOL hasDivideTxnStatus_:1;
  BOOL hasDivideTxnAmt_:1;
  BOOL hasDivideFee_:1;
  BOOL hasDivideInterest_:1;
  BOOL hasDivideReturnAmt_:1;
  BOOL hasDivideRepayDate_:1;
  BOOL hasStatusShow_:1;
  BOOL hasDivideRepayAmt_:1;
  BOOL hasLeftDays_:1;
  BOOL hasTotalAmt_:1;
  BOOL hasDivideTxnStatusName_:1;
  NSString* currentStage;
  NSString* divideTxnNo;
  NSString* divideTxnStatus;
  NSString* divideTxnAmt;
  NSString* divideFee;
  NSString* divideInterest;
  NSString* divideReturnAmt;
  NSString* divideRepayDate;
  NSString* statusShow;
  NSString* divideRepayAmt;
  NSString* leftDays;
  NSString* totalAmt;
  NSString* divideTxnStatusName;
}
- (BOOL) hasCurrentStage;
- (BOOL) hasDivideTxnNo;
- (BOOL) hasDivideTxnStatus;
- (BOOL) hasDivideTxnAmt;
- (BOOL) hasDivideFee;
- (BOOL) hasDivideInterest;
- (BOOL) hasDivideReturnAmt;
- (BOOL) hasDivideRepayDate;
- (BOOL) hasStatusShow;
- (BOOL) hasDivideRepayAmt;
- (BOOL) hasLeftDays;
- (BOOL) hasTotalAmt;
- (BOOL) hasDivideTxnStatusName;
@property (readonly, strong) NSString* currentStage;
@property (readonly, strong) NSString* divideTxnNo;
@property (readonly, strong) NSString* divideTxnStatus;
@property (readonly, strong) NSString* divideTxnAmt;
@property (readonly, strong) NSString* divideFee;
@property (readonly, strong) NSString* divideInterest;
@property (readonly, strong) NSString* divideReturnAmt;
@property (readonly, strong) NSString* divideRepayDate;
@property (readonly, strong) NSString* statusShow;
@property (readonly, strong) NSString* divideRepayAmt;
@property (readonly, strong) NSString* leftDays;
@property (readonly, strong) NSString* totalAmt;
@property (readonly, strong) NSString* divideTxnStatusName;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ContentDivideBuilder*) builder;
+ (ContentDivideBuilder*) builder;
+ (ContentDivideBuilder*) builderWithPrototype:(ContentDivide*) prototype;
- (ContentDivideBuilder*) toBuilder;

+ (ContentDivide*) parseFromData:(NSData*) data;
+ (ContentDivide*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentDivide*) parseFromInputStream:(NSInputStream*) input;
+ (ContentDivide*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentDivide*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ContentDivide*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ContentDivideBuilder : PBGeneratedMessageBuilder {
@private
  ContentDivide* resultDivide;
}

- (ContentDivide*) defaultInstance;

- (ContentDivideBuilder*) clear;
- (ContentDivideBuilder*) clone;

- (ContentDivide*) build;
- (ContentDivide*) buildPartial;

- (ContentDivideBuilder*) mergeFrom:(ContentDivide*) other;
- (ContentDivideBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ContentDivideBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasCurrentStage;
- (NSString*) currentStage;
- (ContentDivideBuilder*) setCurrentStage:(NSString*) value;
- (ContentDivideBuilder*) clearCurrentStage;

- (BOOL) hasDivideTxnNo;
- (NSString*) divideTxnNo;
- (ContentDivideBuilder*) setDivideTxnNo:(NSString*) value;
- (ContentDivideBuilder*) clearDivideTxnNo;

- (BOOL) hasDivideTxnStatus;
- (NSString*) divideTxnStatus;
- (ContentDivideBuilder*) setDivideTxnStatus:(NSString*) value;
- (ContentDivideBuilder*) clearDivideTxnStatus;

- (BOOL) hasDivideTxnAmt;
- (NSString*) divideTxnAmt;
- (ContentDivideBuilder*) setDivideTxnAmt:(NSString*) value;
- (ContentDivideBuilder*) clearDivideTxnAmt;

- (BOOL) hasDivideFee;
- (NSString*) divideFee;
- (ContentDivideBuilder*) setDivideFee:(NSString*) value;
- (ContentDivideBuilder*) clearDivideFee;

- (BOOL) hasDivideInterest;
- (NSString*) divideInterest;
- (ContentDivideBuilder*) setDivideInterest:(NSString*) value;
- (ContentDivideBuilder*) clearDivideInterest;

- (BOOL) hasDivideReturnAmt;
- (NSString*) divideReturnAmt;
- (ContentDivideBuilder*) setDivideReturnAmt:(NSString*) value;
- (ContentDivideBuilder*) clearDivideReturnAmt;

- (BOOL) hasDivideRepayDate;
- (NSString*) divideRepayDate;
- (ContentDivideBuilder*) setDivideRepayDate:(NSString*) value;
- (ContentDivideBuilder*) clearDivideRepayDate;

- (BOOL) hasStatusShow;
- (NSString*) statusShow;
- (ContentDivideBuilder*) setStatusShow:(NSString*) value;
- (ContentDivideBuilder*) clearStatusShow;

- (BOOL) hasDivideRepayAmt;
- (NSString*) divideRepayAmt;
- (ContentDivideBuilder*) setDivideRepayAmt:(NSString*) value;
- (ContentDivideBuilder*) clearDivideRepayAmt;

- (BOOL) hasLeftDays;
- (NSString*) leftDays;
- (ContentDivideBuilder*) setLeftDays:(NSString*) value;
- (ContentDivideBuilder*) clearLeftDays;

- (BOOL) hasTotalAmt;
- (NSString*) totalAmt;
- (ContentDivideBuilder*) setTotalAmt:(NSString*) value;
- (ContentDivideBuilder*) clearTotalAmt;

- (BOOL) hasDivideTxnStatusName;
- (NSString*) divideTxnStatusName;
- (ContentDivideBuilder*) setDivideTxnStatusName:(NSString*) value;
- (ContentDivideBuilder*) clearDivideTxnStatusName;
@end

#define RepayOrder_billOrderId @"billOrderId"
#define RepayOrder_tradeId @"tradeId"
#define RepayOrder_txnAcctNo @"txnAcctNo"
#define RepayOrder_leftDays @"leftDays"
#define RepayOrder_txnAmt @"txnAmt"
#define RepayOrder_txnTime @"txnTime"
#define RepayOrder_stage @"stage"
#define RepayOrder_currentStage @"currentStage"
#define RepayOrder_repayDate @"repayDate"
#define RepayOrder_merchantName @"merchantName"
#define RepayOrder_isDivide @"isDivide"
#define RepayOrder_stageInfo @"stageInfo"
#define RepayOrder_repayInfo @"repayInfo"
#define RepayOrder_txnStatus @"txnStatus"
#define RepayOrder_txnStatusName @"txnStatusName"
#define RepayOrder_fcsCreditAmtType @"fcsCreditAmtType"
@interface ContentRepayOrder : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasBillOrderId_:1;
  BOOL hasTradeId_:1;
  BOOL hasTxnAcctNo_:1;
  BOOL hasLeftDays_:1;
  BOOL hasTxnAmt_:1;
  BOOL hasTxnTime_:1;
  BOOL hasStage_:1;
  BOOL hasCurrentStage_:1;
  BOOL hasRepayDate_:1;
  BOOL hasMerchantName_:1;
  BOOL hasIsDivide_:1;
  BOOL hasStageInfo_:1;
  BOOL hasRepayInfo_:1;
  BOOL hasTxnStatus_:1;
  BOOL hasTxnStatusName_:1;
  BOOL hasFcsCreditAmtType_:1;
  NSString* billOrderId;
  NSString* tradeId;
  NSString* txnAcctNo;
  NSString* leftDays;
  NSString* txnAmt;
  NSString* txnTime;
  NSString* stage;
  NSString* currentStage;
  NSString* repayDate;
  NSString* merchantName;
  NSString* isDivide;
  NSString* stageInfo;
  NSString* repayInfo;
  NSString* txnStatus;
  NSString* txnStatusName;
  NSString* fcsCreditAmtType;
}
- (BOOL) hasBillOrderId;
- (BOOL) hasTradeId;
- (BOOL) hasTxnAcctNo;
- (BOOL) hasLeftDays;
- (BOOL) hasTxnAmt;
- (BOOL) hasTxnTime;
- (BOOL) hasStage;
- (BOOL) hasCurrentStage;
- (BOOL) hasRepayDate;
- (BOOL) hasMerchantName;
- (BOOL) hasIsDivide;
- (BOOL) hasStageInfo;
- (BOOL) hasRepayInfo;
- (BOOL) hasTxnStatus;
- (BOOL) hasTxnStatusName;
- (BOOL) hasFcsCreditAmtType;
@property (readonly, strong) NSString* billOrderId;
@property (readonly, strong) NSString* tradeId;
@property (readonly, strong) NSString* txnAcctNo;
@property (readonly, strong) NSString* leftDays;
@property (readonly, strong) NSString* txnAmt;
@property (readonly, strong) NSString* txnTime;
@property (readonly, strong) NSString* stage;
@property (readonly, strong) NSString* currentStage;
@property (readonly, strong) NSString* repayDate;
@property (readonly, strong) NSString* merchantName;
@property (readonly, strong) NSString* isDivide;
@property (readonly, strong) NSString* stageInfo;
@property (readonly, strong) NSString* repayInfo;
@property (readonly, strong) NSString* txnStatus;
@property (readonly, strong) NSString* txnStatusName;
@property (readonly, strong) NSString* fcsCreditAmtType;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ContentRepayOrderBuilder*) builder;
+ (ContentRepayOrderBuilder*) builder;
+ (ContentRepayOrderBuilder*) builderWithPrototype:(ContentRepayOrder*) prototype;
- (ContentRepayOrderBuilder*) toBuilder;

+ (ContentRepayOrder*) parseFromData:(NSData*) data;
+ (ContentRepayOrder*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentRepayOrder*) parseFromInputStream:(NSInputStream*) input;
+ (ContentRepayOrder*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentRepayOrder*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ContentRepayOrder*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ContentRepayOrderBuilder : PBGeneratedMessageBuilder {
@private
  ContentRepayOrder* resultRepayOrder;
}

- (ContentRepayOrder*) defaultInstance;

- (ContentRepayOrderBuilder*) clear;
- (ContentRepayOrderBuilder*) clone;

- (ContentRepayOrder*) build;
- (ContentRepayOrder*) buildPartial;

- (ContentRepayOrderBuilder*) mergeFrom:(ContentRepayOrder*) other;
- (ContentRepayOrderBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ContentRepayOrderBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasBillOrderId;
- (NSString*) billOrderId;
- (ContentRepayOrderBuilder*) setBillOrderId:(NSString*) value;
- (ContentRepayOrderBuilder*) clearBillOrderId;

- (BOOL) hasTradeId;
- (NSString*) tradeId;
- (ContentRepayOrderBuilder*) setTradeId:(NSString*) value;
- (ContentRepayOrderBuilder*) clearTradeId;

- (BOOL) hasTxnAcctNo;
- (NSString*) txnAcctNo;
- (ContentRepayOrderBuilder*) setTxnAcctNo:(NSString*) value;
- (ContentRepayOrderBuilder*) clearTxnAcctNo;

- (BOOL) hasLeftDays;
- (NSString*) leftDays;
- (ContentRepayOrderBuilder*) setLeftDays:(NSString*) value;
- (ContentRepayOrderBuilder*) clearLeftDays;

- (BOOL) hasTxnAmt;
- (NSString*) txnAmt;
- (ContentRepayOrderBuilder*) setTxnAmt:(NSString*) value;
- (ContentRepayOrderBuilder*) clearTxnAmt;

- (BOOL) hasTxnTime;
- (NSString*) txnTime;
- (ContentRepayOrderBuilder*) setTxnTime:(NSString*) value;
- (ContentRepayOrderBuilder*) clearTxnTime;

- (BOOL) hasStage;
- (NSString*) stage;
- (ContentRepayOrderBuilder*) setStage:(NSString*) value;
- (ContentRepayOrderBuilder*) clearStage;

- (BOOL) hasCurrentStage;
- (NSString*) currentStage;
- (ContentRepayOrderBuilder*) setCurrentStage:(NSString*) value;
- (ContentRepayOrderBuilder*) clearCurrentStage;

- (BOOL) hasRepayDate;
- (NSString*) repayDate;
- (ContentRepayOrderBuilder*) setRepayDate:(NSString*) value;
- (ContentRepayOrderBuilder*) clearRepayDate;

- (BOOL) hasMerchantName;
- (NSString*) merchantName;
- (ContentRepayOrderBuilder*) setMerchantName:(NSString*) value;
- (ContentRepayOrderBuilder*) clearMerchantName;

- (BOOL) hasIsDivide;
- (NSString*) isDivide;
- (ContentRepayOrderBuilder*) setIsDivide:(NSString*) value;
- (ContentRepayOrderBuilder*) clearIsDivide;

- (BOOL) hasStageInfo;
- (NSString*) stageInfo;
- (ContentRepayOrderBuilder*) setStageInfo:(NSString*) value;
- (ContentRepayOrderBuilder*) clearStageInfo;

- (BOOL) hasRepayInfo;
- (NSString*) repayInfo;
- (ContentRepayOrderBuilder*) setRepayInfo:(NSString*) value;
- (ContentRepayOrderBuilder*) clearRepayInfo;

- (BOOL) hasTxnStatus;
- (NSString*) txnStatus;
- (ContentRepayOrderBuilder*) setTxnStatus:(NSString*) value;
- (ContentRepayOrderBuilder*) clearTxnStatus;

- (BOOL) hasTxnStatusName;
- (NSString*) txnStatusName;
- (ContentRepayOrderBuilder*) setTxnStatusName:(NSString*) value;
- (ContentRepayOrderBuilder*) clearTxnStatusName;

- (BOOL) hasFcsCreditAmtType;
- (NSString*) fcsCreditAmtType;
- (ContentRepayOrderBuilder*) setFcsCreditAmtType:(NSString*) value;
- (ContentRepayOrderBuilder*) clearFcsCreditAmtType;
@end

#define RepayRecord_repayAmt @"repayAmt"
#define RepayRecord_repayTime @"repayTime"
#define RepayRecord_repayName @"repayName"
#define RepayRecord_status @"status"
@interface ContentRepayRecord : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasRepayAmt_:1;
  BOOL hasRepayTime_:1;
  BOOL hasRepayName_:1;
  BOOL hasStatus_:1;
  NSString* repayAmt;
  NSString* repayTime;
  NSString* repayName;
  NSString* status;
}
- (BOOL) hasRepayAmt;
- (BOOL) hasRepayTime;
- (BOOL) hasRepayName;
- (BOOL) hasStatus;
@property (readonly, strong) NSString* repayAmt;
@property (readonly, strong) NSString* repayTime;
@property (readonly, strong) NSString* repayName;
@property (readonly, strong) NSString* status;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ContentRepayRecordBuilder*) builder;
+ (ContentRepayRecordBuilder*) builder;
+ (ContentRepayRecordBuilder*) builderWithPrototype:(ContentRepayRecord*) prototype;
- (ContentRepayRecordBuilder*) toBuilder;

+ (ContentRepayRecord*) parseFromData:(NSData*) data;
+ (ContentRepayRecord*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentRepayRecord*) parseFromInputStream:(NSInputStream*) input;
+ (ContentRepayRecord*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentRepayRecord*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ContentRepayRecord*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ContentRepayRecordBuilder : PBGeneratedMessageBuilder {
@private
  ContentRepayRecord* resultRepayRecord;
}

- (ContentRepayRecord*) defaultInstance;

- (ContentRepayRecordBuilder*) clear;
- (ContentRepayRecordBuilder*) clone;

- (ContentRepayRecord*) build;
- (ContentRepayRecord*) buildPartial;

- (ContentRepayRecordBuilder*) mergeFrom:(ContentRepayRecord*) other;
- (ContentRepayRecordBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ContentRepayRecordBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasRepayAmt;
- (NSString*) repayAmt;
- (ContentRepayRecordBuilder*) setRepayAmt:(NSString*) value;
- (ContentRepayRecordBuilder*) clearRepayAmt;

- (BOOL) hasRepayTime;
- (NSString*) repayTime;
- (ContentRepayRecordBuilder*) setRepayTime:(NSString*) value;
- (ContentRepayRecordBuilder*) clearRepayTime;

- (BOOL) hasRepayName;
- (NSString*) repayName;
- (ContentRepayRecordBuilder*) setRepayName:(NSString*) value;
- (ContentRepayRecordBuilder*) clearRepayName;

- (BOOL) hasStatus;
- (NSString*) status;
- (ContentRepayRecordBuilder*) setStatus:(NSString*) value;
- (ContentRepayRecordBuilder*) clearStatus;
@end

#define PayType_payType @"payType"
#define PayType_payTypeName @"payTypeName"
@interface ContentPayType : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasPayType_:1;
  BOOL hasPayTypeName_:1;
  NSString* payType;
  NSString* payTypeName;
}
- (BOOL) hasPayType;
- (BOOL) hasPayTypeName;
@property (readonly, strong) NSString* payType;
@property (readonly, strong) NSString* payTypeName;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ContentPayTypeBuilder*) builder;
+ (ContentPayTypeBuilder*) builder;
+ (ContentPayTypeBuilder*) builderWithPrototype:(ContentPayType*) prototype;
- (ContentPayTypeBuilder*) toBuilder;

+ (ContentPayType*) parseFromData:(NSData*) data;
+ (ContentPayType*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentPayType*) parseFromInputStream:(NSInputStream*) input;
+ (ContentPayType*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentPayType*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ContentPayType*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ContentPayTypeBuilder : PBGeneratedMessageBuilder {
@private
  ContentPayType* resultPayType;
}

- (ContentPayType*) defaultInstance;

- (ContentPayTypeBuilder*) clear;
- (ContentPayTypeBuilder*) clone;

- (ContentPayType*) build;
- (ContentPayType*) buildPartial;

- (ContentPayTypeBuilder*) mergeFrom:(ContentPayType*) other;
- (ContentPayTypeBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ContentPayTypeBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasPayType;
- (NSString*) payType;
- (ContentPayTypeBuilder*) setPayType:(NSString*) value;
- (ContentPayTypeBuilder*) clearPayType;

- (BOOL) hasPayTypeName;
- (NSString*) payTypeName;
- (ContentPayTypeBuilder*) setPayTypeName:(NSString*) value;
- (ContentPayTypeBuilder*) clearPayTypeName;
@end

#define Contract_name @"name"
#define Contract_url @"url"
@interface ContentContract : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasName_:1;
  BOOL hasUrl_:1;
  NSString* name;
  NSString* url;
}
- (BOOL) hasName;
- (BOOL) hasUrl;
@property (readonly, strong) NSString* name;
@property (readonly, strong) NSString* url;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ContentContractBuilder*) builder;
+ (ContentContractBuilder*) builder;
+ (ContentContractBuilder*) builderWithPrototype:(ContentContract*) prototype;
- (ContentContractBuilder*) toBuilder;

+ (ContentContract*) parseFromData:(NSData*) data;
+ (ContentContract*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentContract*) parseFromInputStream:(NSInputStream*) input;
+ (ContentContract*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentContract*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ContentContract*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ContentContractBuilder : PBGeneratedMessageBuilder {
@private
  ContentContract* resultContract;
}

- (ContentContract*) defaultInstance;

- (ContentContractBuilder*) clear;
- (ContentContractBuilder*) clone;

- (ContentContract*) build;
- (ContentContract*) buildPartial;

- (ContentContractBuilder*) mergeFrom:(ContentContract*) other;
- (ContentContractBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ContentContractBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasName;
- (NSString*) name;
- (ContentContractBuilder*) setName:(NSString*) value;
- (ContentContractBuilder*) clearName;

- (BOOL) hasUrl;
- (NSString*) url;
- (ContentContractBuilder*) setUrl:(NSString*) value;
- (ContentContractBuilder*) clearUrl;
@end

#define FrozenInfo_status @"status"
#define FrozenInfo_desc @"desc"
#define FrozenInfo_url @"url"
@interface ContentFrozenInfo : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasStatus_:1;
  BOOL hasDesc_:1;
  BOOL hasUrl_:1;
  NSString* status;
  NSString* desc;
  NSString* url;
}
- (BOOL) hasStatus;
- (BOOL) hasDesc;
- (BOOL) hasUrl;
@property (readonly, strong) NSString* status;
@property (readonly, strong) NSString* desc;
@property (readonly, strong) NSString* url;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ContentFrozenInfoBuilder*) builder;
+ (ContentFrozenInfoBuilder*) builder;
+ (ContentFrozenInfoBuilder*) builderWithPrototype:(ContentFrozenInfo*) prototype;
- (ContentFrozenInfoBuilder*) toBuilder;

+ (ContentFrozenInfo*) parseFromData:(NSData*) data;
+ (ContentFrozenInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentFrozenInfo*) parseFromInputStream:(NSInputStream*) input;
+ (ContentFrozenInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentFrozenInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ContentFrozenInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ContentFrozenInfoBuilder : PBGeneratedMessageBuilder {
@private
  ContentFrozenInfo* resultFrozenInfo;
}

- (ContentFrozenInfo*) defaultInstance;

- (ContentFrozenInfoBuilder*) clear;
- (ContentFrozenInfoBuilder*) clone;

- (ContentFrozenInfo*) build;
- (ContentFrozenInfo*) buildPartial;

- (ContentFrozenInfoBuilder*) mergeFrom:(ContentFrozenInfo*) other;
- (ContentFrozenInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ContentFrozenInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasStatus;
- (NSString*) status;
- (ContentFrozenInfoBuilder*) setStatus:(NSString*) value;
- (ContentFrozenInfoBuilder*) clearStatus;

- (BOOL) hasDesc;
- (NSString*) desc;
- (ContentFrozenInfoBuilder*) setDesc:(NSString*) value;
- (ContentFrozenInfoBuilder*) clearDesc;

- (BOOL) hasUrl;
- (NSString*) url;
- (ContentFrozenInfoBuilder*) setUrl:(NSString*) value;
- (ContentFrozenInfoBuilder*) clearUrl;
@end

#define Result_itemID @"itemId"
#define Result_name @"name"
#define Result_imageDefaultID @"imageDefaultId"
#define Result_price @"price"
#define Result_sort @"sort"
#define Result_creditSort @"creditSort"
#define Result_tag @"tag"
#define Result_isStages @"isStages"
#define Result_stagesApp @"stagesApp"
@interface ContentResult : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasItemId_:1;
  BOOL hasName_:1;
  BOOL hasImageDefaultId_:1;
  BOOL hasPrice_:1;
  BOOL hasSort_:1;
  BOOL hasCreditSort_:1;
  BOOL hasTag_:1;
  BOOL hasIsStages_:1;
  BOOL hasStagesApp_:1;
  NSString* itemId;
  NSString* name;
  NSString* imageDefaultId;
  NSString* price;
  NSString* sort;
  NSString* creditSort;
  NSString* tag;
  NSString* isStages;
  NSString* stagesApp;
}
- (BOOL) hasItemId;
- (BOOL) hasName;
- (BOOL) hasImageDefaultId;
- (BOOL) hasPrice;
- (BOOL) hasSort;
- (BOOL) hasCreditSort;
- (BOOL) hasTag;
- (BOOL) hasIsStages;
- (BOOL) hasStagesApp;
@property (readonly, strong) NSString* itemId;
@property (readonly, strong) NSString* name;
@property (readonly, strong) NSString* imageDefaultId;
@property (readonly, strong) NSString* price;
@property (readonly, strong) NSString* sort;
@property (readonly, strong) NSString* creditSort;
@property (readonly, strong) NSString* tag;
@property (readonly, strong) NSString* isStages;
@property (readonly, strong) NSString* stagesApp;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ContentResultBuilder*) builder;
+ (ContentResultBuilder*) builder;
+ (ContentResultBuilder*) builderWithPrototype:(ContentResult*) prototype;
- (ContentResultBuilder*) toBuilder;

+ (ContentResult*) parseFromData:(NSData*) data;
+ (ContentResult*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentResult*) parseFromInputStream:(NSInputStream*) input;
+ (ContentResult*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentResult*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ContentResult*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ContentResultBuilder : PBGeneratedMessageBuilder {
@private
  ContentResult* resultResult;
}

- (ContentResult*) defaultInstance;

- (ContentResultBuilder*) clear;
- (ContentResultBuilder*) clone;

- (ContentResult*) build;
- (ContentResult*) buildPartial;

- (ContentResultBuilder*) mergeFrom:(ContentResult*) other;
- (ContentResultBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ContentResultBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasItemId;
- (NSString*) itemId;
- (ContentResultBuilder*) setItemId:(NSString*) value;
- (ContentResultBuilder*) clearItemId;

- (BOOL) hasName;
- (NSString*) name;
- (ContentResultBuilder*) setName:(NSString*) value;
- (ContentResultBuilder*) clearName;

- (BOOL) hasImageDefaultId;
- (NSString*) imageDefaultId;
- (ContentResultBuilder*) setImageDefaultId:(NSString*) value;
- (ContentResultBuilder*) clearImageDefaultId;

- (BOOL) hasPrice;
- (NSString*) price;
- (ContentResultBuilder*) setPrice:(NSString*) value;
- (ContentResultBuilder*) clearPrice;

- (BOOL) hasSort;
- (NSString*) sort;
- (ContentResultBuilder*) setSort:(NSString*) value;
- (ContentResultBuilder*) clearSort;

- (BOOL) hasCreditSort;
- (NSString*) creditSort;
- (ContentResultBuilder*) setCreditSort:(NSString*) value;
- (ContentResultBuilder*) clearCreditSort;

- (BOOL) hasTag;
- (NSString*) tag;
- (ContentResultBuilder*) setTag:(NSString*) value;
- (ContentResultBuilder*) clearTag;

- (BOOL) hasIsStages;
- (NSString*) isStages;
- (ContentResultBuilder*) setIsStages:(NSString*) value;
- (ContentResultBuilder*) clearIsStages;

- (BOOL) hasStagesApp;
- (NSString*) stagesApp;
- (ContentResultBuilder*) setStagesApp:(NSString*) value;
- (ContentResultBuilder*) clearStagesApp;
@end

#define OrderInfo_orderAmount @"orderAmount"
#define OrderInfo_orderTime @"orderTime"
#define OrderInfo_pan @"pan"
#define OrderInfo_outOrderNo @"outOrderNo"
#define OrderInfo_merchantCode @"merchantCode"
#define OrderInfo_orderType @"orderType"
#define OrderInfo_merchantName @"merchantName"
#define OrderInfo_payAmount @"payAmount"
#define OrderInfo_cardAmount @"cardAmount"
#define OrderInfo_equityAmount @"equityAmount"
#define OrderInfo_orderStatus @"orderStatus"
#define OrderInfo_payMode @"payMode"
#define OrderInfo_bankInfo @"bankInfo"
#define OrderInfo_crtTime @"crtTime"
#define OrderInfo_orderErrorCode @"orderErrorCode"
#define OrderInfo_orderErrorInfo @"orderErrorInfo"
#define OrderInfo_payDisplay @"payDisplay"
@interface ContentOrderInfo : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasOrderAmount_:1;
  BOOL hasOrderTime_:1;
  BOOL hasPan_:1;
  BOOL hasOutOrderNo_:1;
  BOOL hasMerchantCode_:1;
  BOOL hasOrderType_:1;
  BOOL hasMerchantName_:1;
  BOOL hasPayAmount_:1;
  BOOL hasCardAmount_:1;
  BOOL hasEquityAmount_:1;
  BOOL hasOrderStatus_:1;
  BOOL hasPayMode_:1;
  BOOL hasCrtTime_:1;
  BOOL hasOrderErrorCode_:1;
  BOOL hasOrderErrorInfo_:1;
  BOOL hasPayDisplay_:1;
  BOOL hasBankInfo_:1;
  NSString* orderAmount;
  NSString* orderTime;
  NSString* pan;
  NSString* outOrderNo;
  NSString* merchantCode;
  NSString* orderType;
  NSString* merchantName;
  NSString* payAmount;
  NSString* cardAmount;
  NSString* equityAmount;
  NSString* orderStatus;
  NSString* payMode;
  NSString* crtTime;
  NSString* orderErrorCode;
  NSString* orderErrorInfo;
  NSString* payDisplay;
  ContentBankInfo* bankInfo;
}
- (BOOL) hasOrderAmount;
- (BOOL) hasOrderTime;
- (BOOL) hasPan;
- (BOOL) hasOutOrderNo;
- (BOOL) hasMerchantCode;
- (BOOL) hasOrderType;
- (BOOL) hasMerchantName;
- (BOOL) hasPayAmount;
- (BOOL) hasCardAmount;
- (BOOL) hasEquityAmount;
- (BOOL) hasOrderStatus;
- (BOOL) hasPayMode;
- (BOOL) hasBankInfo;
- (BOOL) hasCrtTime;
- (BOOL) hasOrderErrorCode;
- (BOOL) hasOrderErrorInfo;
- (BOOL) hasPayDisplay;
@property (readonly, strong) NSString* orderAmount;
@property (readonly, strong) NSString* orderTime;
@property (readonly, strong) NSString* pan;
@property (readonly, strong) NSString* outOrderNo;
@property (readonly, strong) NSString* merchantCode;
@property (readonly, strong) NSString* orderType;
@property (readonly, strong) NSString* merchantName;
@property (readonly, strong) NSString* payAmount;
@property (readonly, strong) NSString* cardAmount;
@property (readonly, strong) NSString* equityAmount;
@property (readonly, strong) NSString* orderStatus;
@property (readonly, strong) NSString* payMode;
@property (readonly, strong) ContentBankInfo* bankInfo;
@property (readonly, strong) NSString* crtTime;
@property (readonly, strong) NSString* orderErrorCode;
@property (readonly, strong) NSString* orderErrorInfo;
@property (readonly, strong) NSString* payDisplay;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ContentOrderInfoBuilder*) builder;
+ (ContentOrderInfoBuilder*) builder;
+ (ContentOrderInfoBuilder*) builderWithPrototype:(ContentOrderInfo*) prototype;
- (ContentOrderInfoBuilder*) toBuilder;

+ (ContentOrderInfo*) parseFromData:(NSData*) data;
+ (ContentOrderInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentOrderInfo*) parseFromInputStream:(NSInputStream*) input;
+ (ContentOrderInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentOrderInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ContentOrderInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ContentOrderInfoBuilder : PBGeneratedMessageBuilder {
@private
  ContentOrderInfo* resultOrderInfo;
}

- (ContentOrderInfo*) defaultInstance;

- (ContentOrderInfoBuilder*) clear;
- (ContentOrderInfoBuilder*) clone;

- (ContentOrderInfo*) build;
- (ContentOrderInfo*) buildPartial;

- (ContentOrderInfoBuilder*) mergeFrom:(ContentOrderInfo*) other;
- (ContentOrderInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ContentOrderInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasOrderAmount;
- (NSString*) orderAmount;
- (ContentOrderInfoBuilder*) setOrderAmount:(NSString*) value;
- (ContentOrderInfoBuilder*) clearOrderAmount;

- (BOOL) hasOrderTime;
- (NSString*) orderTime;
- (ContentOrderInfoBuilder*) setOrderTime:(NSString*) value;
- (ContentOrderInfoBuilder*) clearOrderTime;

- (BOOL) hasPan;
- (NSString*) pan;
- (ContentOrderInfoBuilder*) setPan:(NSString*) value;
- (ContentOrderInfoBuilder*) clearPan;

- (BOOL) hasOutOrderNo;
- (NSString*) outOrderNo;
- (ContentOrderInfoBuilder*) setOutOrderNo:(NSString*) value;
- (ContentOrderInfoBuilder*) clearOutOrderNo;

- (BOOL) hasMerchantCode;
- (NSString*) merchantCode;
- (ContentOrderInfoBuilder*) setMerchantCode:(NSString*) value;
- (ContentOrderInfoBuilder*) clearMerchantCode;

- (BOOL) hasOrderType;
- (NSString*) orderType;
- (ContentOrderInfoBuilder*) setOrderType:(NSString*) value;
- (ContentOrderInfoBuilder*) clearOrderType;

- (BOOL) hasMerchantName;
- (NSString*) merchantName;
- (ContentOrderInfoBuilder*) setMerchantName:(NSString*) value;
- (ContentOrderInfoBuilder*) clearMerchantName;

- (BOOL) hasPayAmount;
- (NSString*) payAmount;
- (ContentOrderInfoBuilder*) setPayAmount:(NSString*) value;
- (ContentOrderInfoBuilder*) clearPayAmount;

- (BOOL) hasCardAmount;
- (NSString*) cardAmount;
- (ContentOrderInfoBuilder*) setCardAmount:(NSString*) value;
- (ContentOrderInfoBuilder*) clearCardAmount;

- (BOOL) hasEquityAmount;
- (NSString*) equityAmount;
- (ContentOrderInfoBuilder*) setEquityAmount:(NSString*) value;
- (ContentOrderInfoBuilder*) clearEquityAmount;

- (BOOL) hasOrderStatus;
- (NSString*) orderStatus;
- (ContentOrderInfoBuilder*) setOrderStatus:(NSString*) value;
- (ContentOrderInfoBuilder*) clearOrderStatus;

- (BOOL) hasPayMode;
- (NSString*) payMode;
- (ContentOrderInfoBuilder*) setPayMode:(NSString*) value;
- (ContentOrderInfoBuilder*) clearPayMode;

- (BOOL) hasBankInfo;
- (ContentBankInfo*) bankInfo;
- (ContentOrderInfoBuilder*) setBankInfo:(ContentBankInfo*) value;
- (ContentOrderInfoBuilder*) setBankInfoBuilder:(ContentBankInfoBuilder*) builderForValue;
- (ContentOrderInfoBuilder*) mergeBankInfo:(ContentBankInfo*) value;
- (ContentOrderInfoBuilder*) clearBankInfo;

- (BOOL) hasCrtTime;
- (NSString*) crtTime;
- (ContentOrderInfoBuilder*) setCrtTime:(NSString*) value;
- (ContentOrderInfoBuilder*) clearCrtTime;

- (BOOL) hasOrderErrorCode;
- (NSString*) orderErrorCode;
- (ContentOrderInfoBuilder*) setOrderErrorCode:(NSString*) value;
- (ContentOrderInfoBuilder*) clearOrderErrorCode;

- (BOOL) hasOrderErrorInfo;
- (NSString*) orderErrorInfo;
- (ContentOrderInfoBuilder*) setOrderErrorInfo:(NSString*) value;
- (ContentOrderInfoBuilder*) clearOrderErrorInfo;

- (BOOL) hasPayDisplay;
- (NSString*) payDisplay;
- (ContentOrderInfoBuilder*) setPayDisplay:(NSString*) value;
- (ContentOrderInfoBuilder*) clearPayDisplay;
@end

#define BankInfo_bankName @"bankName"
#define BankInfo_bankAccId @"bankAccId"
@interface ContentBankInfo : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasBankName_:1;
  BOOL hasBankAccId_:1;
  NSString* bankName;
  NSString* bankAccId;
}
- (BOOL) hasBankName;
- (BOOL) hasBankAccId;
@property (readonly, strong) NSString* bankName;
@property (readonly, strong) NSString* bankAccId;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ContentBankInfoBuilder*) builder;
+ (ContentBankInfoBuilder*) builder;
+ (ContentBankInfoBuilder*) builderWithPrototype:(ContentBankInfo*) prototype;
- (ContentBankInfoBuilder*) toBuilder;

+ (ContentBankInfo*) parseFromData:(NSData*) data;
+ (ContentBankInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentBankInfo*) parseFromInputStream:(NSInputStream*) input;
+ (ContentBankInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentBankInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ContentBankInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ContentBankInfoBuilder : PBGeneratedMessageBuilder {
@private
  ContentBankInfo* resultBankInfo;
}

- (ContentBankInfo*) defaultInstance;

- (ContentBankInfoBuilder*) clear;
- (ContentBankInfoBuilder*) clone;

- (ContentBankInfo*) build;
- (ContentBankInfo*) buildPartial;

- (ContentBankInfoBuilder*) mergeFrom:(ContentBankInfo*) other;
- (ContentBankInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ContentBankInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasBankName;
- (NSString*) bankName;
- (ContentBankInfoBuilder*) setBankName:(NSString*) value;
- (ContentBankInfoBuilder*) clearBankName;

- (BOOL) hasBankAccId;
- (NSString*) bankAccId;
- (ContentBankInfoBuilder*) setBankAccId:(NSString*) value;
- (ContentBankInfoBuilder*) clearBankAccId;
@end

#define WithdrawLimit_bankCard @"bankCard"
#define WithdrawLimit_bankId @"bankId"
#define WithdrawLimit_displayName @"displayName"
#define WithdrawLimit_amtLimit @"amtLimit"
@interface ContentWithdrawLimit : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasBankCard_:1;
  BOOL hasBankId_:1;
  BOOL hasDisplayName_:1;
  BOOL hasAmtLimit_:1;
  NSString* bankCard;
  NSString* bankId;
  NSString* displayName;
  NSString* amtLimit;
}
- (BOOL) hasBankCard;
- (BOOL) hasBankId;
- (BOOL) hasDisplayName;
- (BOOL) hasAmtLimit;
@property (readonly, strong) NSString* bankCard;
@property (readonly, strong) NSString* bankId;
@property (readonly, strong) NSString* displayName;
@property (readonly, strong) NSString* amtLimit;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ContentWithdrawLimitBuilder*) builder;
+ (ContentWithdrawLimitBuilder*) builder;
+ (ContentWithdrawLimitBuilder*) builderWithPrototype:(ContentWithdrawLimit*) prototype;
- (ContentWithdrawLimitBuilder*) toBuilder;

+ (ContentWithdrawLimit*) parseFromData:(NSData*) data;
+ (ContentWithdrawLimit*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentWithdrawLimit*) parseFromInputStream:(NSInputStream*) input;
+ (ContentWithdrawLimit*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentWithdrawLimit*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ContentWithdrawLimit*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ContentWithdrawLimitBuilder : PBGeneratedMessageBuilder {
@private
  ContentWithdrawLimit* resultWithdrawLimit;
}

- (ContentWithdrawLimit*) defaultInstance;

- (ContentWithdrawLimitBuilder*) clear;
- (ContentWithdrawLimitBuilder*) clone;

- (ContentWithdrawLimit*) build;
- (ContentWithdrawLimit*) buildPartial;

- (ContentWithdrawLimitBuilder*) mergeFrom:(ContentWithdrawLimit*) other;
- (ContentWithdrawLimitBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ContentWithdrawLimitBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasBankCard;
- (NSString*) bankCard;
- (ContentWithdrawLimitBuilder*) setBankCard:(NSString*) value;
- (ContentWithdrawLimitBuilder*) clearBankCard;

- (BOOL) hasBankId;
- (NSString*) bankId;
- (ContentWithdrawLimitBuilder*) setBankId:(NSString*) value;
- (ContentWithdrawLimitBuilder*) clearBankId;

- (BOOL) hasDisplayName;
- (NSString*) displayName;
- (ContentWithdrawLimitBuilder*) setDisplayName:(NSString*) value;
- (ContentWithdrawLimitBuilder*) clearDisplayName;

- (BOOL) hasAmtLimit;
- (NSString*) amtLimit;
- (ContentWithdrawLimitBuilder*) setAmtLimit:(NSString*) value;
- (ContentWithdrawLimitBuilder*) clearAmtLimit;
@end

#define EquityInfo_equitySource @"equitySource"
#define EquityInfo_equityType @"equityType"
#define EquityInfo_equityAmount @"equityAmount"
#define EquityInfo_spnsrId @"spnsrId"
#define EquityInfo_id @"id"
#define EquityInfo_desc @"desc"
#define EquityInfo_addnInfo @"addnInfo"
@interface ContentEquityInfo : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasEquitySource_:1;
  BOOL hasEquityType_:1;
  BOOL hasEquityAmount_:1;
  BOOL hasSpnsrId_:1;
  BOOL hasId_:1;
  BOOL hasDesc_:1;
  BOOL hasAddnInfo_:1;
  NSString* equitySource;
  NSString* equityType;
  NSString* equityAmount;
  NSString* spnsrId;
  NSString* id;
  NSString* desc;
  NSString* addnInfo;
}
- (BOOL) hasEquitySource;
- (BOOL) hasEquityType;
- (BOOL) hasEquityAmount;
- (BOOL) hasSpnsrId;
- (BOOL) hasId;
- (BOOL) hasDesc;
- (BOOL) hasAddnInfo;
@property (readonly, strong) NSString* equitySource;
@property (readonly, strong) NSString* equityType;
@property (readonly, strong) NSString* equityAmount;
@property (readonly, strong) NSString* spnsrId;
@property (readonly, strong) NSString* id;
@property (readonly, strong) NSString* desc;
@property (readonly, strong) NSString* addnInfo;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ContentEquityInfoBuilder*) builder;
+ (ContentEquityInfoBuilder*) builder;
+ (ContentEquityInfoBuilder*) builderWithPrototype:(ContentEquityInfo*) prototype;
- (ContentEquityInfoBuilder*) toBuilder;

+ (ContentEquityInfo*) parseFromData:(NSData*) data;
+ (ContentEquityInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentEquityInfo*) parseFromInputStream:(NSInputStream*) input;
+ (ContentEquityInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentEquityInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ContentEquityInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ContentEquityInfoBuilder : PBGeneratedMessageBuilder {
@private
  ContentEquityInfo* resultEquityInfo;
}

- (ContentEquityInfo*) defaultInstance;

- (ContentEquityInfoBuilder*) clear;
- (ContentEquityInfoBuilder*) clone;

- (ContentEquityInfo*) build;
- (ContentEquityInfo*) buildPartial;

- (ContentEquityInfoBuilder*) mergeFrom:(ContentEquityInfo*) other;
- (ContentEquityInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ContentEquityInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasEquitySource;
- (NSString*) equitySource;
- (ContentEquityInfoBuilder*) setEquitySource:(NSString*) value;
- (ContentEquityInfoBuilder*) clearEquitySource;

- (BOOL) hasEquityType;
- (NSString*) equityType;
- (ContentEquityInfoBuilder*) setEquityType:(NSString*) value;
- (ContentEquityInfoBuilder*) clearEquityType;

- (BOOL) hasEquityAmount;
- (NSString*) equityAmount;
- (ContentEquityInfoBuilder*) setEquityAmount:(NSString*) value;
- (ContentEquityInfoBuilder*) clearEquityAmount;

- (BOOL) hasSpnsrId;
- (NSString*) spnsrId;
- (ContentEquityInfoBuilder*) setSpnsrId:(NSString*) value;
- (ContentEquityInfoBuilder*) clearSpnsrId;

- (BOOL) hasId;
- (NSString*) id;
- (ContentEquityInfoBuilder*) setId:(NSString*) value;
- (ContentEquityInfoBuilder*) clearId;

- (BOOL) hasDesc;
- (NSString*) desc;
- (ContentEquityInfoBuilder*) setDesc:(NSString*) value;
- (ContentEquityInfoBuilder*) clearDesc;

- (BOOL) hasAddnInfo;
- (NSString*) addnInfo;
- (ContentEquityInfoBuilder*) setAddnInfo:(NSString*) value;
- (ContentEquityInfoBuilder*) clearAddnInfo;
@end

#define Activity_activeId @"activeId"
#define Activity_shortMsg @"shortMsg"
#define Activity_message @"message"
#define Activity_payType @"payType"
@interface ContentActivity : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasActiveId_:1;
  BOOL hasShortMsg_:1;
  BOOL hasMessage_:1;
  NSString* activeId;
  NSString* shortMsg;
  NSString* message;
  NSMutableArray * payTypeArray;
}
- (BOOL) hasActiveId;
- (BOOL) hasShortMsg;
- (BOOL) hasMessage;
@property (readonly, strong) NSString* activeId;
@property (readonly, strong) NSString* shortMsg;
@property (readonly, strong) NSString* message;
@property (readonly, strong) NSArray * payType;
- (NSString*)payTypeAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ContentActivityBuilder*) builder;
+ (ContentActivityBuilder*) builder;
+ (ContentActivityBuilder*) builderWithPrototype:(ContentActivity*) prototype;
- (ContentActivityBuilder*) toBuilder;

+ (ContentActivity*) parseFromData:(NSData*) data;
+ (ContentActivity*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentActivity*) parseFromInputStream:(NSInputStream*) input;
+ (ContentActivity*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentActivity*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ContentActivity*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ContentActivityBuilder : PBGeneratedMessageBuilder {
@private
  ContentActivity* resultActivity;
}

- (ContentActivity*) defaultInstance;

- (ContentActivityBuilder*) clear;
- (ContentActivityBuilder*) clone;

- (ContentActivity*) build;
- (ContentActivity*) buildPartial;

- (ContentActivityBuilder*) mergeFrom:(ContentActivity*) other;
- (ContentActivityBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ContentActivityBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasActiveId;
- (NSString*) activeId;
- (ContentActivityBuilder*) setActiveId:(NSString*) value;
- (ContentActivityBuilder*) clearActiveId;

- (BOOL) hasShortMsg;
- (NSString*) shortMsg;
- (ContentActivityBuilder*) setShortMsg:(NSString*) value;
- (ContentActivityBuilder*) clearShortMsg;

- (BOOL) hasMessage;
- (NSString*) message;
- (ContentActivityBuilder*) setMessage:(NSString*) value;
- (ContentActivityBuilder*) clearMessage;

- (NSMutableArray *)payType;
- (NSString*)payTypeAtIndex:(NSUInteger)index;
- (ContentActivityBuilder *)addPayType:(NSString*)value;
- (ContentActivityBuilder *)setPayTypeArray:(NSArray *)array;
- (ContentActivityBuilder *)clearPayType;
@end

#define ExtMap_key @"key"
#define ExtMap_value @"value"
@interface ContentExtMap : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasKey_:1;
  BOOL hasValue_:1;
  NSString* key;
  NSString* value;
}
- (BOOL) hasKey;
- (BOOL) hasValue;
@property (readonly, strong) NSString* key;
@property (readonly, strong) NSString* value;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ContentExtMapBuilder*) builder;
+ (ContentExtMapBuilder*) builder;
+ (ContentExtMapBuilder*) builderWithPrototype:(ContentExtMap*) prototype;
- (ContentExtMapBuilder*) toBuilder;

+ (ContentExtMap*) parseFromData:(NSData*) data;
+ (ContentExtMap*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentExtMap*) parseFromInputStream:(NSInputStream*) input;
+ (ContentExtMap*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentExtMap*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ContentExtMap*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ContentExtMapBuilder : PBGeneratedMessageBuilder {
@private
  ContentExtMap* resultExtMap;
}

- (ContentExtMap*) defaultInstance;

- (ContentExtMapBuilder*) clear;
- (ContentExtMapBuilder*) clone;

- (ContentExtMap*) build;
- (ContentExtMap*) buildPartial;

- (ContentExtMapBuilder*) mergeFrom:(ContentExtMap*) other;
- (ContentExtMapBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ContentExtMapBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasKey;
- (NSString*) key;
- (ContentExtMapBuilder*) setKey:(NSString*) value;
- (ContentExtMapBuilder*) clearKey;

- (BOOL) hasValue;
- (NSString*) value;
- (ContentExtMapBuilder*) setValue:(NSString*) value;
- (ContentExtMapBuilder*) clearValue;
@end

#define Interest_discountAmount @"discountAmount"
#define Interest_expDate @"expDate"
#define Interest_instruction @"instruction"
#define Interest_name @"name"
#define Interest_oid @"oid"
#define Interest_payAmount @"payAmount"
#define Interest_voucherType @"voucherType"
#define Interest_status @"status"
#define Interest_supportedMethodIdList @"supportedMethodIdList"
#define Interest_interestInfo @"interestInfo"
#define Interest_sourceFrom @"sourceFrom"
@interface ContentInterest : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasDiscountAmount_:1;
  BOOL hasExpDate_:1;
  BOOL hasInstruction_:1;
  BOOL hasName_:1;
  BOOL hasOid_:1;
  BOOL hasPayAmount_:1;
  BOOL hasVoucherType_:1;
  BOOL hasStatus_:1;
  BOOL hasInterestInfo_:1;
  BOOL hasSourceFrom_:1;
  NSString* discountAmount;
  NSString* expDate;
  NSString* instruction;
  NSString* name;
  NSString* oid;
  NSString* payAmount;
  NSString* voucherType;
  NSString* status;
  NSString* interestInfo;
  NSString* sourceFrom;
  NSMutableArray * supportedMethodIdListArray;
}
- (BOOL) hasDiscountAmount;
- (BOOL) hasExpDate;
- (BOOL) hasInstruction;
- (BOOL) hasName;
- (BOOL) hasOid;
- (BOOL) hasPayAmount;
- (BOOL) hasVoucherType;
- (BOOL) hasStatus;
- (BOOL) hasInterestInfo;
- (BOOL) hasSourceFrom;
@property (readonly, strong) NSString* discountAmount;
@property (readonly, strong) NSString* expDate;
@property (readonly, strong) NSString* instruction;
@property (readonly, strong) NSString* name;
@property (readonly, strong) NSString* oid;
@property (readonly, strong) NSString* payAmount;
@property (readonly, strong) NSString* voucherType;
@property (readonly, strong) NSString* status;
@property (readonly, strong) NSArray * supportedMethodIdList;
@property (readonly, strong) NSString* interestInfo;
@property (readonly, strong) NSString* sourceFrom;
- (NSString*)supportedMethodIdListAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ContentInterestBuilder*) builder;
+ (ContentInterestBuilder*) builder;
+ (ContentInterestBuilder*) builderWithPrototype:(ContentInterest*) prototype;
- (ContentInterestBuilder*) toBuilder;

+ (ContentInterest*) parseFromData:(NSData*) data;
+ (ContentInterest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentInterest*) parseFromInputStream:(NSInputStream*) input;
+ (ContentInterest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentInterest*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ContentInterest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ContentInterestBuilder : PBGeneratedMessageBuilder {
@private
  ContentInterest* resultInterest;
}

- (ContentInterest*) defaultInstance;

- (ContentInterestBuilder*) clear;
- (ContentInterestBuilder*) clone;

- (ContentInterest*) build;
- (ContentInterest*) buildPartial;

- (ContentInterestBuilder*) mergeFrom:(ContentInterest*) other;
- (ContentInterestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ContentInterestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasDiscountAmount;
- (NSString*) discountAmount;
- (ContentInterestBuilder*) setDiscountAmount:(NSString*) value;
- (ContentInterestBuilder*) clearDiscountAmount;

- (BOOL) hasExpDate;
- (NSString*) expDate;
- (ContentInterestBuilder*) setExpDate:(NSString*) value;
- (ContentInterestBuilder*) clearExpDate;

- (BOOL) hasInstruction;
- (NSString*) instruction;
- (ContentInterestBuilder*) setInstruction:(NSString*) value;
- (ContentInterestBuilder*) clearInstruction;

- (BOOL) hasName;
- (NSString*) name;
- (ContentInterestBuilder*) setName:(NSString*) value;
- (ContentInterestBuilder*) clearName;

- (BOOL) hasOid;
- (NSString*) oid;
- (ContentInterestBuilder*) setOid:(NSString*) value;
- (ContentInterestBuilder*) clearOid;

- (BOOL) hasPayAmount;
- (NSString*) payAmount;
- (ContentInterestBuilder*) setPayAmount:(NSString*) value;
- (ContentInterestBuilder*) clearPayAmount;

- (BOOL) hasVoucherType;
- (NSString*) voucherType;
- (ContentInterestBuilder*) setVoucherType:(NSString*) value;
- (ContentInterestBuilder*) clearVoucherType;

- (BOOL) hasStatus;
- (NSString*) status;
- (ContentInterestBuilder*) setStatus:(NSString*) value;
- (ContentInterestBuilder*) clearStatus;

- (NSMutableArray *)supportedMethodIdList;
- (NSString*)supportedMethodIdListAtIndex:(NSUInteger)index;
- (ContentInterestBuilder *)addSupportedMethodIdList:(NSString*)value;
- (ContentInterestBuilder *)setSupportedMethodIdListArray:(NSArray *)array;
- (ContentInterestBuilder *)clearSupportedMethodIdList;

- (BOOL) hasInterestInfo;
- (NSString*) interestInfo;
- (ContentInterestBuilder*) setInterestInfo:(NSString*) value;
- (ContentInterestBuilder*) clearInterestInfo;

- (BOOL) hasSourceFrom;
- (NSString*) sourceFrom;
- (ContentInterestBuilder*) setSourceFrom:(NSString*) value;
- (ContentInterestBuilder*) clearSourceFrom;
@end

#define SeedData_displayName @"displayName"
#define SeedData_fpeKey @"fpeKey"
#define SeedData_rate @"rate"
#define SeedData_seed @"seed"
#define SeedData_sessionKey @"sessionKey"
#define SeedData_verifyPin @"verifyPin"
#define SeedData_seedValidTime @"seedValidTime"
#define SeedData_tweak @"tweak"
@interface ContentSeedData : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasDisplayName_:1;
  BOOL hasFpeKey_:1;
  BOOL hasRate_:1;
  BOOL hasSeed_:1;
  BOOL hasSessionKey_:1;
  BOOL hasVerifyPin_:1;
  BOOL hasSeedValidTime_:1;
  BOOL hasTweak_:1;
  NSString* displayName;
  NSString* fpeKey;
  NSString* rate;
  NSString* seed;
  NSString* sessionKey;
  NSString* verifyPin;
  NSString* seedValidTime;
  NSString* tweak;
}
- (BOOL) hasDisplayName;
- (BOOL) hasFpeKey;
- (BOOL) hasRate;
- (BOOL) hasSeed;
- (BOOL) hasSessionKey;
- (BOOL) hasVerifyPin;
- (BOOL) hasSeedValidTime;
- (BOOL) hasTweak;
@property (readonly, strong) NSString* displayName;
@property (readonly, strong) NSString* fpeKey;
@property (readonly, strong) NSString* rate;
@property (readonly, strong) NSString* seed;
@property (readonly, strong) NSString* sessionKey;
@property (readonly, strong) NSString* verifyPin;
@property (readonly, strong) NSString* seedValidTime;
@property (readonly, strong) NSString* tweak;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ContentSeedDataBuilder*) builder;
+ (ContentSeedDataBuilder*) builder;
+ (ContentSeedDataBuilder*) builderWithPrototype:(ContentSeedData*) prototype;
- (ContentSeedDataBuilder*) toBuilder;

+ (ContentSeedData*) parseFromData:(NSData*) data;
+ (ContentSeedData*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentSeedData*) parseFromInputStream:(NSInputStream*) input;
+ (ContentSeedData*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentSeedData*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ContentSeedData*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ContentSeedDataBuilder : PBGeneratedMessageBuilder {
@private
  ContentSeedData* resultSeedData;
}

- (ContentSeedData*) defaultInstance;

- (ContentSeedDataBuilder*) clear;
- (ContentSeedDataBuilder*) clone;

- (ContentSeedData*) build;
- (ContentSeedData*) buildPartial;

- (ContentSeedDataBuilder*) mergeFrom:(ContentSeedData*) other;
- (ContentSeedDataBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ContentSeedDataBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasDisplayName;
- (NSString*) displayName;
- (ContentSeedDataBuilder*) setDisplayName:(NSString*) value;
- (ContentSeedDataBuilder*) clearDisplayName;

- (BOOL) hasFpeKey;
- (NSString*) fpeKey;
- (ContentSeedDataBuilder*) setFpeKey:(NSString*) value;
- (ContentSeedDataBuilder*) clearFpeKey;

- (BOOL) hasRate;
- (NSString*) rate;
- (ContentSeedDataBuilder*) setRate:(NSString*) value;
- (ContentSeedDataBuilder*) clearRate;

- (BOOL) hasSeed;
- (NSString*) seed;
- (ContentSeedDataBuilder*) setSeed:(NSString*) value;
- (ContentSeedDataBuilder*) clearSeed;

- (BOOL) hasSessionKey;
- (NSString*) sessionKey;
- (ContentSeedDataBuilder*) setSessionKey:(NSString*) value;
- (ContentSeedDataBuilder*) clearSessionKey;

- (BOOL) hasVerifyPin;
- (NSString*) verifyPin;
- (ContentSeedDataBuilder*) setVerifyPin:(NSString*) value;
- (ContentSeedDataBuilder*) clearVerifyPin;

- (BOOL) hasSeedValidTime;
- (NSString*) seedValidTime;
- (ContentSeedDataBuilder*) setSeedValidTime:(NSString*) value;
- (ContentSeedDataBuilder*) clearSeedValidTime;

- (BOOL) hasTweak;
- (NSString*) tweak;
- (ContentSeedDataBuilder*) setTweak:(NSString*) value;
- (ContentSeedDataBuilder*) clearTweak;
@end

@interface ContentBuilder : PBGeneratedMessageBuilder {
@private
  Content* resultContent;
}

- (Content*) defaultInstance;

- (ContentBuilder*) clear;
- (ContentBuilder*) clone;

- (Content*) build;
- (Content*) buildPartial;

- (ContentBuilder*) mergeFrom:(Content*) other;
- (ContentBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ContentBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasPassword;
- (NSString*) password;
- (ContentBuilder*) setPassword:(NSString*) value;
- (ContentBuilder*) clearPassword;

- (BOOL) hasBusinessType;
- (NSString*) businessType;
- (ContentBuilder*) setBusinessType:(NSString*) value;
- (ContentBuilder*) clearBusinessType;

- (BOOL) hasTermId;
- (NSString*) termId;
- (ContentBuilder*) setTermId:(NSString*) value;
- (ContentBuilder*) clearTermId;

- (BOOL) hasPayPassword;
- (NSString*) payPassword;
- (ContentBuilder*) setPayPassword:(NSString*) value;
- (ContentBuilder*) clearPayPassword;

- (BOOL) hasBankId;
- (NSString*) bankId;
- (ContentBuilder*) setBankId:(NSString*) value;
- (ContentBuilder*) clearBankId;

- (BOOL) hasBankName;
- (NSString*) bankName;
- (ContentBuilder*) setBankName:(NSString*) value;
- (ContentBuilder*) clearBankName;

- (BOOL) hasOrderId;
- (NSString*) orderId;
- (ContentBuilder*) setOrderId:(NSString*) value;
- (ContentBuilder*) clearOrderId;

- (BOOL) hasAmt;
- (NSString*) amt;
- (ContentBuilder*) setAmt:(NSString*) value;
- (ContentBuilder*) clearAmt;

- (BOOL) hasToken;
- (NSString*) token;
- (ContentBuilder*) setToken:(NSString*) value;
- (ContentBuilder*) clearToken;

- (BOOL) hasValidateCode;
- (NSString*) validateCode;
- (ContentBuilder*) setValidateCode:(NSString*) value;
- (ContentBuilder*) clearValidateCode;

- (BOOL) hasTermTxnTime;
- (NSString*) termTxnTime;
- (ContentBuilder*) setTermTxnTime:(NSString*) value;
- (ContentBuilder*) clearTermTxnTime;

- (BOOL) hasIdType;
- (NSString*) idType;
- (ContentBuilder*) setIdType:(NSString*) value;
- (ContentBuilder*) clearIdType;

- (BOOL) hasHolderName;
- (NSString*) holderName;
- (ContentBuilder*) setHolderName:(NSString*) value;
- (ContentBuilder*) clearHolderName;

- (BOOL) hasExpireDate;
- (NSString*) expireDate;
- (ContentBuilder*) setExpireDate:(NSString*) value;
- (ContentBuilder*) clearExpireDate;

- (BOOL) hasVaType;
- (NSString*) vaType;
- (ContentBuilder*) setVaType:(NSString*) value;
- (ContentBuilder*) clearVaType;

- (BOOL) hasPan;
- (NSString*) pan;
- (ContentBuilder*) setPan:(NSString*) value;
- (ContentBuilder*) clearPan;

- (BOOL) hasShortPan;
- (NSString*) shortPan;
- (ContentBuilder*) setShortPan:(NSString*) value;
- (ContentBuilder*) clearShortPan;

- (BOOL) hasPhoneNo;
- (NSString*) phoneNo;
- (ContentBuilder*) setPhoneNo:(NSString*) value;
- (ContentBuilder*) clearPhoneNo;

- (BOOL) hasAuthDebitBankNames;
- (NSString*) authDebitBankNames;
- (ContentBuilder*) setAuthDebitBankNames:(NSString*) value;
- (ContentBuilder*) clearAuthDebitBankNames;

- (BOOL) hasCardId;
- (NSString*) cardId;
- (ContentBuilder*) setCardId:(NSString*) value;
- (ContentBuilder*) clearCardId;

- (BOOL) hasTxnType;
- (NSString*) txnType;
- (ContentBuilder*) setTxnType:(NSString*) value;
- (ContentBuilder*) clearTxnType;

- (BOOL) hasProductCode;
- (NSString*) productCode;
- (ContentBuilder*) setProductCode:(NSString*) value;
- (ContentBuilder*) clearProductCode;

- (BOOL) hasId;
- (NSString*) id;
- (ContentBuilder*) setId:(NSString*) value;
- (ContentBuilder*) clearId;

- (BOOL) hasName;
- (NSString*) name;
- (ContentBuilder*) setName:(NSString*) value;
- (ContentBuilder*) clearName;

- (BOOL) hasProvince;
- (NSString*) province;
- (ContentBuilder*) setProvince:(NSString*) value;
- (ContentBuilder*) clearProvince;

- (BOOL) hasCity;
- (NSString*) city;
- (ContentBuilder*) setCity:(NSString*) value;
- (ContentBuilder*) clearCity;

- (BOOL) hasPageNo;
- (NSString*) pageNo;
- (ContentBuilder*) setPageNo:(NSString*) value;
- (ContentBuilder*) clearPageNo;

- (BOOL) hasStartDate;
- (NSString*) startDate;
- (ContentBuilder*) setStartDate:(NSString*) value;
- (ContentBuilder*) clearStartDate;

- (BOOL) hasEndDate;
- (NSString*) endDate;
- (ContentBuilder*) setEndDate:(NSString*) value;
- (ContentBuilder*) clearEndDate;

- (BOOL) hasStatus;
- (NSString*) status;
- (ContentBuilder*) setStatus:(NSString*) value;
- (ContentBuilder*) clearStatus;

- (BOOL) hasOptionType;
- (NSString*) optionType;
- (ContentBuilder*) setOptionType:(NSString*) value;
- (ContentBuilder*) clearOptionType;

- (BOOL) hasSecurityQuestion;
- (NSString*) securityQuestion;
- (ContentBuilder*) setSecurityQuestion:(NSString*) value;
- (ContentBuilder*) clearSecurityQuestion;

- (BOOL) hasSecurityAnswer;
- (NSString*) securityAnswer;
- (ContentBuilder*) setSecurityAnswer:(NSString*) value;
- (ContentBuilder*) clearSecurityAnswer;

- (BOOL) hasCardType;
- (NSString*) cardType;
- (ContentBuilder*) setCardType:(NSString*) value;
- (ContentBuilder*) clearCardType;

- (BOOL) hasEmail;
- (NSString*) email;
- (ContentBuilder*) setEmail:(NSString*) value;
- (ContentBuilder*) clearEmail;

- (BOOL) hasUniQrCode;
- (NSString*) uniQrCode;
- (ContentBuilder*) setUniQrCode:(NSString*) value;
- (ContentBuilder*) clearUniQrCode;

- (BOOL) hasProductType;
- (NSString*) productType;
- (ContentBuilder*) setProductType:(NSString*) value;
- (ContentBuilder*) clearProductType;

- (BOOL) hasAddress;
- (NSString*) address;
- (ContentBuilder*) setAddress:(NSString*) value;
- (ContentBuilder*) clearAddress;

- (BOOL) hasResendFlag;
- (NSString*) resendFlag;
- (ContentBuilder*) setResendFlag:(NSString*) value;
- (ContentBuilder*) clearResendFlag;

- (BOOL) hasPasswordType;
- (NSString*) passwordType;
- (ContentBuilder*) setPasswordType:(NSString*) value;
- (ContentBuilder*) clearPasswordType;

- (BOOL) hasCvv2;
- (NSString*) cvv2;
- (ContentBuilder*) setCvv2:(NSString*) value;
- (ContentBuilder*) clearCvv2;

- (BOOL) hasRefreshToken;
- (NSString*) refreshToken;
- (ContentBuilder*) setRefreshToken:(NSString*) value;
- (ContentBuilder*) clearRefreshToken;

- (BOOL) hasIdTxnCtrl;
- (NSString*) idTxnCtrl;
- (ContentBuilder*) setIdTxnCtrl:(NSString*) value;
- (ContentBuilder*) clearIdTxnCtrl;

- (BOOL) hasExtData1;
- (NSString*) extData1;
- (ContentBuilder*) setExtData1:(NSString*) value;
- (ContentBuilder*) clearExtData1;

- (BOOL) hasAuthBankIds;
- (NSString*) authBankIds;
- (ContentBuilder*) setAuthBankIds:(NSString*) value;
- (ContentBuilder*) clearAuthBankIds;

- (BOOL) hasAuthDebitBankIds;
- (NSString*) authDebitBankIds;
- (ContentBuilder*) setAuthDebitBankIds:(NSString*) value;
- (ContentBuilder*) clearAuthDebitBankIds;

- (BOOL) hasAuthBankNames;
- (NSString*) authBankNames;
- (ContentBuilder*) setAuthBankNames:(NSString*) value;
- (ContentBuilder*) clearAuthBankNames;

- (BOOL) hasBranchBank;
- (NSString*) branchBank;
- (ContentBuilder*) setBranchBank:(NSString*) value;
- (ContentBuilder*) clearBranchBank;

- (BOOL) hasTxnFlag;
- (NSString*) txnFlag;
- (ContentBuilder*) setTxnFlag:(NSString*) value;
- (ContentBuilder*) clearTxnFlag;

- (BOOL) hasAuthCode;
- (NSString*) authCode;
- (ContentBuilder*) setAuthCode:(NSString*) value;
- (ContentBuilder*) clearAuthCode;

- (BOOL) hasTxnTime;
- (NSString*) txnTime;
- (ContentBuilder*) setTxnTime:(NSString*) value;
- (ContentBuilder*) clearTxnTime;

- (BOOL) hasSignFlag;
- (NSString*) signFlag;
- (ContentBuilder*) setSignFlag:(NSString*) value;
- (ContentBuilder*) clearSignFlag;

- (BOOL) hasProductName;
- (NSString*) productName;
- (ContentBuilder*) setProductName:(NSString*) value;
- (ContentBuilder*) clearProductName;

- (BOOL) hasZoneType;
- (NSString*) zoneType;
- (ContentBuilder*) setZoneType:(NSString*) value;
- (ContentBuilder*) clearZoneType;

- (BOOL) hasPin;
- (NSString*) pin;
- (ContentBuilder*) setPin:(NSString*) value;
- (ContentBuilder*) clearPin;

- (BOOL) hasOrigOrderId;
- (NSString*) origOrderId;
- (ContentBuilder*) setOrigOrderId:(NSString*) value;
- (ContentBuilder*) clearOrigOrderId;

- (BOOL) hasCount;
- (NSString*) count;
- (ContentBuilder*) setCount:(NSString*) value;
- (ContentBuilder*) clearCount;

- (BOOL) hasRemark;
- (NSString*) remark;
- (ContentBuilder*) setRemark:(NSString*) value;
- (ContentBuilder*) clearRemark;

- (BOOL) hasMemAcctcodeName;
- (NSString*) memAcctcodeName;
- (ContentBuilder*) setMemAcctcodeName:(NSString*) value;
- (ContentBuilder*) clearMemAcctcodeName;

- (BOOL) hasMemAcctcodeBalance;
- (NSString*) memAcctcodeBalance;
- (ContentBuilder*) setMemAcctcodeBalance:(NSString*) value;
- (ContentBuilder*) clearMemAcctcodeBalance;

- (BOOL) hasExistFlg;
- (NSString*) existFlg;
- (ContentBuilder*) setExistFlg:(NSString*) value;
- (ContentBuilder*) clearExistFlg;

- (BOOL) hasPayeeNotes;
- (NSString*) payeeNotes;
- (ContentBuilder*) setPayeeNotes:(NSString*) value;
- (ContentBuilder*) clearPayeeNotes;

- (BOOL) hasRealNameFlg;
- (NSString*) realNameFlg;
- (ContentBuilder*) setRealNameFlg:(NSString*) value;
- (ContentBuilder*) clearRealNameFlg;

- (BOOL) hasBindPhoneFlg;
- (NSString*) bindPhoneFlg;
- (ContentBuilder*) setBindPhoneFlg:(NSString*) value;
- (ContentBuilder*) clearBindPhoneFlg;

- (BOOL) hasFirstLoginFlg;
- (NSString*) firstLoginFlg;
- (ContentBuilder*) setFirstLoginFlg:(NSString*) value;
- (ContentBuilder*) clearFirstLoginFlg;

- (BOOL) hasTotalAmt;
- (NSString*) totalAmt;
- (ContentBuilder*) setTotalAmt:(NSString*) value;
- (ContentBuilder*) clearTotalAmt;

- (BOOL) hasTotalCount;
- (NSString*) totalCount;
- (ContentBuilder*) setTotalCount:(NSString*) value;
- (ContentBuilder*) clearTotalCount;

- (BOOL) hasOrderType;
- (NSString*) orderType;
- (ContentBuilder*) setOrderType:(NSString*) value;
- (ContentBuilder*) clearOrderType;

- (BOOL) hasCertId;
- (NSString*) certId;
- (ContentBuilder*) setCertId:(NSString*) value;
- (ContentBuilder*) clearCertId;

- (BOOL) hasRecommendId;
- (NSString*) recommendId;
- (ContentBuilder*) setRecommendId:(NSString*) value;
- (ContentBuilder*) clearRecommendId;

- (BOOL) hasOrderCode;
- (NSString*) orderCode;
- (ContentBuilder*) setOrderCode:(NSString*) value;
- (ContentBuilder*) clearOrderCode;

- (BOOL) hasMax;
- (NSString*) max;
- (ContentBuilder*) setMax:(NSString*) value;
- (ContentBuilder*) clearMax;

- (BOOL) hasStatusSet;
- (NSString*) statusSet;
- (ContentBuilder*) setStatusSet:(NSString*) value;
- (ContentBuilder*) clearStatusSet;

- (BOOL) hasOutTradeNo;
- (NSString*) outTradeNo;
- (ContentBuilder*) setOutTradeNo:(NSString*) value;
- (ContentBuilder*) clearOutTradeNo;

- (BOOL) hasAppInfo;
- (ContentAppInfo*) appInfo;
- (ContentBuilder*) setAppInfo:(ContentAppInfo*) value;
- (ContentBuilder*) setAppInfoBuilder:(ContentAppInfoBuilder*) builderForValue;
- (ContentBuilder*) mergeAppInfo:(ContentAppInfo*) value;
- (ContentBuilder*) clearAppInfo;

- (NSMutableArray *)bank;
- (ContentBank*)bankAtIndex:(NSUInteger)index;
- (ContentBuilder *)addBank:(ContentBank*)value;
- (ContentBuilder *)setBankArray:(NSArray *)array;
- (ContentBuilder *)clearBank;

- (BOOL) hasMember;
- (ContentMember*) member;
- (ContentBuilder*) setMember:(ContentMember*) value;
- (ContentBuilder*) setMemberBuilder:(ContentMemberBuilder*) builderForValue;
- (ContentBuilder*) mergeMember:(ContentMember*) value;
- (ContentBuilder*) clearMember;

- (NSMutableArray *)memberIdentity;
- (ContentMemberIdentity*)memberIdentityAtIndex:(NSUInteger)index;
- (ContentBuilder *)addMemberIdentity:(ContentMemberIdentity*)value;
- (ContentBuilder *)setMemberIdentityArray:(NSArray *)array;
- (ContentBuilder *)clearMemberIdentity;

- (NSMutableArray *)safeProblem;
- (NSString*)safeProblemAtIndex:(NSUInteger)index;
- (ContentBuilder *)addSafeProblem:(NSString*)value;
- (ContentBuilder *)setSafeProblemArray:(NSArray *)array;
- (ContentBuilder *)clearSafeProblem;

- (NSMutableArray *)queryWalletBill99BillResponse;
- (ContentQueryWalletBill99BillResponse*)queryWalletBill99BillResponseAtIndex:(NSUInteger)index;
- (ContentBuilder *)addQueryWalletBill99BillResponse:(ContentQueryWalletBill99BillResponse*)value;
- (ContentBuilder *)setQueryWalletBill99BillResponseArray:(NSArray *)array;
- (ContentBuilder *)clearQueryWalletBill99BillResponse;

- (NSMutableArray *)atpProd;
- (ContentAtpProd*)atpProdAtIndex:(NSUInteger)index;
- (ContentBuilder *)addAtpProd:(ContentAtpProd*)value;
- (ContentBuilder *)setAtpProdArray:(NSArray *)array;
- (ContentBuilder *)clearAtpProd;

- (BOOL) hasTradeId;
- (NSString*) tradeId;
- (ContentBuilder*) setTradeId:(NSString*) value;
- (ContentBuilder*) clearTradeId;

- (BOOL) hasEndTime;
- (NSString*) endTime;
- (ContentBuilder*) setEndTime:(NSString*) value;
- (ContentBuilder*) clearEndTime;

- (NSMutableArray *)solidCard;
- (ContentSolidCard*)solidCardAtIndex:(NSUInteger)index;
- (ContentBuilder *)addSolidCard:(ContentSolidCard*)value;
- (ContentBuilder *)setSolidCardArray:(NSArray *)array;
- (ContentBuilder *)clearSolidCard;

- (BOOL) hasUserFlag;
- (NSString*) userFlag;
- (ContentBuilder*) setUserFlag:(NSString*) value;
- (ContentBuilder*) clearUserFlag;

- (BOOL) hasIdCardNo;
- (NSString*) idCardNo;
- (ContentBuilder*) setIdCardNo:(NSString*) value;
- (ContentBuilder*) clearIdCardNo;

- (BOOL) hasIdCardImg;
- (NSString*) idCardImg;
- (ContentBuilder*) setIdCardImg:(NSString*) value;
- (ContentBuilder*) clearIdCardImg;

- (BOOL) hasPhoto;
- (NSString*) photo;
- (ContentBuilder*) setPhoto:(NSString*) value;
- (ContentBuilder*) clearPhoto;

- (BOOL) hasIsDisplay;
- (NSString*) isDisplay;
- (ContentBuilder*) setIsDisplay:(NSString*) value;
- (ContentBuilder*) clearIsDisplay;

- (BOOL) hasShortPhones;
- (NSString*) shortPhones;
- (ContentBuilder*) setShortPhones:(NSString*) value;
- (ContentBuilder*) clearShortPhones;

- (BOOL) hasRipAmount;
- (NSString*) ripAmount;
- (ContentBuilder*) setRipAmount:(NSString*) value;
- (ContentBuilder*) clearRipAmount;

- (BOOL) hasMemberAuthDto;
- (ContentMemberAuthDto*) memberAuthDto;
- (ContentBuilder*) setMemberAuthDto:(ContentMemberAuthDto*) value;
- (ContentBuilder*) setMemberAuthDtoBuilder:(ContentMemberAuthDtoBuilder*) builderForValue;
- (ContentBuilder*) mergeMemberAuthDto:(ContentMemberAuthDto*) value;
- (ContentBuilder*) clearMemberAuthDto;

- (NSMutableArray *)bankLimitAmountDto;
- (ContentBankLimitAmountDto*)bankLimitAmountDtoAtIndex:(NSUInteger)index;
- (ContentBuilder *)addBankLimitAmountDto:(ContentBankLimitAmountDto*)value;
- (ContentBuilder *)setBankLimitAmountDtoArray:(NSArray *)array;
- (ContentBuilder *)clearBankLimitAmountDto;

- (BOOL) hasOccupation;
- (NSString*) occupation;
- (ContentBuilder*) setOccupation:(NSString*) value;
- (ContentBuilder*) clearOccupation;

- (BOOL) hasPartnerUserId;
- (NSString*) partnerUserId;
- (ContentBuilder*) setPartnerUserId:(NSString*) value;
- (ContentBuilder*) clearPartnerUserId;

- (BOOL) hasMemberBankAcctId;
- (NSString*) memberBankAcctId;
- (ContentBuilder*) setMemberBankAcctId:(NSString*) value;
- (ContentBuilder*) clearMemberBankAcctId;

- (BOOL) hasExpiresIn;
- (NSString*) expiresIn;
- (ContentBuilder*) setExpiresIn:(NSString*) value;
- (ContentBuilder*) clearExpiresIn;

- (BOOL) hasAppUpInfo;
- (ContentAppUpInfo*) appUpInfo;
- (ContentBuilder*) setAppUpInfo:(ContentAppUpInfo*) value;
- (ContentBuilder*) setAppUpInfoBuilder:(ContentAppUpInfoBuilder*) builderForValue;
- (ContentBuilder*) mergeAppUpInfo:(ContentAppUpInfo*) value;
- (ContentBuilder*) clearAppUpInfo;

- (BOOL) hasKeyboardSeq;
- (NSString*) keyboardSeq;
- (ContentBuilder*) setKeyboardSeq:(NSString*) value;
- (ContentBuilder*) clearKeyboardSeq;

- (BOOL) hasImgCode;
- (NSString*) imgCode;
- (ContentBuilder*) setImgCode:(NSString*) value;
- (ContentBuilder*) clearImgCode;

- (BOOL) hasImgToken;
- (NSString*) imgToken;
- (ContentBuilder*) setImgToken:(NSString*) value;
- (ContentBuilder*) clearImgToken;

- (BOOL) hasValidateToken;
- (NSString*) validateToken;
- (ContentBuilder*) setValidateToken:(NSString*) value;
- (ContentBuilder*) clearValidateToken;

- (BOOL) hasErrorType;
- (NSString*) errorType;
- (ContentBuilder*) setErrorType:(NSString*) value;
- (ContentBuilder*) clearErrorType;

- (BOOL) hasFlag;
- (NSString*) flag;
- (ContentBuilder*) setFlag:(NSString*) value;
- (ContentBuilder*) clearFlag;

- (NSMutableArray *)queryAllFinaprodResponse;
- (ContentQueryAllFinaprodResponse*)queryAllFinaprodResponseAtIndex:(NSUInteger)index;
- (ContentBuilder *)addQueryAllFinaprodResponse:(ContentQueryAllFinaprodResponse*)value;
- (ContentBuilder *)setQueryAllFinaprodResponseArray:(NSArray *)array;
- (ContentBuilder *)clearQueryAllFinaprodResponse;

- (BOOL) hasFinProdType;
- (NSString*) finProdType;
- (ContentBuilder*) setFinProdType:(NSString*) value;
- (ContentBuilder*) clearFinProdType;

- (BOOL) hasTradeType;
- (NSString*) tradeType;
- (ContentBuilder*) setTradeType:(NSString*) value;
- (ContentBuilder*) clearTradeType;

- (BOOL) hasProdStatus;
- (NSString*) prodStatus;
- (ContentBuilder*) setProdStatus:(NSString*) value;
- (ContentBuilder*) clearProdStatus;

- (BOOL) hasQueryOrders;
- (NSString*) queryOrders;
- (ContentBuilder*) setQueryOrders:(NSString*) value;
- (ContentBuilder*) clearQueryOrders;

- (BOOL) hasHorizonTo;
- (NSString*) horizonTo;
- (ContentBuilder*) setHorizonTo:(NSString*) value;
- (ContentBuilder*) clearHorizonTo;

- (BOOL) hasReturnRateExp;
- (NSString*) returnRateExp;
- (ContentBuilder*) setReturnRateExp:(NSString*) value;
- (ContentBuilder*) clearReturnRateExp;

- (NSMutableArray *)atpTradeOrder;
- (ContentAtpTradeOrder*)atpTradeOrderAtIndex:(NSUInteger)index;
- (ContentBuilder *)addAtpTradeOrder:(ContentAtpTradeOrder*)value;
- (ContentBuilder *)setAtpTradeOrderArray:(NSArray *)array;
- (ContentBuilder *)clearAtpTradeOrder;

- (BOOL) hasTotalFrozenAmt;
- (NSString*) totalFrozenAmt;
- (ContentBuilder*) setTotalFrozenAmt:(NSString*) value;
- (ContentBuilder*) clearTotalFrozenAmt;

- (BOOL) hasFee;
- (NSString*) fee;
- (ContentBuilder*) setFee:(NSString*) value;
- (ContentBuilder*) clearFee;

- (BOOL) hasTransFeeRate;
- (NSString*) transFeeRate;
- (ContentBuilder*) setTransFeeRate:(NSString*) value;
- (ContentBuilder*) clearTransFeeRate;

- (BOOL) hasBankNameId;
- (NSString*) bankNameId;
- (ContentBuilder*) setBankNameId:(NSString*) value;
- (ContentBuilder*) clearBankNameId;

- (BOOL) hasFinancialInfo;
- (ContentFinancialInfo*) financialInfo;
- (ContentBuilder*) setFinancialInfo:(ContentFinancialInfo*) value;
- (ContentBuilder*) setFinancialInfoBuilder:(ContentFinancialInfoBuilder*) builderForValue;
- (ContentBuilder*) mergeFinancialInfo:(ContentFinancialInfo*) value;
- (ContentBuilder*) clearFinancialInfo;

- (NSMutableArray *)prodAccountInfo;
- (ContentProdAccountInfo*)prodAccountInfoAtIndex:(NSUInteger)index;
- (ContentBuilder *)addProdAccountInfo:(ContentProdAccountInfo*)value;
- (ContentBuilder *)setProdAccountInfoArray:(NSArray *)array;
- (ContentBuilder *)clearProdAccountInfo;

- (BOOL) hasIsMainOrder;
- (NSString*) isMainOrder;
- (ContentBuilder*) setIsMainOrder:(NSString*) value;
- (ContentBuilder*) clearIsMainOrder;

- (BOOL) hasMerchantId;
- (NSString*) merchantId;
- (ContentBuilder*) setMerchantId:(NSString*) value;
- (ContentBuilder*) clearMerchantId;

- (BOOL) hasMerchantName;
- (NSString*) merchantName;
- (ContentBuilder*) setMerchantName:(NSString*) value;
- (ContentBuilder*) clearMerchantName;

- (BOOL) hasOsVersion;
- (NSString*) osVersion;
- (ContentBuilder*) setOsVersion:(NSString*) value;
- (ContentBuilder*) clearOsVersion;

- (BOOL) hasIsRoot;
- (NSString*) isRoot;
- (ContentBuilder*) setIsRoot:(NSString*) value;
- (ContentBuilder*) clearIsRoot;

- (BOOL) hasSize;
- (NSString*) size;
- (ContentBuilder*) setSize:(NSString*) value;
- (ContentBuilder*) clearSize;

- (BOOL) hasPhoneModel;
- (NSString*) phoneModel;
- (ContentBuilder*) setPhoneModel:(NSString*) value;
- (ContentBuilder*) clearPhoneModel;

- (BOOL) hasWifiName;
- (NSString*) wifiName;
- (ContentBuilder*) setWifiName:(NSString*) value;
- (ContentBuilder*) clearWifiName;

- (BOOL) hasWifiMac;
- (NSString*) wifiMac;
- (ContentBuilder*) setWifiMac:(NSString*) value;
- (ContentBuilder*) clearWifiMac;

- (BOOL) hasAppId;
- (NSString*) appId;
- (ContentBuilder*) setAppId:(NSString*) value;
- (ContentBuilder*) clearAppId;

- (BOOL) hasMerchantCode;
- (NSString*) merchantCode;
- (ContentBuilder*) setMerchantCode:(NSString*) value;
- (ContentBuilder*) clearMerchantCode;

- (BOOL) hasBillOrderNo;
- (NSString*) billOrderNo;
- (ContentBuilder*) setBillOrderNo:(NSString*) value;
- (ContentBuilder*) clearBillOrderNo;

- (BOOL) hasChannelType;
- (NSString*) channelType;
- (ContentBuilder*) setChannelType:(NSString*) value;
- (ContentBuilder*) clearChannelType;

- (BOOL) hasOrderAmount;
- (NSString*) orderAmount;
- (ContentBuilder*) setOrderAmount:(NSString*) value;
- (ContentBuilder*) clearOrderAmount;

- (BOOL) hasPayMode;
- (NSString*) payMode;
- (ContentBuilder*) setPayMode:(NSString*) value;
- (ContentBuilder*) clearPayMode;

- (BOOL) hasPayAmount;
- (NSString*) payAmount;
- (ContentBuilder*) setPayAmount:(NSString*) value;
- (ContentBuilder*) clearPayAmount;

- (BOOL) hasOrderStatus;
- (NSString*) orderStatus;
- (ContentBuilder*) setOrderStatus:(NSString*) value;
- (ContentBuilder*) clearOrderStatus;

- (BOOL) hasOutOrderType;
- (NSString*) outOrderType;
- (ContentBuilder*) setOutOrderType:(NSString*) value;
- (ContentBuilder*) clearOutOrderType;

- (BOOL) hasTxnTimeStart;
- (NSString*) txnTimeStart;
- (ContentBuilder*) setTxnTimeStart:(NSString*) value;
- (ContentBuilder*) clearTxnTimeStart;

- (BOOL) hasTxnTimeExpire;
- (NSString*) txnTimeExpire;
- (ContentBuilder*) setTxnTimeExpire:(NSString*) value;
- (ContentBuilder*) clearTxnTimeExpire;

- (BOOL) hasPayStatus;
- (NSString*) payStatus;
- (ContentBuilder*) setPayStatus:(NSString*) value;
- (ContentBuilder*) clearPayStatus;

- (BOOL) hasProductInfo;
- (ContentProductInfo*) productInfo;
- (ContentBuilder*) setProductInfo:(ContentProductInfo*) value;
- (ContentBuilder*) setProductInfoBuilder:(ContentProductInfoBuilder*) builderForValue;
- (ContentBuilder*) mergeProductInfo:(ContentProductInfo*) value;
- (ContentBuilder*) clearProductInfo;

- (NSMutableArray *)payMethod;
- (ContentPayMethod*)payMethodAtIndex:(NSUInteger)index;
- (ContentBuilder *)addPayMethod:(ContentPayMethod*)value;
- (ContentBuilder *)setPayMethodArray:(NSArray *)array;
- (ContentBuilder *)clearPayMethod;

- (BOOL) hasOutEquityCode;
- (NSString*) outEquityCode;
- (ContentBuilder*) setOutEquityCode:(NSString*) value;
- (ContentBuilder*) clearOutEquityCode;

- (BOOL) hasOutEquityAmount;
- (NSString*) outEquityAmount;
- (ContentBuilder*) setOutEquityAmount:(NSString*) value;
- (ContentBuilder*) clearOutEquityAmount;

- (BOOL) hasPayMethodId;
- (NSString*) payMethodId;
- (ContentBuilder*) setPayMethodId:(NSString*) value;
- (ContentBuilder*) clearPayMethodId;

- (NSMutableArray *)instalment;
- (ContentInstalment*)instalmentAtIndex:(NSUInteger)index;
- (ContentBuilder *)addInstalment:(ContentInstalment*)value;
- (ContentBuilder *)setInstalmentArray:(NSArray *)array;
- (ContentBuilder *)clearInstalment;

- (BOOL) hasInstalmentId;
- (NSString*) instalmentId;
- (ContentBuilder*) setInstalmentId:(NSString*) value;
- (ContentBuilder*) clearInstalmentId;

- (BOOL) hasTxnEndTime;
- (NSString*) txnEndTime;
- (ContentBuilder*) setTxnEndTime:(NSString*) value;
- (ContentBuilder*) clearTxnEndTime;

- (BOOL) hasValidateElement;
- (NSString*) validateElement;
- (ContentBuilder*) setValidateElement:(NSString*) value;
- (ContentBuilder*) clearValidateElement;

- (BOOL) hasSMsCode;
- (NSString*) sMsCode;
- (ContentBuilder*) setSMsCode:(NSString*) value;
- (ContentBuilder*) clearSMsCode;

- (NSMutableArray *)voucher;
- (ContentVoucher*)voucherAtIndex:(NSUInteger)index;
- (ContentBuilder *)addVoucher:(ContentVoucher*)value;
- (ContentBuilder *)setVoucherArray:(NSArray *)array;
- (ContentBuilder *)clearVoucher;

- (NSMutableArray *)ateTradeOrder;
- (ContentAteTradeOrder*)ateTradeOrderAtIndex:(NSUInteger)index;
- (ContentBuilder *)addAteTradeOrder:(ContentAteTradeOrder*)value;
- (ContentBuilder *)setAteTradeOrderArray:(NSArray *)array;
- (ContentBuilder *)clearAteTradeOrder;

- (BOOL) hasEquityAmount;
- (NSString*) equityAmount;
- (ContentBuilder*) setEquityAmount:(NSString*) value;
- (ContentBuilder*) clearEquityAmount;

- (BOOL) hasSupportFinger;
- (NSString*) supportFinger;
- (ContentBuilder*) setSupportFinger:(NSString*) value;
- (ContentBuilder*) clearSupportFinger;

- (BOOL) hasType;
- (NSString*) type;
- (ContentBuilder*) setType:(NSString*) value;
- (ContentBuilder*) clearType;

- (BOOL) hasTradeStatus;
- (NSString*) tradeStatus;
- (ContentBuilder*) setTradeStatus:(NSString*) value;
- (ContentBuilder*) clearTradeStatus;

- (BOOL) hasProductDesc;
- (NSString*) productDesc;
- (ContentBuilder*) setProductDesc:(NSString*) value;
- (ContentBuilder*) clearProductDesc;

- (BOOL) hasSubMerchantName;
- (NSString*) subMerchantName;
- (ContentBuilder*) setSubMerchantName:(NSString*) value;
- (ContentBuilder*) clearSubMerchantName;

- (BOOL) hasMemo;
- (NSString*) memo;
- (ContentBuilder*) setMemo:(NSString*) value;
- (ContentBuilder*) clearMemo;

- (BOOL) hasNotifyMode;
- (NSString*) notifyMode;
- (ContentBuilder*) setNotifyMode:(NSString*) value;
- (ContentBuilder*) clearNotifyMode;

- (NSMutableArray *)memberList;
- (ContentMemberTwo*)memberListAtIndex:(NSUInteger)index;
- (ContentBuilder *)addMemberList:(ContentMemberTwo*)value;
- (ContentBuilder *)setMemberListArray:(NSArray *)array;
- (ContentBuilder *)clearMemberList;

- (BOOL) hasGpsInfo;
- (NSString*) gpsInfo;
- (ContentBuilder*) setGpsInfo:(NSString*) value;
- (ContentBuilder*) clearGpsInfo;

- (BOOL) hasPublishNo;
- (NSString*) publishNo;
- (ContentBuilder*) setPublishNo:(NSString*) value;
- (ContentBuilder*) clearPublishNo;

- (BOOL) hasResolution;
- (NSString*) resolution;
- (ContentBuilder*) setResolution:(NSString*) value;
- (ContentBuilder*) clearResolution;

- (BOOL) hasMsgTypeId;
- (NSString*) msgTypeId;
- (ContentBuilder*) setMsgTypeId:(NSString*) value;
- (ContentBuilder*) clearMsgTypeId;

- (BOOL) hasLastRecordId;
- (NSString*) lastRecordId;
- (ContentBuilder*) setLastRecordId:(NSString*) value;
- (ContentBuilder*) clearLastRecordId;

- (BOOL) hasScollUp;
- (NSString*) scollUp;
- (ContentBuilder*) setScollUp:(NSString*) value;
- (ContentBuilder*) clearScollUp;

- (BOOL) hasJsonCallBack;
- (NSString*) jsonCallBack;
- (ContentBuilder*) setJsonCallBack:(NSString*) value;
- (ContentBuilder*) clearJsonCallBack;

- (NSMutableArray *)msgTypeInfo;
- (ContentMsgTypeInfo*)msgTypeInfoAtIndex:(NSUInteger)index;
- (ContentBuilder *)addMsgTypeInfo:(ContentMsgTypeInfo*)value;
- (ContentBuilder *)setMsgTypeInfoArray:(NSArray *)array;
- (ContentBuilder *)clearMsgTypeInfo;

- (NSMutableArray *)msgInfo;
- (ContentMsgInfo*)msgInfoAtIndex:(NSUInteger)index;
- (ContentBuilder *)addMsgInfo:(ContentMsgInfo*)value;
- (ContentBuilder *)setMsgInfoArray:(NSArray *)array;
- (ContentBuilder *)clearMsgInfo;

- (BOOL) hasMsgId;
- (NSString*) msgId;
- (ContentBuilder*) setMsgId:(NSString*) value;
- (ContentBuilder*) clearMsgId;

- (NSMutableArray *)resourceInfo;
- (ContentResourceInfo*)resourceInfoAtIndex:(NSUInteger)index;
- (ContentBuilder *)addResourceInfo:(ContentResourceInfo*)value;
- (ContentBuilder *)setResourceInfoArray:(NSArray *)array;
- (ContentBuilder *)clearResourceInfo;

- (NSMutableArray *)commonZipInfo;
- (ContentCommonZipInfo*)commonZipInfoAtIndex:(NSUInteger)index;
- (ContentBuilder *)addCommonZipInfo:(ContentCommonZipInfo*)value;
- (ContentBuilder *)setCommonZipInfoArray:(NSArray *)array;
- (ContentBuilder *)clearCommonZipInfo;

- (NSMutableArray *)shareInfo;
- (ContentShareInfo*)shareInfoAtIndex:(NSUInteger)index;
- (ContentBuilder *)addShareInfo:(ContentShareInfo*)value;
- (ContentBuilder *)setShareInfoArray:(NSArray *)array;
- (ContentBuilder *)clearShareInfo;

- (BOOL) hasResourceId;
- (NSString*) resourceId;
- (ContentBuilder*) setResourceId:(NSString*) value;
- (ContentBuilder*) clearResourceId;

- (BOOL) hasVcsBizType;
- (NSString*) vcsBizType;
- (ContentBuilder*) setVcsBizType:(NSString*) value;
- (ContentBuilder*) clearVcsBizType;

- (BOOL) hasMsg;
- (NSString*) msg;
- (ContentBuilder*) setMsg:(NSString*) value;
- (ContentBuilder*) clearMsg;

- (BOOL) hasRepayCode;
- (NSString*) repayCode;
- (ContentBuilder*) setRepayCode:(NSString*) value;
- (ContentBuilder*) clearRepayCode;

- (NSMutableArray *)userAppLoginInfo;
- (ContentUserAppLoginInfo*)userAppLoginInfoAtIndex:(NSUInteger)index;
- (ContentBuilder *)addUserAppLoginInfo:(ContentUserAppLoginInfo*)value;
- (ContentBuilder *)setUserAppLoginInfoArray:(NSArray *)array;
- (ContentBuilder *)clearUserAppLoginInfo;

- (BOOL) hasResultType;
- (NSString*) resultType;
- (ContentBuilder*) setResultType:(NSString*) value;
- (ContentBuilder*) clearResultType;

- (NSMutableArray *)conflictAcc;
- (ContentConflictAcc*)conflictAccAtIndex:(NSUInteger)index;
- (ContentBuilder *)addConflictAcc:(ContentConflictAcc*)value;
- (ContentBuilder *)setConflictAccArray:(NSArray *)array;
- (ContentBuilder *)clearConflictAcc;

- (BOOL) hasSysFrom;
- (NSString*) sysFrom;
- (ContentBuilder*) setSysFrom:(NSString*) value;
- (ContentBuilder*) clearSysFrom;

- (BOOL) hasLoginPin;
- (NSString*) loginPin;
- (ContentBuilder*) setLoginPin:(NSString*) value;
- (ContentBuilder*) clearLoginPin;

- (BOOL) hasNewLoginPin;
- (NSString*) newLoginPin NS_RETURNS_NOT_RETAINED;
- (ContentBuilder*) setNewLoginPin:(NSString*) value;
- (ContentBuilder*) clearNewLoginPin;

- (BOOL) hasPayPwd;
- (NSString*) payPwd;
- (ContentBuilder*) setPayPwd:(NSString*) value;
- (ContentBuilder*) clearPayPwd;

- (BOOL) hasNewPayPwd;
- (NSString*) newPayPwd NS_RETURNS_NOT_RETAINED;
- (ContentBuilder*) setNewPayPwd:(NSString*) value;
- (ContentBuilder*) clearNewPayPwd;

- (BOOL) hasPayPwdResetFlag;
- (NSString*) payPwdResetFlag;
- (ContentBuilder*) setPayPwdResetFlag:(NSString*) value;
- (ContentBuilder*) clearPayPwdResetFlag;

- (BOOL) hasSex;
- (NSString*) sex;
- (ContentBuilder*) setSex:(NSString*) value;
- (ContentBuilder*) clearSex;

- (BOOL) hasBirthday;
- (NSString*) birthday;
- (ContentBuilder*) setBirthday:(NSString*) value;
- (ContentBuilder*) clearBirthday;

- (BOOL) hasNationality;
- (NSString*) nationality;
- (ContentBuilder*) setNationality:(NSString*) value;
- (ContentBuilder*) clearNationality;

- (BOOL) hasIssuingAuthority;
- (NSString*) issuingAuthority;
- (ContentBuilder*) setIssuingAuthority:(NSString*) value;
- (ContentBuilder*) clearIssuingAuthority;

- (NSMutableArray *)cardInfo;
- (ContentCardInfo*)cardInfoAtIndex:(NSUInteger)index;
- (ContentBuilder *)addCardInfo:(ContentCardInfo*)value;
- (ContentBuilder *)setCardInfoArray:(NSArray *)array;
- (ContentBuilder *)clearCardInfo;

- (BOOL) hasSummarizeInfo;
- (ContentSummarizeInfo*) summarizeInfo;
- (ContentBuilder*) setSummarizeInfo:(ContentSummarizeInfo*) value;
- (ContentBuilder*) setSummarizeInfoBuilder:(ContentSummarizeInfoBuilder*) builderForValue;
- (ContentBuilder*) mergeSummarizeInfo:(ContentSummarizeInfo*) value;
- (ContentBuilder*) clearSummarizeInfo;

- (BOOL) hasCurrentPage;
- (NSString*) currentPage;
- (ContentBuilder*) setCurrentPage:(NSString*) value;
- (ContentBuilder*) clearCurrentPage;

- (BOOL) hasPageSize;
- (NSString*) pageSize;
- (ContentBuilder*) setPageSize:(NSString*) value;
- (ContentBuilder*) clearPageSize;

- (NSMutableArray *)txnInfo;
- (ContentTxnInfo*)txnInfoAtIndex:(NSUInteger)index;
- (ContentBuilder *)addTxnInfo:(ContentTxnInfo*)value;
- (ContentBuilder *)setTxnInfoArray:(NSArray *)array;
- (ContentBuilder *)clearTxnInfo;

- (BOOL) hasApplyTime;
- (NSString*) applyTime;
- (ContentBuilder*) setApplyTime:(NSString*) value;
- (ContentBuilder*) clearApplyTime;

- (BOOL) hasTotalFee;
- (NSString*) totalFee;
- (ContentBuilder*) setTotalFee:(NSString*) value;
- (ContentBuilder*) clearTotalFee;

- (BOOL) hasTipInfo;
- (NSString*) tipInfo;
- (ContentBuilder*) setTipInfo:(NSString*) value;
- (ContentBuilder*) clearTipInfo;

- (BOOL) hasCheckCode;
- (NSString*) checkCode;
- (ContentBuilder*) setCheckCode:(NSString*) value;
- (ContentBuilder*) clearCheckCode;

- (BOOL) hasTotal;
- (NSString*) total;
- (ContentBuilder*) setTotal:(NSString*) value;
- (ContentBuilder*) clearTotal;

- (BOOL) hasRepayAmt;
- (NSString*) repayAmt;
- (ContentBuilder*) setRepayAmt:(NSString*) value;
- (ContentBuilder*) clearRepayAmt;

- (BOOL) hasBillOrderId;
- (NSString*) billOrderId;
- (ContentBuilder*) setBillOrderId:(NSString*) value;
- (ContentBuilder*) clearBillOrderId;

- (BOOL) hasTxnAcctNo;
- (NSString*) txnAcctNo;
- (ContentBuilder*) setTxnAcctNo:(NSString*) value;
- (ContentBuilder*) clearTxnAcctNo;

- (BOOL) hasLastRowNum;
- (NSString*) lastRowNum;
- (ContentBuilder*) setLastRowNum:(NSString*) value;
- (ContentBuilder*) clearLastRowNum;

- (BOOL) hasInfo;
- (NSString*) info;
- (ContentBuilder*) setInfo:(NSString*) value;
- (ContentBuilder*) clearInfo;

- (NSMutableArray *)creditOrder;
- (ContentCreditOrder*)creditOrderAtIndex:(NSUInteger)index;
- (ContentBuilder *)addCreditOrder:(ContentCreditOrder*)value;
- (ContentBuilder *)setCreditOrderArray:(NSArray *)array;
- (ContentBuilder *)clearCreditOrder;

- (BOOL) hasRepayStatus;
- (NSString*) repayStatus;
- (ContentBuilder*) setRepayStatus:(NSString*) value;
- (ContentBuilder*) clearRepayStatus;

- (BOOL) hasInterest;
- (NSString*) interest;
- (ContentBuilder*) setInterest:(NSString*) value;
- (ContentBuilder*) clearInterest;

- (BOOL) hasReturnAmt;
- (NSString*) returnAmt;
- (ContentBuilder*) setReturnAmt:(NSString*) value;
- (ContentBuilder*) clearReturnAmt;

- (BOOL) hasStages;
- (NSString*) stages;
- (ContentBuilder*) setStages:(NSString*) value;
- (ContentBuilder*) clearStages;

- (NSMutableArray *)divide;
- (ContentDivide*)divideAtIndex:(NSUInteger)index;
- (ContentBuilder *)addDivide:(ContentDivide*)value;
- (ContentBuilder *)setDivideArray:(NSArray *)array;
- (ContentBuilder *)clearDivide;

- (NSMutableArray *)repayOrder;
- (ContentRepayOrder*)repayOrderAtIndex:(NSUInteger)index;
- (ContentBuilder *)addRepayOrder:(ContentRepayOrder*)value;
- (ContentBuilder *)setRepayOrderArray:(NSArray *)array;
- (ContentBuilder *)clearRepayOrder;

- (NSMutableArray *)payTypes;
- (ContentPayType*)payTypesAtIndex:(NSUInteger)index;
- (ContentBuilder *)addPayTypes:(ContentPayType*)value;
- (ContentBuilder *)setPayTypesArray:(NSArray *)array;
- (ContentBuilder *)clearPayTypes;

- (BOOL) hasPayType;
- (NSString*) payType;
- (ContentBuilder*) setPayType:(NSString*) value;
- (ContentBuilder*) clearPayType;

- (NSMutableArray *)repayRecord;
- (ContentRepayRecord*)repayRecordAtIndex:(NSUInteger)index;
- (ContentBuilder *)addRepayRecord:(ContentRepayRecord*)value;
- (ContentBuilder *)setRepayRecordArray:(NSArray *)array;
- (ContentBuilder *)clearRepayRecord;

- (BOOL) hasAccountAmt;
- (NSString*) accountAmt;
- (ContentBuilder*) setAccountAmt:(NSString*) value;
- (ContentBuilder*) clearAccountAmt;

- (BOOL) hasStatusName;
- (NSString*) statusName;
- (ContentBuilder*) setStatusName:(NSString*) value;
- (ContentBuilder*) clearStatusName;

- (BOOL) hasForceFaceCheck;
- (NSString*) forceFaceCheck;
- (ContentBuilder*) setForceFaceCheck:(NSString*) value;
- (ContentBuilder*) clearForceFaceCheck;

- (BOOL) hasAllowRepay;
- (NSString*) allowRepay;
- (ContentBuilder*) setAllowRepay:(NSString*) value;
- (ContentBuilder*) clearAllowRepay;

- (BOOL) hasLocationProvince;
- (NSString*) locationProvince;
- (ContentBuilder*) setLocationProvince:(NSString*) value;
- (ContentBuilder*) clearLocationProvince;

- (BOOL) hasLocationCity;
- (NSString*) locationCity;
- (ContentBuilder*) setLocationCity:(NSString*) value;
- (ContentBuilder*) clearLocationCity;

- (BOOL) hasLocationDistrict;
- (NSString*) locationDistrict;
- (ContentBuilder*) setLocationDistrict:(NSString*) value;
- (ContentBuilder*) clearLocationDistrict;

- (BOOL) hasLocationAddress;
- (NSString*) locationAddress;
- (ContentBuilder*) setLocationAddress:(NSString*) value;
- (ContentBuilder*) clearLocationAddress;

- (BOOL) hasKakaUrl;
- (NSString*) kakaUrl;
- (ContentBuilder*) setKakaUrl:(NSString*) value;
- (ContentBuilder*) clearKakaUrl;

- (BOOL) hasDoudouUrl;
- (NSString*) doudouUrl;
- (ContentBuilder*) setDoudouUrl:(NSString*) value;
- (ContentBuilder*) clearDoudouUrl;

- (BOOL) hasRepayId;
- (NSString*) repayId;
- (ContentBuilder*) setRepayId:(NSString*) value;
- (ContentBuilder*) clearRepayId;

- (NSMutableArray *)contract;
- (ContentContract*)contractAtIndex:(NSUInteger)index;
- (ContentBuilder *)addContract:(ContentContract*)value;
- (ContentBuilder *)setContractArray:(NSArray *)array;
- (ContentBuilder *)clearContract;

- (BOOL) hasUrl;
- (NSString*) url;
- (ContentBuilder*) setUrl:(NSString*) value;
- (ContentBuilder*) clearUrl;

- (BOOL) hasFrozenInfo;
- (ContentFrozenInfo*) frozenInfo;
- (ContentBuilder*) setFrozenInfo:(ContentFrozenInfo*) value;
- (ContentBuilder*) setFrozenInfoBuilder:(ContentFrozenInfoBuilder*) builderForValue;
- (ContentBuilder*) mergeFrozenInfo:(ContentFrozenInfo*) value;
- (ContentBuilder*) clearFrozenInfo;

- (BOOL) hasFcsCreditAmt;
- (NSString*) fcsCreditAmt;
- (ContentBuilder*) setFcsCreditAmt:(NSString*) value;
- (ContentBuilder*) clearFcsCreditAmt;

- (BOOL) hasLeftFcsCreditAmt;
- (NSString*) leftFcsCreditAmt;
- (ContentBuilder*) setLeftFcsCreditAmt:(NSString*) value;
- (ContentBuilder*) clearLeftFcsCreditAmt;

- (BOOL) hasFcsCreditAmtStatus;
- (NSString*) fcsCreditAmtStatus;
- (ContentBuilder*) setFcsCreditAmtStatus:(NSString*) value;
- (ContentBuilder*) clearFcsCreditAmtStatus;

- (BOOL) hasFcsCreditAmtType;
- (NSString*) fcsCreditAmtType;
- (ContentBuilder*) setFcsCreditAmtType:(NSString*) value;
- (ContentBuilder*) clearFcsCreditAmtType;

- (BOOL) hasFcsCreditUrl;
- (NSString*) fcsCreditUrl;
- (ContentBuilder*) setFcsCreditUrl:(NSString*) value;
- (ContentBuilder*) clearFcsCreditUrl;

- (BOOL) hasLeftCreditAmtName;
- (NSString*) leftCreditAmtName;
- (ContentBuilder*) setLeftCreditAmtName:(NSString*) value;
- (ContentBuilder*) clearLeftCreditAmtName;

- (BOOL) hasTotalCreditAmtName;
- (NSString*) totalCreditAmtName;
- (ContentBuilder*) setTotalCreditAmtName:(NSString*) value;
- (ContentBuilder*) clearTotalCreditAmtName;

- (BOOL) hasFcsCreditName;
- (NSString*) fcsCreditName;
- (ContentBuilder*) setFcsCreditName:(NSString*) value;
- (ContentBuilder*) clearFcsCreditName;

- (BOOL) hasFcsName;
- (NSString*) fcsName;
- (ContentBuilder*) setFcsName:(NSString*) value;
- (ContentBuilder*) clearFcsName;

- (BOOL) hasQuotaShowType;
- (NSString*) quotaShowType;
- (ContentBuilder*) setQuotaShowType:(NSString*) value;
- (ContentBuilder*) clearQuotaShowType;

- (BOOL) hasFcsMerchantName;
- (NSString*) fcsMerchantName;
- (ContentBuilder*) setFcsMerchantName:(NSString*) value;
- (ContentBuilder*) clearFcsMerchantName;

- (BOOL) hasLeftFcsCreditName;
- (NSString*) leftFcsCreditName;
- (ContentBuilder*) setLeftFcsCreditName:(NSString*) value;
- (ContentBuilder*) clearLeftFcsCreditName;

- (BOOL) hasSupplementInfo;
- (NSString*) supplementInfo;
- (ContentBuilder*) setSupplementInfo:(NSString*) value;
- (ContentBuilder*) clearSupplementInfo;

- (BOOL) hasExtInfo;
- (NSString*) extInfo;
- (ContentBuilder*) setExtInfo:(NSString*) value;
- (ContentBuilder*) clearExtInfo;

- (BOOL) hasSort;
- (NSString*) sort;
- (ContentBuilder*) setSort:(NSString*) value;
- (ContentBuilder*) clearSort;

- (NSMutableArray *)quotaList;
- (ContentResult*)quotaListAtIndex:(NSUInteger)index;
- (ContentBuilder *)addQuotaList:(ContentResult*)value;
- (ContentBuilder *)setQuotaListArray:(NSArray *)array;
- (ContentBuilder *)clearQuotaList;

- (BOOL) hasIsShowPreQuotaAmt;
- (NSString*) isShowPreQuotaAmt;
- (ContentBuilder*) setIsShowPreQuotaAmt:(NSString*) value;
- (ContentBuilder*) clearIsShowPreQuotaAmt;

- (BOOL) hasPreFcsAmt;
- (NSString*) preFcsAmt;
- (ContentBuilder*) setPreFcsAmt:(NSString*) value;
- (ContentBuilder*) clearPreFcsAmt;

- (BOOL) hasPreFcsUrl;
- (NSString*) preFcsUrl;
- (ContentBuilder*) setPreFcsUrl:(NSString*) value;
- (ContentBuilder*) clearPreFcsUrl;

- (NSMutableArray *)freeList;
- (ContentResult*)freeListAtIndex:(NSUInteger)index;
- (ContentBuilder *)addFreeList:(ContentResult*)value;
- (ContentBuilder *)setFreeListArray:(NSArray *)array;
- (ContentBuilder *)clearFreeList;

- (BOOL) hasUserGrade;
- (NSString*) userGrade;
- (ContentBuilder*) setUserGrade:(NSString*) value;
- (ContentBuilder*) clearUserGrade;

- (BOOL) hasMemberTwo;
- (ContentMemberTwo*) memberTwo;
- (ContentBuilder*) setMemberTwo:(ContentMemberTwo*) value;
- (ContentBuilder*) setMemberTwoBuilder:(ContentMemberTwoBuilder*) builderForValue;
- (ContentBuilder*) mergeMemberTwo:(ContentMemberTwo*) value;
- (ContentBuilder*) clearMemberTwo;

- (BOOL) hasMebCode;
- (NSString*) mebCode;
- (ContentBuilder*) setMebCode:(NSString*) value;
- (ContentBuilder*) clearMebCode;

- (BOOL) hasUserName;
- (NSString*) userName;
- (ContentBuilder*) setUserName:(NSString*) value;
- (ContentBuilder*) clearUserName;

- (BOOL) hasLastRequestTime;
- (NSString*) lastRequestTime;
- (ContentBuilder*) setLastRequestTime:(NSString*) value;
- (ContentBuilder*) clearLastRequestTime;

- (BOOL) hasCardInfoObject;
- (ContentCardInfo*) cardInfoObject;
- (ContentBuilder*) setCardInfoObject:(ContentCardInfo*) value;
- (ContentBuilder*) setCardInfoObjectBuilder:(ContentCardInfoBuilder*) builderForValue;
- (ContentBuilder*) mergeCardInfoObject:(ContentCardInfo*) value;
- (ContentBuilder*) clearCardInfoObject;

- (BOOL) hasOrderInfo;
- (ContentOrderInfo*) orderInfo;
- (ContentBuilder*) setOrderInfo:(ContentOrderInfo*) value;
- (ContentBuilder*) setOrderInfoBuilder:(ContentOrderInfoBuilder*) builderForValue;
- (ContentBuilder*) mergeOrderInfo:(ContentOrderInfo*) value;
- (ContentBuilder*) clearOrderInfo;

- (NSMutableArray *)productGroup;
- (ContentProductGroup*)productGroupAtIndex:(NSUInteger)index;
- (ContentBuilder *)addProductGroup:(ContentProductGroup*)value;
- (ContentBuilder *)setProductGroupArray:(NSArray *)array;
- (ContentBuilder *)clearProductGroup;

- (BOOL) hasAmtType;
- (NSString*) amtType;
- (ContentBuilder*) setAmtType:(NSString*) value;
- (ContentBuilder*) clearAmtType;

- (NSMutableArray *)withdrawLimit;
- (ContentWithdrawLimit*)withdrawLimitAtIndex:(NSUInteger)index;
- (ContentBuilder *)addWithdrawLimit:(ContentWithdrawLimit*)value;
- (ContentBuilder *)setWithdrawLimitArray:(NSArray *)array;
- (ContentBuilder *)clearWithdrawLimit;

- (BOOL) hasEquityCode;
- (NSString*) equityCode;
- (ContentBuilder*) setEquityCode:(NSString*) value;
- (ContentBuilder*) clearEquityCode;

- (BOOL) hasFunctionCode;
- (NSString*) functionCode;
- (ContentBuilder*) setFunctionCode:(NSString*) value;
- (ContentBuilder*) clearFunctionCode;

- (BOOL) hasTwSign;
- (NSString*) twSign;
- (ContentBuilder*) setTwSign:(NSString*) value;
- (ContentBuilder*) clearTwSign;

- (BOOL) hasLeftSumAmt;
- (NSString*) leftSumAmt;
- (ContentBuilder*) setLeftSumAmt:(NSString*) value;
- (ContentBuilder*) clearLeftSumAmt;

- (BOOL) hasVirtualOrderAmt;
- (NSString*) virtualOrderAmt;
- (ContentBuilder*) setVirtualOrderAmt:(NSString*) value;
- (ContentBuilder*) clearVirtualOrderAmt;

- (BOOL) hasSumCreditAmt;
- (NSString*) sumCreditAmt;
- (ContentBuilder*) setSumCreditAmt:(NSString*) value;
- (ContentBuilder*) clearSumCreditAmt;

- (BOOL) hasShowVoucher;
- (NSString*) showVoucher;
- (ContentBuilder*) setShowVoucher:(NSString*) value;
- (ContentBuilder*) clearShowVoucher;

- (NSMutableArray *)equityInfo;
- (ContentEquityInfo*)equityInfoAtIndex:(NSUInteger)index;
- (ContentBuilder *)addEquityInfo:(ContentEquityInfo*)value;
- (ContentBuilder *)setEquityInfoArray:(NSArray *)array;
- (ContentBuilder *)clearEquityInfo;

- (NSMutableArray *)activity;
- (ContentActivity*)activityAtIndex:(NSUInteger)index;
- (ContentBuilder *)addActivity:(ContentActivity*)value;
- (ContentBuilder *)setActivityArray:(NSArray *)array;
- (ContentBuilder *)clearActivity;

- (BOOL) hasBillId;
- (NSString*) billId;
- (ContentBuilder*) setBillId:(NSString*) value;
- (ContentBuilder*) clearBillId;

- (BOOL) hasSiedc;
- (NSString*) siedc;
- (ContentBuilder*) setSiedc:(NSString*) value;
- (ContentBuilder*) clearSiedc;

- (NSMutableArray *)interests;
- (ContentInterest*)interestsAtIndex:(NSUInteger)index;
- (ContentBuilder *)addInterests:(ContentInterest*)value;
- (ContentBuilder *)setInterestsArray:(NSArray *)array;
- (ContentBuilder *)clearInterests;

- (BOOL) hasQueryInterval;
- (NSString*) queryInterval;
- (ContentBuilder*) setQueryInterval:(NSString*) value;
- (ContentBuilder*) clearQueryInterval;

- (BOOL) hasQueryTimes;
- (NSString*) queryTimes;
- (ContentBuilder*) setQueryTimes:(NSString*) value;
- (ContentBuilder*) clearQueryTimes;

- (BOOL) hasStlMerchantCode;
- (NSString*) stlMerchantCode;
- (ContentBuilder*) setStlMerchantCode:(NSString*) value;
- (ContentBuilder*) clearStlMerchantCode;

- (BOOL) hasEquityMessage;
- (NSString*) equityMessage;
- (ContentBuilder*) setEquityMessage:(NSString*) value;
- (ContentBuilder*) clearEquityMessage;

- (BOOL) hasOutEquityMessage;
- (NSString*) outEquityMessage;
- (ContentBuilder*) setOutEquityMessage:(NSString*) value;
- (ContentBuilder*) clearOutEquityMessage;

- (NSMutableArray *)seedData;
- (ContentSeedData*)seedDataAtIndex:(NSUInteger)index;
- (ContentBuilder *)addSeedData:(ContentSeedData*)value;
- (ContentBuilder *)setSeedDataArray:(NSArray *)array;
- (ContentBuilder *)clearSeedData;

- (NSMutableArray *)extMap;
- (ContentExtMap*)extMapAtIndex:(NSUInteger)index;
- (ContentBuilder *)addExtMap:(ContentExtMap*)value;
- (ContentBuilder *)setExtMapArray:(NSArray *)array;
- (ContentBuilder *)clearExtMap;
@end


// @@protoc_insertion_point(global_scope)
